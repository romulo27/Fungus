-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\controllers\subsystem\vote.dm. ----------------------
/mob/verb/vote()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\chatmessage.dm. ----------------------
/mob/proc/create_chat_message(atom/movable/speaker, datum/language/message_language, raw_message, list/spans, message_mode)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\dna.dm. ----------------------
/mob/proc/set_species(datum/species/mrace, icon_update = 1)
/mob/living/brain/set_species(datum/species/mrace, icon_update = 1)
/mob/living/carbon/set_species(datum/species/mrace, icon_update = TRUE, pref_load = FALSE)
/mob/living/carbon/human/set_species(datum/species/mrace, icon_update = TRUE, pref_load = FALSE)
/mob/proc/has_dna()
/mob/living/carbon/has_dna()
/mob/living/carbon/human/proc/hardset_dna(ui, list/mutation_index, newreal_name, newblood_type, datum/species/mrace, newfeatures, list/default_mutation_genes)
/mob/living/carbon/proc/create_dna()
/mob/living/carbon/proc/updateappearance(icon_update=1, mutcolor_update=0, mutations_overlay_update=0)
/mob/living/carbon/human/updateappearance(icon_update=1, mutcolor_update=0, mutations_overlay_update=0)
/mob/proc/domutcheck()
/mob/living/carbon/domutcheck()
/mob/living/carbon/proc/randmut(list/candidates, difficulty = 2)
/mob/living/carbon/proc/easy_randmut(quality = POSITIVE + NEGATIVE + MINOR_NEGATIVE, scrambled = TRUE, sequence = TRUE, exclude_monkey = TRUE)
/mob/living/carbon/proc/randmuti()
/mob/living/carbon/proc/clean_dna()
/mob/living/carbon/proc/clean_randmut(list/candidates, difficulty = 2)
/mob/living/carbon/human/proc/something_horrible()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\forced_movement.dm. ----------------------
/mob/Bump(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\holocall.dm. ----------------------
/mob/camera/aiEye/remote/holo/setLoc()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\mind.dm. ----------------------
/mob/proc/edit_objectives_and_ambitions()
/mob/proc/sync_mind()
/mob/dead/new_player/sync_mind()
/mob/dead/observer/sync_mind()
/mob/proc/mind_initialize()
/mob/living/carbon/mind_initialize()
/mob/living/carbon/human/mind_initialize()
/mob/living/silicon/ai/mind_initialize()
/mob/living/silicon/robot/mind_initialize()
/mob/living/silicon/pai/mind_initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\soullink.dm. ----------------------
/mob/living
/mob/living/Destroy()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\brain_damage\imaginary_friend.dm. ----------------------
/mob/camera/imaginary_friend
/mob/camera/imaginary_friend/Login()
/mob/camera/imaginary_friend/proc/greet()
/mob/camera/imaginary_friend/Initialize(mapload, _trauma)
/mob/camera/imaginary_friend/proc/setup_friend()
/mob/camera/imaginary_friend/proc/Show()
/mob/camera/imaginary_friend/Destroy()
/mob/camera/imaginary_friend/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/camera/imaginary_friend/Hear(message, atom/movable/speaker, datum/language/message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
/mob/camera/imaginary_friend/proc/friend_talk(message)
/mob/camera/imaginary_friend/Move(NewLoc, Dir = 0)
/mob/camera/imaginary_friend/forceMove(atom/destination)
/mob/camera/imaginary_friend/proc/recall()
/mob/camera/imaginary_friend/trapped
/mob/camera/imaginary_friend/trapped/greet()
/mob/camera/imaginary_friend/trapped/setup_friend()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\brain_damage\split_personality.dm. ----------------------
/mob/living/split_personality
/mob/living/split_personality/Initialize(mapload, _trauma)
/mob/living/split_personality/BiologicalLife(delta_time, times_fired)
/mob/living/split_personality/Login()
/mob/living/split_personality/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/split_personality/emote(act, m_type = null, message = null, intentional = FALSE)
/mob/living/split_personality/traitor
/mob/living/split_personality/traitor/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\diseases\_MobProcs.dm. ----------------------
/mob/living/proc/HasDisease(datum/disease/D)
/mob/living/proc/CanContractDisease(datum/disease/D)
/mob/living/proc/ContactContractDisease(datum/disease/D)
/mob/living/carbon/ContactContractDisease(datum/disease/D, target_zone)
/mob/living/proc/AirborneContractDisease(datum/disease/D, force_spread)
/mob/living/carbon/AirborneContractDisease(datum/disease/D, force_spread)
/mob/living/proc/ForceContractDisease(datum/disease/D, make_copy = TRUE, del_on_fail = FALSE)
/mob/living/carbon/human/CanContractDisease(datum/disease/D)
/mob/living/proc/CanSpreadAirborneDisease()
/mob/living/carbon/CanSpreadAirborneDisease()
/mob/living/proc/set_shocked()
/mob/living/proc/reset_shocked()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\elements\flavor_text.dm. ----------------------
/mob/proc/manage_flavor_tests()
/mob/proc/set_pose()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\elements\ghost_role_eligibility.dm. ----------------------
/mob/proc/can_reenter_round(silent = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\martial\cqc.dm. ----------------------
/mob/living/carbon/human/proc/CQC_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\martial\plasma_fist.dm. ----------------------
/mob/living/carbon/human/proc/plasma_fist_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\martial\rising_bass.dm. ----------------------
/mob/living/carbon/human/proc/rising_bass_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\martial\sleeping_carp.dm. ----------------------
/mob/living/carbon/human/UseStaminaBuffer(amount, warn = FALSE, considered_action = TRUE)
/mob/living/carbon/human/proc/sleeping_carp_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\martial\wrestling.dm. ----------------------
/mob/living/carbon/human/proc/wrestling_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\mutations\cluwne.dm. ----------------------
/mob/living/carbon/human/proc/cluwneify()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\mutations\_mutations.dm. ----------------------
/mob/living/proc/update_mutations_overlay()
/mob/living/carbon/human/update_mutations_overlay()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\skills\_check_skills.dm. ----------------------
/mob/verb/check_skills()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\status_effects\debuffs.dm. ----------------------
/mob/living/proc/apply_necropolis_curse(set_curse, duration = 10 MINUTES)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\status_effects\status_effect.dm. ----------------------
/mob/living/proc/apply_status_effect(effect, ...) //applies a given status effect to this mob, returning the effect if it was successful
/mob/living/proc/remove_status_effect(effect, ...) //removes all of a given status effect from this mob, returning TRUE if at least one was removed
/mob/living/proc/has_status_effect(effect) //returns the effect if the mob calling the proc owns the given status effect
/mob/living/proc/has_status_effect_list(effect) //returns a list of effects with matching IDs that the mod owns; use for effects there can be multiple of
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\datums\traits\_quirk.dm. ----------------------
/mob/living/proc/get_trait_string(medical) //helper string. gets a string of all the traits the mob has
/mob/living/proc/cleanse_trait_datums() //removes all trait datums
/mob/living/proc/transfer_trait_datums(mob/living/to_mob)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\atoms.dm. ----------------------
/mob/living/proc/get_blood_dna_list()
/mob/living/carbon/get_blood_dna_list()
/mob/living/carbon/alien/get_blood_dna_list()
/mob/living/carbon/human/add_blood_DNA(list/blood_dna, list/datum/disease/diseases)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\sound.dm. ----------------------
/mob/proc/playsound_local(turf/turf_source, soundin, vol as num, vary, frequency, falloff_exponent = SOUND_FALLOFF_EXPONENT, channel = 0, pressure_affected = TRUE, sound/S, max_distance,
/mob/proc/stop_sound_channel(chan)
/mob/proc/set_sound_channel_volume(channel, volume)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\gamemodes\sandbox\h_sandbox.dm. ----------------------
/mob/proc/CanBuild()
/mob/proc/sandbox_panel()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\machinery\dance_machine.dm. ----------------------
/mob/living/proc/lying_fix()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\machinery\washing_machine.dm. ----------------------
/mob/living/simple_animal/pet/dog/corgi/machine_wash(obj/machinery/washing_machine/WM)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\machinery\camera\tracking.dm. ----------------------
/mob/living/silicon/ai/proc/get_camera_list()
/mob/living/silicon/ai/proc/show_camera_list()
/mob/living/silicon/ai/proc/trackable_mobs()
/mob/living/silicon/ai/verb/ai_camera_track(target_name in trackable_mobs())
/mob/living/silicon/ai/proc/ai_actual_track(mob/living/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\machinery\computer\apc_control.dm. ----------------------
/mob/proc/using_power_flow_console()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\machinery\computer\camera_advanced.dm. ----------------------
/mob/camera/aiEye/remote
/mob/camera/aiEye/remote/update_remote_sight(mob/living/user)
/mob/camera/aiEye/remote/Destroy()
/mob/camera/aiEye/remote/GetViewerClient()
/mob/camera/aiEye/remote/setLoc(T)
/mob/camera/aiEye/remote/relaymove(mob/user,direct)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\machinery\computer\arcade\orion_trail.dm. ----------------------
/mob/living/simple_animal/hostile/syndicate/ranged/smg/orion
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\objs.dm. ----------------------
/mob/proc/unset_machine()
/mob/proc/set_machine(obj/O)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\items\devices\multitool.dm. ----------------------
/mob/camera/aiEye/remote/ai_detector
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\items\devices\PDA\PDA.dm. ----------------------
/mob/living/silicon/ai/proc/cmd_send_pdamesg(mob/user)
/mob/living/silicon/ai/verb/cmd_toggle_pda_receiver()
/mob/living/silicon/ai/verb/cmd_toggle_pda_silent()
/mob/living/silicon/ai/proc/cmd_show_message_log(mob/user)
/mob/living/silicon/robot/proc/cmd_send_pdamesg(mob/user)
/mob/living/silicon/robot/proc/cmd_show_message_log(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\items\implants\implant.dm. ----------------------
/mob/living/proc/can_be_implanted()
/mob/living/silicon/can_be_implanted()
/mob/living/simple_animal/can_be_implanted()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\items\storage\book.dm. ----------------------
/mob/proc/bible_check() //The bible, if held, might protect against certain things
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\items\tanks\jetpack.dm. ----------------------
/mob/proc/get_jetpack()
/mob/living/carbon/get_jetpack()
/mob/living/carbon/human/get_jetpack()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\structures\petrified_statue.dm. ----------------------
/mob/proc/petrify(statue_timer)
/mob/living/carbon/human/petrify(statue_timer)
/mob/living/carbon/monkey/petrify(statue_timer)
/mob/living/simple_animal/pet/dog/corgi/petrify(statue_timer)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\game\objects\structures\crates_lockers\closets\cardboardbox.dm. ----------------------
/mob/living/proc/do_alert_animation(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\actionspeed\_actionspeed_modifier.dm. ----------------------
/mob/proc/add_actionspeed_modifier(datum/actionspeed_modifier/type_or_datum, update = TRUE)
/mob/proc/remove_actionspeed_modifier(datum/actionspeed_modifier/type_id_datum, update = TRUE)
/mob/proc/add_or_update_variable_actionspeed_modifier(datum/actionspeed_modifier/type_id_datum, update = TRUE, multiplicative_slowdown)
/mob/proc/has_actionspeed_modifier(datum/actionspeed_modifier/datum_type_id)
/mob/proc/update_actionspeed()
/mob/proc/initialize_actionspeed()
/mob/proc/get_actionspeed_modifiers()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\admin\verbs\adminjump.dm. ----------------------
/mob/admin_teleport(atom/new_location, message = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\admin\verbs\ak47s.dm. ----------------------
/mob/living/carbon/human/proc/make_terrorism()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\admin\verbs\onlyone.dm. ----------------------
/mob/living/carbon/human/proc/make_scottish()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\admin\verbs\pray.dm. ----------------------
/mob/verb/pray(msg as text)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\blob\blob\overmind.dm. ----------------------
/mob/camera/blob
/mob/camera/blob/Initialize(mapload, starting_points = 60)
/mob/camera/blob/proc/validate_location()
/mob/camera/blob/proc/set_strain(datum/blobstrain/new_strain)
/mob/camera/blob/proc/is_valid_turf(turf/T)
/mob/camera/blob/process()
/mob/camera/blob/proc/victory()
/mob/camera/blob/Destroy()
/mob/camera/blob/Login()
/mob/camera/blob/examine(mob/user)
/mob/camera/blob/update_health_hud()
/mob/camera/blob/proc/add_points(points)
/mob/camera/blob/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/camera/blob/proc/blob_talk(message)
/mob/camera/blob/blob_act(obj/structure/blob/B)
/mob/camera/blob/Stat()
/mob/camera/blob/Move(NewLoc, Dir = 0)
/mob/camera/blob/mind_initialize()
/mob/camera/blob/emote(act, m_type=1, message = null, intentional = FALSE, forced = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\blob\blob\powers.dm. ----------------------
/mob/camera/blob/proc/can_buy(cost = 15)
/mob/camera/blob/proc/place_blob_core(placement_override, pop_override = FALSE)
/mob/camera/blob/verb/transport_core()
/mob/camera/blob/verb/jump_to_node()
/mob/camera/blob/proc/createSpecial(price, blobstrain, nearEquals, needsNode, turf/T)
/mob/camera/blob/verb/toggle_node_req()
/mob/camera/blob/verb/create_shield_power()
/mob/camera/blob/proc/create_shield(turf/T)
/mob/camera/blob/verb/create_resource()
/mob/camera/blob/verb/create_node()
/mob/camera/blob/verb/create_factory()
/mob/camera/blob/verb/create_blobbernaut()
/mob/camera/blob/verb/relocate_core()
/mob/camera/blob/verb/revert()
/mob/camera/blob/proc/remove_blob(turf/T)
/mob/camera/blob/verb/expand_blob_power()
/mob/camera/blob/proc/expand_blob(turf/T)
/mob/camera/blob/verb/rally_spores_power()
/mob/camera/blob/proc/rally_spores(turf/T)
/mob/camera/blob/verb/blob_broadcast()
/mob/camera/blob/verb/strain_reroll()
/mob/camera/blob/proc/reroll_strain()
/mob/camera/blob/verb/blob_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\blob\blob\blobs\blob_mobs.dm. ----------------------
/mob/living/simple_animal/hostile/blob
/mob/living/simple_animal/hostile/blob/update_icons()
/mob/living/simple_animal/hostile/blob/Destroy()
/mob/living/simple_animal/hostile/blob/blob_act(obj/structure/blob/B)
/mob/living/simple_animal/hostile/blob/fire_act(exposed_temperature, exposed_volume)
/mob/living/simple_animal/hostile/blob/CanAllowThrough(atom/movable/mover, turf/target)
/mob/living/simple_animal/hostile/blob/Process_Spacemove(movement_dir = 0)
/mob/living/simple_animal/hostile/blob/proc/blob_chat(msg)
/mob/living/simple_animal/hostile/blob/blobspore
/mob/living/simple_animal/hostile/blob/blobspore/Initialize(mapload, var/obj/structure/blob/factory/linked_node)
/mob/living/simple_animal/hostile/blob/blobspore/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/blob/blobspore/proc/Zombify(mob/living/carbon/human/H)
/mob/living/simple_animal/hostile/blob/blobspore/death(gibbed)
/mob/living/simple_animal/hostile/blob/blobspore/Destroy()
/mob/living/simple_animal/hostile/blob/blobspore/update_icons()
/mob/living/simple_animal/hostile/blob/blobspore/weak
/mob/living/simple_animal/hostile/blob/blobbernaut
/mob/living/simple_animal/hostile/blob/blobbernaut/Initialize(mapload)
/mob/living/simple_animal/hostile/blob/blobbernaut/start_pulling(atom/movable/AM, state, force = pull_force, supress_message = FALSE)
/mob/living/simple_animal/hostile/blob/blobbernaut/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/blob/blobbernaut/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/blob/blobbernaut/update_health_hud()
/mob/living/simple_animal/hostile/blob/blobbernaut/AttackingTarget()
/mob/living/simple_animal/hostile/blob/blobbernaut/update_icons()
/mob/living/simple_animal/hostile/blob/blobbernaut/death(gibbed)
/mob/living/simple_animal/hostile/blob/blobbernaut/independent
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\bloodsucker\bloodsucker_integration.dm. ----------------------
/mob/living/proc/HaveBloodsuckerBodyparts(displaymessage = "") // displaymessage can be something such as "rising from death" for Torpid Sleep. givewarningto is the person receiving messages.
/mob/living/carbon/human/proc/ReturnVampExamine(var/mob/viewer)
/mob/living/carbon/human/proc/ReturnVassalExamine(var/mob/viewer)
/mob/living/carbon/proc/ShowAsPaleExamine()
/mob/living/carbon/human/ShowAsPaleExamine()
/mob/living/carbon/proc/scan_blood_volume()
/mob/living/proc/IsFrenzied()
/mob/living/proc/StartFrenzy(inTime = 120)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\bloodsucker\bloodsucker_life.dm. ----------------------
/mob/proc/CheckBloodsuckerEatFood(food_nutrition)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\bloodsucker\items\bloodsucker_stake.dm. ----------------------
/mob/living/AmStaked()
/mob/proc/AmStaked()
/mob/living/proc/StakeCanKillMe()
/mob/living/carbon/proc/can_be_staked()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\changeling\powers\tiny_prick.dm. ----------------------
/mob/living/carbon/proc/unset_sting()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_mobs.dm. ----------------------
/mob/living/simple_animal/hostile/clockwork
/mob/living/simple_animal/hostile/clockwork/Initialize(mapload)
/mob/living/simple_animal/hostile/clockwork/Login()
/mob/living/simple_animal/hostile/clockwork/ratvar_act()
/mob/living/simple_animal/hostile/clockwork/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/simple_animal/hostile/clockwork/examine(mob/user)
/mob/living/simple_animal/hostile/clockwork/proc/examine_info() //Override this on a by-mob basis to have unique examine info
/mob/living/simple_animal/hostile/clockwork/proc/update_values() //This is called by certain things to check GLOB.ratvar_awakens and GLOB.ratvar_approaches
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_helpers\clock_powerdrain.dm. ----------------------
/mob/living/silicon/robot/power_drain(clockcult_user, drain_weapons = FALSE, recursive = FALSE, drain_amount = MIN_CLOCKCULT_POWER)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_helpers\fabrication_helpers.dm. ----------------------
/mob/living/proc/fabricator_heal(mob/living/user, obj/item/clockwork/replica_fabricator/fabricator)
/mob/living/proc/fabricator_heal_tick(amount)
/mob/living/simple_animal/fabricator_heal_tick(amount)
/mob/living/silicon/fabrication_vals(mob/living/user, obj/item/clockwork/replica_fabricator/fabricator, silent)
/mob/living/simple_animal/hostile/clockwork/fabrication_vals(mob/living/user, obj/item/clockwork/replica_fabricator/fabricator, silent)
/mob/living/simple_animal/drone/cogscarab/fabrication_vals(mob/living/user, obj/item/clockwork/replica_fabricator/fabricator, silent)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_mobs\clockwork_guardian.dm. ----------------------
/mob/living/simple_animal/hostile/clockwork/guardian
/mob/living/simple_animal/hostile/clockwork/guardian/Initialize(mapload)
/mob/living/simple_animal/hostile/clockwork/guardian/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/clockwork/guardian/death(gibbed)
/mob/living/simple_animal/hostile/clockwork/guardian/Stat()
/mob/living/simple_animal/hostile/clockwork/guardian/Process_Spacemove(movement_dir = 0)
/mob/living/simple_animal/hostile/clockwork/guardian/proc/bind_to_host(mob/living/new_host)
/mob/living/simple_animal/hostile/clockwork/guardian/proc/unbind_from_host()
/mob/living/simple_animal/hostile/clockwork/guardian/proc/heal_host()
/mob/living/simple_animal/hostile/clockwork/guardian/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/clockwork/guardian/update_health_hud()
/mob/living/simple_animal/hostile/clockwork/guardian/proc/update_stats()
/mob/living/simple_animal/hostile/clockwork/guardian/AttackingTarget()
/mob/living/simple_animal/hostile/clockwork/guardian/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/hostile/clockwork/guardian/hitby(atom/movable/AM, skipcatch, hitpush, blocked, atom/movable/AM, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/hostile/clockwork/guardian/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/hostile/clockwork/guardian/attack_paw(mob/living/carbon/monkey/M)
/mob/living/simple_animal/hostile/clockwork/guardian/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/simple_animal/hostile/clockwork/guardian/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/simple_animal/hostile/clockwork/guardian/attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/clockwork/guardian/attackby(obj/item/I, mob/user, params)
/mob/living/simple_animal/hostile/clockwork/guardian/proc/blockOrCounter(mob/target, atom/textobject)
/mob/living/simple_animal/hostile/clockwork/guardian/proc/guardian_comms(message)
/mob/living/simple_animal/hostile/clockwork/guardian/proc/return_to_host()
/mob/living/simple_animal/hostile/clockwork/guardian/proc/try_emerge()
/mob/living/simple_animal/hostile/clockwork/guardian/proc/emerge_from_host(hostchosen, force) //Notice that this is a proc rather than a verb - guardians can NOT exit at will, but they CAN return
/mob/living/simple_animal/hostile/clockwork/guardian/get_alt_name()
/mob/living/simple_animal/hostile/clockwork/guardian/proc/is_in_host() //Checks if the guardian is inside of their host
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_mobs\clockwork_marauder.dm. ----------------------
/mob/living/simple_animal/hostile/clockwork/marauder
/mob/living/simple_animal/hostile/clockwork/marauder/examine_info()
/mob/living/simple_animal/hostile/clockwork/marauder/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/clockwork/marauder/update_values()
/mob/living/simple_animal/hostile/clockwork/marauder/death(gibbed)
/mob/living/simple_animal/hostile/clockwork/marauder/Process_Spacemove(movement_dir = 0)
/mob/living/simple_animal/hostile/clockwork/marauder/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/clockwork/marauder/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/clockwork/marauder/proc/deflect_projectile(obj/item/projectile/P)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_mobs\_eminence.dm. ----------------------
/mob/camera/eminence
/mob/camera/eminence/CanPass(atom/movable/mover, turf/target)
/mob/camera/eminence/Move(NewLoc, direct)
/mob/camera/eminence/Process_Spacemove(movement_dir = 0)
/mob/camera/eminence/Login()
/mob/camera/eminence/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/camera/eminence/Hear(message, atom/movable/speaker, datum/language/message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
/mob/camera/eminence/ClickOn(atom/A, params)
/mob/camera/eminence/proc/attempt_recall(obj/structure/destructible/clockwork/massive/celestial_gateway/G)
/mob/camera/eminence/ratvar_act()
/mob/camera/eminence/proc/issue_command(atom/movable/A)
/mob/camera/eminence/proc/superheat_wall(turf/closed/wall/clockwork/wall)
/mob/camera/eminence/proc/eminence_help()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\clockcult\clock_scriptures\scripture_scripts.dm. ----------------------
/mob/proc/stop_void_volt_glow() //Needed so the scripture being qdel()d doesn't prevent it.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\cult\cult.dm. ----------------------
/mob/proc/get_sac_image()
/mob/living/carbon/human/get_sac_image()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\cult\cult_comms.dm. ----------------------
/mob/proc/reckon(turf/final)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\cult\runes.dm. ----------------------
/mob/living/carbon/human/cult_ghost/spill_organs(no_brain, no_organs, no_bodyparts) //cult ghosts never drop a brain
/mob/living/carbon/human/cult_ghost/getorganszone(zone, subzones = 0)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\devil\devil_helpers.dm. ----------------------
/mob/living/proc/check_devil_bane_multiplier(obj/item/weapon, mob/living/attacker)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\devil\imp\imp.dm. ----------------------
/mob/living/simple_animal/imp
/mob/living/simple_animal/imp/Initialize(mapload)
/mob/living/simple_animal/imp/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/imp/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\devil\true_devil\inventory.dm. ----------------------
/mob/living/carbon/true_devil/doUnEquip(obj/item/I, force, silent = FALSE)
/mob/living/carbon/true_devil/update_inv_hands()
/mob/living/carbon/true_devil/remove_overlay(cache_index)
/mob/living/carbon/true_devil/apply_overlay(cache_index)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\devil\true_devil\_true_devil.dm. ----------------------
/mob/living/carbon/true_devil
/mob/living/carbon/true_devil/Initialize(mapload)
/mob/living/carbon/true_devil/create_internal_organs()
/mob/living/carbon/true_devil/proc/convert_to_archdevil()
/mob/living/carbon/true_devil/proc/set_name()
/mob/living/carbon/true_devil/Login()
/mob/living/carbon/true_devil/death(gibbed)
/mob/living/carbon/true_devil/examine(mob/user)
/mob/living/carbon/true_devil/IsAdvancedToolUser()
/mob/living/carbon/true_devil/resist_buckle()
/mob/living/carbon/true_devil/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/living/carbon/true_devil/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null)
/mob/living/carbon/true_devil/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0, visual = 0, type = /atom/movable/screen/fullscreen/tiled/flash, override_protection = 0)
/mob/living/carbon/true_devil/soundbang_act()
/mob/living/carbon/true_devil/get_ear_protection()
/mob/living/carbon/true_devil/attacked_by(obj/item/I, mob/living/user, def_zone, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/carbon/true_devil/singularity_act()
/mob/living/carbon/true_devil/attack_ghost(mob/dead/observer/user as mob)
/mob/living/carbon/true_devil/can_be_revived()
/mob/living/carbon/true_devil/resist_fire()
/mob/living/carbon/true_devil/on_attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/true_devil/handle_breathing()
/mob/living/carbon/true_devil/is_literate()
/mob/living/carbon/true_devil/ex_act(severity, target, origin)
/mob/living/carbon/true_devil/update_body() //we don't use the bodyparts layer for devils.
/mob/living/carbon/true_devil/update_body_parts()
/mob/living/carbon/true_devil/update_damage_overlays() //devils don't have damage overlays.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\disease\disease_mob.dm. ----------------------
/mob/camera/disease
/mob/camera/disease/Initialize(mapload)
/mob/camera/disease/Destroy()
/mob/camera/disease/Login()
/mob/camera/disease/get_status_tab_items()
/mob/camera/disease/examine(mob/user)
/mob/camera/disease/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/camera/disease/Move(NewLoc, Dir = 0)
/mob/camera/disease/Hear(message, atom/movable/speaker, message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
/mob/camera/disease/mind_initialize()
/mob/camera/disease/proc/pick_name()
/mob/camera/disease/proc/infect_random_patient_zero(del_on_fail = TRUE)
/mob/camera/disease/proc/force_infect(mob/living/L)
/mob/camera/disease/proc/end_freemove()
/mob/camera/disease/proc/add_infection(datum/disease/advance/sentient_disease/V)
/mob/camera/disease/proc/remove_infection(datum/disease/advance/sentient_disease/V)
/mob/camera/disease/proc/set_following(mob/living/L)
/mob/camera/disease/proc/follow_next(reverse = FALSE)
/mob/camera/disease/proc/follow_mob(datum/source, newloc, dir)
/mob/camera/disease/DblClickOn(var/atom/A, params)
/mob/camera/disease/ClickOn(var/atom/A, params)
/mob/camera/disease/proc/confirm_initial_infection(mob/living/carbon/human/H)
/mob/camera/disease/proc/adapt_cooldown()
/mob/camera/disease/proc/notify_adapt_ready()
/mob/camera/disease/proc/refresh_adaptation_menu()
/mob/camera/disease/proc/adaptation_menu()
/mob/camera/disease/Topic(href, list/href_list)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\morph\morph.dm. ----------------------
/mob/living/simple_animal/hostile/morph
/mob/living/simple_animal/hostile/morph/Initialize(mapload)
/mob/living/simple_animal/hostile/morph/examine(mob/user)
/mob/living/simple_animal/hostile/morph/med_hud_set_health()
/mob/living/simple_animal/hostile/morph/med_hud_set_status()
/mob/living/simple_animal/hostile/morph/proc/allowed(atom/movable/A) // make it into property/proc ? not sure if worth it
/mob/living/simple_animal/hostile/morph/proc/eat(atom/movable/A)
/mob/living/simple_animal/hostile/morph/ShiftClickOn(atom/movable/A)
/mob/living/simple_animal/hostile/morph/proc/assume(atom/movable/target)
/mob/living/simple_animal/hostile/morph/proc/restore()
/mob/living/simple_animal/hostile/morph/death(gibbed)
/mob/living/simple_animal/hostile/morph/proc/barf_contents()
/mob/living/simple_animal/hostile/morph/wabbajack_act(mob/living/new_mob)
/mob/living/simple_animal/hostile/morph/Aggro() // automated only
/mob/living/simple_animal/hostile/morph/LoseAggro()
/mob/living/simple_animal/hostile/morph/AIShouldSleep(var/list/possible_targets)
/mob/living/simple_animal/hostile/morph/can_track(mob/living/user)
/mob/living/simple_animal/hostile/morph/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\revenant\revenant.dm. ----------------------
/mob/living/simple_animal/revenant
/mob/living/simple_animal/revenant/Initialize(mapload)
/mob/living/simple_animal/revenant/proc/random_revenant_name()
/mob/living/simple_animal/revenant/Login()
/mob/living/simple_animal/revenant/Life(seconds, times_fired)
/mob/living/simple_animal/revenant/get_status_tab_items()
/mob/living/simple_animal/revenant/update_health_hud()
/mob/living/simple_animal/revenant/med_hud_set_health()
/mob/living/simple_animal/revenant/med_hud_set_status()
/mob/living/simple_animal/revenant/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/revenant/ex_act(severity, target, origin)
/mob/living/simple_animal/revenant/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/simple_animal/revenant/blob_act(obj/structure/blob/B)
/mob/living/simple_animal/revenant/singularity_act()
/mob/living/simple_animal/revenant/narsie_act()
/mob/living/simple_animal/revenant/ratvar_act()
/mob/living/simple_animal/revenant/attackby(obj/item/W, mob/living/user, params)
/mob/living/simple_animal/revenant/proc/reset_inhibit()
/mob/living/simple_animal/revenant/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/revenant/dust(just_ash, drop_items, force)
/mob/living/simple_animal/revenant/gib()
/mob/living/simple_animal/revenant/death()
/mob/living/simple_animal/revenant/proc/reveal(time)
/mob/living/simple_animal/revenant/proc/stun(time)
/mob/living/simple_animal/revenant/proc/update_spooky_icon()
/mob/living/simple_animal/revenant/proc/castcheck(essence_cost)
/mob/living/simple_animal/revenant/proc/unlock(essence_cost)
/mob/living/simple_animal/revenant/proc/change_essence_amount(essence_amt, silent = FALSE, source = null)
/mob/living/simple_animal/revenant/proc/telekinesis_cooldown_end()
/mob/living/simple_animal/revenant/proc/death_reset()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\revenant\revenant_abilities.dm. ----------------------
/mob/living/simple_animal/revenant/ClickOn(atom/A, params) //revenants can't interact with the world directly.
/mob/living/simple_animal/revenant/proc/Harvest(mob/living/carbon/human/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\slaughter\slaughter.dm. ----------------------
/mob/living/simple_animal/slaughter
/mob/living/simple_animal/slaughter/Initialize(mapload)
/mob/living/simple_animal/slaughter/UnarmedAttack(atom/A, proximity)
/mob/living/simple_animal/slaughter/phasein()
/mob/living/simple_animal/slaughter/Destroy()
/mob/living/simple_animal/slaughter/proc/release_victims()
/mob/living/simple_animal/slaughter/proc/refresh_consumed_buff()
/mob/living/simple_animal/slaughter/bloodcrawl_swallow(var/mob/living/victim)
/mob/living/simple_animal/slaughter/laughter
/mob/living/simple_animal/slaughter/laughter/ex_act(severity, target, origin)
/mob/living/simple_animal/slaughter/laughter/refresh_consumed_buff()
/mob/living/simple_animal/slaughter/laughter/bloodcrawl_swallow(var/mob/living/victim)
/mob/living/simple_animal/slaughter/laughter/release_victims()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\swarmer\swarmer.dm. ----------------------
/mob/living/simple_animal/hostile/swarmer
/mob/living/simple_animal/hostile/swarmer/Initialize(mapload)
/mob/living/simple_animal/hostile/swarmer/med_hud_set_health()
/mob/living/simple_animal/hostile/swarmer/med_hud_set_status()
/mob/living/simple_animal/hostile/swarmer/Stat()
/mob/living/simple_animal/hostile/swarmer/emp_act()
/mob/living/simple_animal/hostile/swarmer/CanAllowThrough(atom/movable/O)
/mob/living/simple_animal/hostile/swarmer/AttackingTarget()
/mob/living/simple_animal/hostile/swarmer/CtrlClickOn(atom/A)
/mob/living/swarmer_act(mob/living/simple_animal/hostile/swarmer/S)
/mob/living/simple_animal/slime/swarmer_act(mob/living/simple_animal/hostile/swarmer/S)
/mob/living/simple_animal/hostile/swarmer/proc/Fabricate(atom/fabrication_object,fabrication_cost = 0)
/mob/living/simple_animal/hostile/swarmer/proc/Integrate(atom/movable/target)
/mob/living/simple_animal/hostile/swarmer/proc/DisIntegrate(atom/movable/target)
/mob/living/simple_animal/hostile/swarmer/proc/DisperseTarget(mob/living/target)
/mob/living/simple_animal/hostile/swarmer/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/simple_animal/hostile/swarmer/proc/DismantleMachine(obj/machinery/target)
/mob/living/simple_animal/hostile/swarmer/proc/CreateTrap()
/mob/living/simple_animal/hostile/swarmer/proc/CreateBarricade()
/mob/living/simple_animal/hostile/swarmer/proc/CreateSwarmer()
/mob/living/simple_animal/hostile/swarmer/proc/SwarmerTypeToCreate()
/mob/living/simple_animal/hostile/swarmer/proc/RepairSelf()
/mob/living/simple_animal/hostile/swarmer/proc/ToggleLight()
/mob/living/simple_animal/hostile/swarmer/proc/swarmer_chat(msg)
/mob/living/simple_animal/hostile/swarmer/proc/ContactSwarmers()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\traitor\equipment\Malf_Modules.dm. ----------------------
/mob/living/silicon/ai/proc/remove_transformer_image(client/C, image/I, turf/T)
/mob/living/silicon/ai/proc/can_place_transformer(datum/action/innate/ai/place_transformer/action)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\antagonists\xeno\xeno.dm. ----------------------
/mob/living/carbon/alien/mind_initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\arousal\arousal.dm. ----------------------
/mob/living
/mob/living/carbon/human
/mob/living/carbon/human/verb/underwear_toggle()
/mob/living/carbon/human/proc/adjust_arousal(strength, cause = "manual toggle", aphro = FALSE,maso = FALSE) // returns all genitals that were adjust
/mob/living/carbon/human/proc/do_climax(datum/reagents/R, atom/target, obj/item/organ/genital/G, spill = TRUE)
/mob/living/carbon/human/proc/mob_climax_outside(obj/item/organ/genital/G, mb_time = 30) //This is used for forced orgasms and other hands-free climaxes
/mob/living/carbon/human/proc/mob_climax_partner(obj/item/organ/genital/G, mob/living/L, spillage = TRUE, mb_time = 30, obj/item/organ/genital/Lgen = null) //Used for climaxing with any living thing
/mob/living/carbon/human/proc/mob_fill_container(obj/item/organ/genital/G, obj/item/reagent_containers/container, mb_time = 30) //For beaker-filling, beware the bartender
/mob/living/carbon/human/proc/pick_climax_genitals(silent = FALSE)
/mob/living/carbon/human/proc/pick_partner(silent = FALSE)
/mob/living/carbon/human/proc/pick_climax_container(silent = FALSE)
/mob/living/carbon/human/proc/available_rosie_palms(silent = FALSE, list/whitelist_typepaths = list(/obj/item/dildo))
/mob/living/carbon/human/proc/mob_climax(forced_climax=FALSE,cause = "", var/mob/living/forced_partner = null, var/forced_spillage = TRUE, var/obj/item/organ/genital/forced_receiving_genital = null) //Forced is instead of the other proc, makes you cum if you have the tools for it, ignoring restraints
/mob/living/carbon/human/verb/climax_verb()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\arousal\genitals.dm. ----------------------
/mob/living/carbon
/mob/living/carbon/verb/toggle_genitals()
/mob/living/carbon/proc/anus_toggle_visibility(visibility)
/mob/living/carbon/verb/toggle_arousal_state()
/mob/living/carbon/human/proc/give_genitals(clean = FALSE)//clean will remove all pre-existing genitals. proc will then give them any genitals that are enabled in their DNA
/mob/living/carbon/human/proc/give_genital(obj/item/organ/genital/G)
/mob/living/carbon/human/proc/update_genitals()
/mob/living/carbon/human/proc/emergent_genital_call()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\awaymissions\mission_code\Cabin.dm. ----------------------
/mob/living/simple_animal/chicken/rabbit/normal
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\awaymissions\mission_code\jungleresort.dm. ----------------------
/mob/living/carbon/monkey/punpun/curiousgorge
/mob/living/simple_animal/hostile/jungle/leaper/boss
/mob/living/simple_animal/hostile/gorilla/jungle
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\awaymissions\mission_code\wildwest.dm. ----------------------
/mob/living/carbon/proc/immortality() //Mob proc so people cant just clone themselves to get rid of the shadowperson race. No hiding your wickedness.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\cargo\gondolapod.dm. ----------------------
/mob/living/simple_animal/pet/gondola/gondolapod
/mob/living/simple_animal/pet/gondola/gondolapod/Initialize(mapload, pod)
/mob/living/simple_animal/pet/gondola/gondolapod/update_icon_state()
/mob/living/simple_animal/pet/gondola/gondolapod/verb/deliver()
/mob/living/simple_animal/pet/gondola/gondolapod/examine(mob/user)
/mob/living/simple_animal/pet/gondola/gondolapod/verb/check()
/mob/living/simple_animal/pet/gondola/gondolapod/setOpened()
/mob/living/simple_animal/pet/gondola/gondolapod/setClosed()
/mob/living/simple_animal/pet/gondola/gondolapod/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\client\client_colour.dm. ----------------------
/mob/proc/add_client_colour(colour_type)
/mob/proc/remove_client_colour(colour_type)
/mob/proc/update_client_colour()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\client\verbs\suicide.dm. ----------------------
/mob/var/suiciding = 0
/mob/living/carbon/human/verb/suicide()
/mob/living/brain/verb/suicide()
/mob/living/carbon/monkey/verb/suicide()
/mob/living/silicon/ai/verb/suicide()
/mob/living/silicon/robot/verb/suicide()
/mob/living/silicon/pai/verb/suicide()
/mob/living/carbon/alien/humanoid/verb/suicide()
/mob/living/simple_animal/verb/suicide()
/mob/living/proc/suicide_log(ghosting)
/mob/living/carbon/human/suicide_log(ghosting)
/mob/living/proc/canSuicide()
/mob/living/carbon/canSuicide()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\clothing\glasses\_glasses.dm. ----------------------
/mob/living/carbon/human/proc/update_glasses_color(obj/item/clothing/glasses/G, glasses_equipped)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\clothing\outfits\vv_outfit.dm. ----------------------
/mob/living/carbon/human/proc/copy_outfit()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\events\travelling_trader.dm. ----------------------
/mob/living/carbon/human/dummy/travelling_trader //similar to a dummy because we want to be resource-efficient
/mob/living/carbon/human/dummy/travelling_trader/examine(mob/user)
/mob/living/carbon/human/dummy/travelling_trader/proc/setup_speech(var/input_speech, var/obj/item/given_item)
/mob/living/carbon/human/dummy/travelling_trader/on_attack_hand(mob/living/carbon/human/H)
/mob/living/carbon/human/dummy/travelling_trader/attackby(obj/item/I, mob/user)
/mob/living/carbon/human/dummy/travelling_trader/proc/check_item(var/obj/item/supplied_item) //sometimes we might want to care about the properties of the item, etc
/mob/living/carbon/human/dummy/travelling_trader/proc/give_reward()
/mob/living/carbon/human/dummy/travelling_trader/Initialize(mapload)
/mob/living/carbon/human/dummy/travelling_trader/Destroy()
/mob/living/carbon/human/dummy/travelling_trader/cook
/mob/living/carbon/human/dummy/travelling_trader/cook/Initialize(mapload)
/mob/living/carbon/human/dummy/travelling_trader/gardener
/mob/living/carbon/human/dummy/travelling_trader/gardener/Initialize(mapload)
/mob/living/carbon/human/dummy/travelling_trader/animal_hunter
/mob/living/carbon/human/dummy/travelling_trader/animal_hunter/Initialize(mapload)
/mob/living/carbon/human/dummy/travelling_trader/animal_hunter/check_item(obj/item/supplied_item) //item is likely to be in contents of whats supplied
/mob/living/carbon/human/dummy/travelling_trader/animal_hunter/give_reward(mob/giver) //the reward is actually given in a jar, because releasing it onto the station might be a bad idea
/mob/living/carbon/human/dummy/travelling_trader/bartender
/mob/living/carbon/human/dummy/travelling_trader/bartender/Initialize(mapload) //pick a subtype of ethanol that isn't found in the default set of the booze dispensers reagents
/mob/living/carbon/human/dummy/travelling_trader/bartender/check_item(var/obj/item/supplied_item) //you need to check its reagents
/mob/living/carbon/human/dummy/travelling_trader/artifact_dealer
/mob/living/carbon/human/dummy/travelling_trader/artifact_dealer/Initialize(mapload)
/mob/living/carbon/human/dummy/travelling_trader/surgeon
/mob/living/carbon/human/dummy/travelling_trader/surgeon/give_reward()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\events\wizard\magicarp.dm. ----------------------
/mob/living/simple_animal/hostile/carp/ranged
/mob/living/simple_animal/hostile/carp/ranged/Initialize(mapload)
/mob/living/simple_animal/hostile/carp/ranged/chaos
/mob/living/simple_animal/hostile/carp/ranged/chaos/Shoot()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\flufftext\Dreaming.dm. ----------------------
/mob/living/carbon/proc/dream()
/mob/living/carbon/proc/dream_sequence(list/dream_fragments)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\flufftext\Hallucination.dm. ----------------------
/mob/living/carbon/proc/handle_hallucinations()
/mob/living/carbon/proc/set_screwyhud(hud_type)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\holiday\easter.dm. ----------------------
/mob/living/simple_animal/chicken/rabbit
/mob/living/simple_animal/chicken/rabbit/space
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\holiday\halloween\halloween.dm. ----------------------
/mob/living/simple_animal/hostile/construct/shade/howling_ghost
/mob/living/simple_animal/hostile/construct/shade/howling_ghost/Initialize(mapload)
/mob/living/simple_animal/hostile/construct/shade/howling_ghost/Life()
/mob/living/simple_animal/hostile/construct/shade/howling_ghost/proc/EtherealMove(direction)
/mob/living/simple_animal/hostile/construct/shade/howling_ghost/proc/roam()
/mob/living/simple_animal/hostile/construct/shade/howling_ghost/proc/spooky_ghosty()
/mob/living/simple_animal/hostile/retaliate/clown/insane
/mob/living/simple_animal/hostile/retaliate/clown/insane/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/clown/insane/Retaliate()
/mob/living/simple_animal/hostile/retaliate/clown/insane/ex_act()
/mob/living/simple_animal/hostile/retaliate/clown/insane/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/simple_animal/hostile/retaliate/clown/insane/Life()
/mob/living/simple_animal/hostile/retaliate/clown/insane/proc/stalk()
/mob/living/simple_animal/hostile/retaliate/clown/insane/MoveToTarget()
/mob/living/simple_animal/hostile/retaliate/clown/insane/AttackingTarget()
/mob/living/simple_animal/hostile/retaliate/clown/insane/adjustHealth()
/mob/living/simple_animal/hostile/retaliate/clown/insane/attackby(obj/item/O, mob/user)
/mob/living/simple_animal/hostile/retaliate/clown/insane/handle_temperature_damage()
/mob/living/simple_animal/lazy_bones
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\holiday\halloween\jacqueen.dm. ----------------------
/mob/living/simple_animal/jacq
/mob/living/simple_animal/jacq/Initialize(mapload)
/mob/living/simple_animal/jacq/ComponentInitialize() //she just wants to bring halloween to the station
/mob/living/simple_animal/jacq/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/jacq/death() //What is alive may never die
/mob/living/simple_animal/jacq/gib()
/mob/living/simple_animal/jacq/on_attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/jacq/attack_paw(mob/living/carbon/monkey/M)
/mob/living/simple_animal/jacq/proc/canmove()
/mob/living/simple_animal/jacq/proc/stopmove()
/mob/living/simple_animal/jacq/proc/jacqrunes(message, mob/living/carbon/C) //Displays speechtext over Jacq for the user only.
/mob/living/simple_animal/jacq/proc/poof()
/mob/living/simple_animal/jacq/proc/gender_check(mob/living/carbon/C)
/mob/living/simple_animal/jacq/proc/chit_chat(mob/living/carbon/C)
/mob/living/simple_animal/jacq/proc/treat(mob/living/carbon/C, gender)
/mob/living/simple_animal/jacq/proc/trick(mob/living/carbon/C, gender)
/mob/living/simple_animal/jacq/proc/dating_start(mob/living/carbon/C, gender)
/mob/living/simple_animal/jacq/proc/spawn_cars(mob/living/carbon/C)
/mob/living/simple_animal/jacq/update_mobility()
/mob/living/simple_animal/jacq/car_spawner
/mob/living/simple_animal/jacq/car_spawner/Destroy()
/mob/living/simple_animal/jacq/car_spawner/death()
/mob/living/simple_animal/jacq/car_spawner/poof()
/mob/living/simple_animal/jacq/car_spawner/spawn_cars(mob/living/carbon/C)
/mob/living/simple_animal/jacq/proc/check_candies(mob/living/carbon/C)
/mob/living/simple_animal/jacq/proc/take_candies(mob/living/carbon/C, candy_amount = 1)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\holodeck\mobs.dm. ----------------------
/mob/living/simple_animal/holodeck_monkey
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\hydroponics\beekeeping\beebox.dm. ----------------------
/mob/proc/bee_friendly()
/mob/living/simple_animal/hostile/poison/bees/bee_friendly()
/mob/living/carbon/human/bee_friendly()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\integrated_electronics\subtypes\smart.dm. ----------------------
/mob/living/brain/var/check_bot_self = FALSE
/mob/living/brain/ClickOn(atom/A, params)
/mob/living/brain/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/living/silicon/pai/var/check_bot_self = FALSE
/mob/living/silicon/pai/ClickOn(atom/A, params)
/mob/living/silicon/pai/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\keybindings\focus.dm. ----------------------
/mob/proc/set_focus(datum/new_focus)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\lighting\lighting_atom.dm. ----------------------
/mob/living/flash_lighting_fx(_range = FLASH_LIGHT_RANGE, _power = FLASH_LIGHT_POWER, _color = LIGHT_COLOR_WHITE, _duration = FLASH_LIGHT_DURATION, _reset_lighting = TRUE)
/mob/living/proc/mob_light(_color, _range, _power, _duration)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mining\aux_base_camera.dm. ----------------------
/mob/camera/aiEye/remote/base_construction
/mob/camera/aiEye/remote/base_construction/Initialize(mapload)
/mob/camera/aiEye/remote/base_construction/setLoc(var/t)
/mob/camera/aiEye/remote/base_construction/relaymove(mob/user, direct)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mining\minebot.dm. ----------------------
/mob/living/simple_animal/hostile/mining_drone
/mob/living/simple_animal/hostile/mining_drone/Initialize(mapload)
/mob/living/simple_animal/hostile/mining_drone/Destroy()
/mob/living/simple_animal/hostile/mining_drone/sentience_act()
/mob/living/simple_animal/hostile/mining_drone/examine(mob/user)
/mob/living/simple_animal/hostile/mining_drone/welder_act(mob/living/user, obj/item/I)
/mob/living/simple_animal/hostile/mining_drone/attackby(obj/item/I, mob/user, params)
/mob/living/simple_animal/hostile/mining_drone/death()
/mob/living/simple_animal/hostile/mining_drone/on_attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/mining_drone/CanAllowThrough(atom/movable/O)
/mob/living/simple_animal/hostile/mining_drone/proc/SetCollectBehavior()
/mob/living/simple_animal/hostile/mining_drone/proc/SetOffenseBehavior()
/mob/living/simple_animal/hostile/mining_drone/AttackingTarget()
/mob/living/simple_animal/hostile/mining_drone/OpenFire(atom/A)
/mob/living/simple_animal/hostile/mining_drone/proc/CollectOre()
/mob/living/simple_animal/hostile/mining_drone/proc/DropOre(message = 1)
/mob/living/simple_animal/hostile/mining_drone/adjustHealth(amount)
/mob/living/simple_animal/hostile/mining_drone/proc/toggle_mode()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\clickdelay.dm. ----------------------
/mob
/mob/proc/DelayNextAction(amount = 0, ignore_mod = FALSE, considered_action = TRUE, immediate = TRUE, flush = FALSE)
/mob/proc/EstimatedNextActionTime()
/mob/proc/SetNextAction(amount = 0, ignore_mod = FALSE, considered_action = TRUE, immediate = TRUE, flush = FALSE)
/mob/proc/CheckActionCooldown(cooldown = 0.5, from_next_action = FALSE, ignore_mod = FALSE, ignore_next_action = FALSE, immediate = FALSE)
/mob/proc/GetActionCooldownMod()
/mob/proc/GetActionCooldownAdjust()
/mob/proc/FlushCurrentAction()
/mob/proc/DiscardCurrentAction()
/mob/proc/CheckResistCooldown()
/mob/proc/MarkResistTime(extra_cooldown = resist_cooldown, override = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\death.dm. ----------------------
/mob/proc/gib(no_brain, no_organs, no_bodyparts, datum/explosion/was_explosion)
/mob/proc/dust(just_ash, drop_items, force)
/mob/proc/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\emote.dm. ----------------------
/mob/proc/emote(act, m_type = null, message = null, intentional = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\innate_abilities.dm. ----------------------
/mob/proc/set_ability_property(ability, property, value)
/mob/proc/get_ability_property(ability, property)
/mob/proc/grant_ability_from_source(list/abilities, source)
/mob/proc/remove_ability_from_source(list/abilities, source)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\inventory.dm. ----------------------
/mob/proc/get_active_held_item()
/mob/proc/get_inactive_held_item()
/mob/proc/get_inactive_hand_index()
/mob/proc/get_item_for_held_index(i)
/mob/proc/held_index_to_dir(i)
/mob/proc/has_hand_for_held_index(i)
/mob/proc/has_active_hand()
/mob/proc/get_empty_held_index_for_side(side = "left", all = FALSE)
/mob/proc/get_held_items_for_side(side = "left", all = FALSE)
/mob/proc/get_empty_held_indexes()
/mob/proc/get_held_index_of_item(obj/item/I)
/mob/proc/get_num_held_items()
/mob/proc/is_holding(obj/item/I)
/mob/proc/is_holding_item_of_type(typepath)
/mob/proc/is_holding_tool_quality(quality)
/mob/proc/get_held_index_name(i)
/mob/proc/can_equip(obj/item/I, slot, disable_warning = FALSE, bypass_equip_delay_self = FALSE, clothing_check = FALSE, list/return_warning)
/mob/proc/can_put_in_hand(I, hand_index)
/mob/proc/put_in_hand(obj/item/I, hand_index, forced = FALSE, ignore_anim = TRUE)
/mob/proc/put_in_l_hand(obj/item/I)
/mob/proc/put_in_r_hand(obj/item/I)
/mob/proc/put_in_hand_check(obj/item/I)
/mob/proc/put_in_active_hand(obj/item/I, forced = FALSE, ignore_animation = TRUE)
/mob/proc/put_in_inactive_hand(obj/item/I)
/mob/proc/put_in_hands(obj/item/I, del_on_fail = FALSE, merge_stacks = TRUE, forced = FALSE)
/mob/proc/drop_all_held_items()
/mob/proc/canUnEquip(obj/item/I, force)
/mob/proc/putItemFromInventoryInHandIfPossible(obj/item/I, hand_index, force_removal = FALSE)
/mob/proc/dropItemToGround(obj/item/I, force = FALSE)
/mob/proc/transferItemToLoc(obj/item/I, newloc = null, force = FALSE, silent = TRUE)
/mob/proc/temporarilyRemoveItemFromInventory(obj/item/I, force = FALSE, idrop = TRUE)
/mob/proc/doUnEquip(obj/item/I, force, newloc, no_move, invdrop = TRUE, silent = FALSE) //Force overrides TRAIT_NODROP for things like wizarditis and admin undress.
/mob/proc/equip_to_slot_if_possible(obj/item/W, slot, qdel_on_fail = FALSE, disable_warning = FALSE, redraw_mob = TRUE, bypass_equip_delay_self = FALSE, clothing_check = FALSE)
/mob/proc/equip_to_slot(obj/item/W, slot)
/mob/proc/equip_to_slot_or_del(obj/item/W, slot)
/mob/proc/equip_to_appropriate_slot(obj/item/W, clothing_check = FALSE)
/mob/living/proc/get_equipped_items(include_pockets = FALSE)
/mob/living/proc/unequip_everything()
/mob/verb/quick_equip()
/mob/proc/getBackSlot()
/mob/proc/getBeltSlot()
/mob/proc/change_number_of_hands(amt)
/mob/living/carbon/human/change_number_of_hands(amt)
/mob/living/carbon/proc/get_all_gear()
/mob/canReachInto(atom/user, atom/target, list/next, view_only, obj/item/tool)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\login.dm. ----------------------
/mob/Login()
/mob/proc/auto_deadmin_on_login() //return true if they're not an admin at the end.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\logout.dm. ----------------------
/mob/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\mob.dm. ----------------------
/mob/Initialize(mapload)
/mob/Destroy()//This makes sure that mobs with clients/keys are not just deleted from the game.
/mob/GenerateTag()
/mob/proc/Cell()
/mob/proc/get_photo_description(obj/item/camera/camera)
/mob/proc/show_message(msg, type, alt_msg, alt_type)//Message, type of message (1 or 2), alternative message, alt message type (1 or 2)
/mob/visible_message(message, self_message, blind_message, vision_distance = DEFAULT_MESSAGE_RANGE, list/ignored_mobs, mob/target, target_message, omni = FALSE, runechat_popup, rune_msg)
/mob/audible_message(message, deaf_message, hearing_distance = DEFAULT_MESSAGE_RANGE, self_message, list/ignored_mobs, runechat_popup, rune_msg) //SKYRAT CHANGE
/mob/proc/get_item_by_slot(slot_id)
/mob/proc/restrained(ignore_grab)
/mob/proc/incapacitated(ignore_restraints, ignore_grab)
/mob/proc/attack_ui(slot)
/mob/proc/check_obscured_slots()
/mob/proc/reset_perspective(atom/A)
/mob/proc/fov_view(dist = world.view)
/mob/verb/examinate(atom/A as mob|obj|turf in view()) //It used to be oview(12), but I can't really say why
/mob/proc/clear_from_recent_examines(atom/A)
/mob/proc/handle_eye_contact(mob/living/examined_mob)
/mob/living/handle_eye_contact(mob/living/examined_mob)
/mob/verb/pointed(atom/A as mob|obj|turf in fov_view(), params = "" as text)
/mob/proc/can_resist()
/mob/proc/spin(spintime, speed)
/mob/proc/update_pull_hud_icon()
/mob/proc/update_rest_hud_icon()
/mob/verb/mode()
/mob/verb/memory()
/mob/verb/add_memory(msg as message)
/mob/proc/transfer_ckey(mob/new_mob, send_signal = TRUE)
/mob/verb/cancel_camera()
/mob/verb/DisClick(argu = null as anything, sec = "" as text, number1 = 0 as num  , number2 = 0 as num)
/mob/verb/DisDblClick(argu = null as anything, sec = "" as text, number1 = 0 as num  , number2 = 0 as num)
/mob/Topic(href, href_list)
/mob/proc/stripPanelUnequip(obj/item/what, mob/who)
/mob/proc/stripPanelEquip(obj/item/what, mob/who)
/mob/MouseDrop(mob/M)
/mob/proc/is_muzzled()
/mob/proc/get_status_tab_items()
/mob/proc/get_proc_holders()
/mob/proc/get_spells_for_statpanel(list/spells)
/mob/proc/canface()
/mob/proc/fall(forced)
/mob/verb/eastface()
/mob/verb/westface()
/mob/verb/northface()
/mob/verb/southface()
/mob/verb/eastshift()
/mob/verb/westshift()
/mob/verb/northshift()
/mob/verb/southshift()
/mob/proc/IsAdvancedToolUser()//This might need a rename but it should replace the can this mob use things check
/mob/proc/swap_hand()
/mob/proc/activate_hand(selhand)
/mob/proc/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null) //For sec bot threat assessment
/mob/proc/get_ghost(even_if_they_cant_reenter = 0)
/mob/proc/grab_ghost(force)
/mob/proc/notify_ghost_cloning(var/message = "Someone is trying to revive you. Re-enter your corpse if you want to be revived!", var/sound = 'sound/effects/genetics.ogg', var/atom/source = null, flashwindow)
/mob/proc/AddSpell(obj/effect/proc_holder/spell/S)
/mob/proc/RemoveSpell(obj/effect/proc_holder/spell/spell)
/mob/proc/anti_magic_check(magic = TRUE, holy = FALSE, tinfoil = FALSE, chargecost = 1, self = FALSE)
/mob/buckle_mob(mob/living/M, force = FALSE, check_loc = TRUE)
/mob/post_buckle_mob(mob/living/M)
/mob/post_unbuckle_mob(mob/living/M)
/mob/proc/get_mob_buckling_height(mob/seat)
/mob/proc/can_buckle()
/mob/proc/can_unbuckle()
/mob/proc/can_buckle_others(mob/living/target, atom/buckle_to)
/mob/proc/can_interact_with(atom/A)
/mob/proc/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/proc/canUseStorage()
/mob/proc/faction_check_mob(mob/target, exact_match)
/mob/proc/fully_replace_character_name(oldname,newname)
/mob/proc/replace_records_name(oldname,newname)
/mob/proc/replace_identification_name(oldname,newname)
/mob/proc/update_stat()
/mob/proc/update_health_hud()
/mob/proc/update_sight()
/mob/proc/sync_lighting_plane_alpha()
/mob/proc/update_mouse_pointer()
/mob/proc/is_literate()
/mob/proc/can_hold_items()
/mob/vv_get_dropdown()
/mob/vv_do_topic(list/href_list)
/mob/vv_get_var(var_name)
/mob/vv_auto_rename(new_name)
/mob/verb/open_language_menu()
/mob/proc/adjust_nutrition(change, max = INFINITY) //Honestly FUCK the oldcoders for putting nutrition on /mob someone else can move it up because holy hell I'd have to fix SO many typechecks
/mob/proc/set_nutrition(var/change) //Seriously fuck you oldcoders.
/mob/setMovetype(newval)
/mob/proc/getLAssailant()
/mob/setGrabState(newstate)
/mob/proc/update_equipment_speed_mods()
/mob/proc/equipped_speed_mods()
/mob/proc/on_item_dropped(obj/item/I)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\mob_defines.dm. ----------------------
/mob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\mob_helpers.dm. ----------------------
/mob/proc/lowest_buckled_mob()
/mob/proc/first_name()
/mob/verb/a_intent_change(input as text)
/mob/proc/hallucinating()
/mob/proc/reagent_check(datum/reagent/R) // utilized in the species code
/mob/proc/toggleSiliconAccessArea(area/area)
/mob/proc/getImplant(type)
/mob/living/getImplant(type)
/mob/proc/is_flying(mob/M = src)
/mob/proc/click_random_mob()
/mob/log_message(message, message_type, color=null, log_globally = TRUE)
/mob/proc/can_hear()
/mob/proc/common_trait_examine()
/mob/proc/get_idcard(hand_first = TRUE)
/mob/proc/get_id_in_hand()
/mob/proc/can_see_reagents()
/mob/proc/is_blind()
/mob/proc/can_read(obj/O)
/mob/proc/checkloadappearance()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\mob_lists.dm. ----------------------
/mob/proc/add_to_mob_list()
/mob/proc/remove_from_mob_list()
/mob/proc/add_to_alive_mob_list()
/mob/proc/remove_from_alive_mob_list()
/mob/proc/add_to_dead_mob_list()
/mob/proc/remove_from_dead_mob_list()
/mob/proc/add_to_player_list()
/mob/proc/remove_from_player_list()
/mob/proc/add_to_current_dead_players()
/mob/dead/observer/add_to_current_dead_players()
/mob/dead/new_player/add_to_current_dead_players()
/mob/proc/remove_from_current_dead_players()
/mob/dead/observer/remove_from_current_dead_players()
/mob/proc/add_to_current_living_players()
/mob/proc/remove_from_current_living_players()
/mob/proc/add_to_current_living_antags()
/mob/proc/remove_from_current_living_antags()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\mob_movement.dm. ----------------------
/mob/proc/movement_delay()	//update /living/movement_delay() if you change this
/mob/Moved(atom/OldLoc, Dir)
/mob/Process_Spacemove(movement_dir = 0)
/mob/get_spacemove_backup()
/mob/proc/mob_has_gravity()
/mob/proc/mob_negates_gravity()
/mob/proc/slip(s_amount, w_amount, obj/O, lube)
/mob/proc/update_gravity(has_gravity, override=FALSE)
/mob/proc/toggle_move_intent(mob/user)
/mob/verb/up()
/mob/verb/down()
/mob/proc/zMove(dir, feedback = FALSE)
/mob/proc/canZMove(direction, turf/target)
/mob/onTransitZ(old_z, new_z)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\mob_transformation_simple.dm. ----------------------
/mob/proc/change_mob_type(new_type = null, turf/location = null, new_name = null as text, delete_old_mob = 0 as num)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\say.dm. ----------------------
/mob/verb/say_typing_indicator()
/mob/verb/say_verb(message as text)
/mob/verb/me_typing_indicator()
/mob/verb/me_verb(message as message)
/mob/say_mod(input, message_mode)
/mob/proc/whisper_keybind()
/mob/verb/whisper_verb(message as text)
/mob/proc/whisper(message, datum/language/language=null)
/mob/proc/say_dead(var/message)
/mob/proc/check_emote(message)
/mob/proc/hivecheck()
/mob/proc/lingcheck()
/mob/proc/get_message_mode(message)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\say_vr.dm. ----------------------
/mob/proc/get_top_level_mob()
/mob/living/verb/subtle()
/mob/living/verb/subtler()
/mob/living/verb/subtler_table()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\status_procs.dm. ----------------------
/mob/proc/Jitter(amount)
/mob/proc/Dizzy(amount)
/mob/proc/set_dizziness(amount)
/mob/proc/blind_eyes(amount)
/mob/proc/adjust_blindness(amount)
/mob/proc/set_blindness(amount)
/mob/proc/update_blindness()
/mob/proc/blur_eyes(amount)
/mob/proc/adjust_blurriness(amount)
/mob/proc/set_blurriness(amount)
/mob/proc/update_eyeblur()
/mob/proc/add_eyeblur()
/mob/proc/remove_eyeblur()
/mob/proc/adjust_drugginess(amount)
/mob/proc/set_drugginess(amount)
/mob/proc/adjust_disgust(amount)
/mob/proc/set_disgust(amount)
/mob/proc/adjust_bodytemperature(amount,min_temp=0,max_temp=INFINITY)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\transform_procs.dm. ----------------------
/mob/living/carbon/proc/monkeyize(tr_flags = (TR_KEEPITEMS | TR_KEEPVIRUS | TR_KEEPSTUNS | TR_KEEPREAGENTS | TR_DEFAULTMSG))
/mob/living/carbon/proc/finish_monkeyize(tr_flags)
/mob/living/carbon/proc/humanize(tr_flags = (TR_KEEPITEMS | TR_KEEPVIRUS | TR_KEEPSTUNS | TR_KEEPREAGENTS | TR_DEFAULTMSG))
/mob/living/carbon/human/AIize()
/mob/living/carbon/AIize()
/mob/proc/AIize(transfer_after = TRUE)
/mob/living/carbon/human/proc/Robotize(delete_items = 0, transfer_after = TRUE)
/mob/living/carbon/human/proc/Alienize(mind_transfer = TRUE)
/mob/living/carbon/human/proc/slimeize(reproduce, mind_transfer = TRUE)
/mob/proc/become_overmind(starting_points = 60, mind_transfer = FALSE)
/mob/living/carbon/human/proc/corgize(mind_transfer = TRUE)
/mob/living/carbon/proc/gorillize(mind_transfer = TRUE)
/mob/living/carbon/human/Animalize(mind_transfer = TRUE)
/mob/proc/Animalize(mind_transfer = TRUE)
/mob/proc/safe_animal(MP)
/mob/living/proc/turn_into_pickle()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\typing_indicator.dm. ----------------------
/mob/proc/get_indicator_overlay(state)
/mob/proc/get_typing_indicator_icon_state()
/mob/proc/generate_typing_indicator()
/mob/proc/display_typing_indicator(timeout_override = TYPING_INDICATOR_TIMEOUT, state_override = generate_typing_indicator(), force = FALSE)
/mob/proc/clear_typing_indicator()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\update_icons.dm. ----------------------
/mob/proc/regenerate_icons()		//TODO: phase this out completely if possible
/mob/proc/update_icons()
/mob/proc/update_transform()
/mob/proc/update_inv_handcuffed()
/mob/proc/update_inv_legcuffed()
/mob/proc/update_inv_back()
/mob/proc/update_inv_hands()
/mob/proc/update_inv_wear_mask()
/mob/proc/update_inv_neck()
/mob/proc/update_inv_wear_suit()
/mob/proc/update_inv_w_uniform()
/mob/proc/update_inv_w_underwear()
/mob/proc/update_inv_w_socks()
/mob/proc/update_inv_w_shirt()
/mob/proc/update_inv_wrists()
/mob/proc/update_inv_belt()
/mob/proc/update_inv_head()
/mob/proc/update_body()
/mob/proc/update_hair()
/mob/proc/update_fire()
/mob/proc/update_inv_gloves()
/mob/proc/update_inv_wear_id()
/mob/proc/update_inv_shoes()
/mob/proc/update_inv_glasses()
/mob/proc/update_inv_s_store()
/mob/proc/update_inv_pockets()
/mob/proc/update_inv_ears()
/mob/proc/update_inv_ears_extra()
/mob/proc/update_antag_overlays()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\camera\camera.dm. ----------------------
/mob/camera
/mob/camera/experience_pressure_difference()
/mob/camera/forceMove(atom/destination)
/mob/camera/canUseStorage()
/mob/camera/emote(act, m_type=1, message = null, intentional = FALSE, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\dead.dm. ----------------------
/mob/dead
/mob/dead/Initialize(mapload)
/mob/dead/canUseStorage()
/mob/dead/dust(just_ash, drop_items, force)	//ghosts can't be vaporised.
/mob/dead/gib()		//ghosts can't be gibbed.
/mob/dead/ConveyorMove()	//lol
/mob/dead/forceMove(atom/destination)
/mob/dead/get_status_tab_items()
/mob/dead/proc/server_hop()
/mob/dead/proc/update_z(new_z) // 1+ to register, null to unregister
/mob/dead/Login()
/mob/dead/auto_deadmin_on_login()
/mob/dead/Logout()
/mob/dead/onTransitZ(old_z,new_z)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\new_player\login.dm. ----------------------
/mob/dead/new_player/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\new_player\logout.dm. ----------------------
/mob/dead/new_player/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\new_player\new_player.dm. ----------------------
/mob/dead/new_player
/mob/dead/new_player/Initialize(mapload)
/mob/dead/new_player/Destroy()
/mob/dead/new_player/prepare_huds()
/mob/dead/new_player/proc/age_gate()
/mob/dead/new_player/proc/age_verify()
/mob/dead/new_player/Topic(href, href_list[])
/mob/dead/new_player/get_status_tab_items()
/mob/dead/new_player/proc/make_me_an_observer()
/mob/dead/new_player/proc/IsJobUnavailable(rank, latejoin = FALSE)
/mob/dead/new_player/proc/AttemptLateSpawn(rank)
/mob/dead/new_player/proc/AddEmploymentContract(mob/living/carbon/human/employee)
/mob/dead/new_player/proc/LateChoices()
/mob/dead/new_player/proc/create_character(transfer_after)
/mob/dead/new_player/proc/transfer_character()
/mob/dead/new_player/proc/ViewManifest()
/mob/dead/new_player/Move()
/mob/dead/new_player/proc/close_spawn_windows()
/mob/dead/new_player/proc/check_preferences()
/mob/dead/new_player/proc/reset_menu_hud()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\new_player\poll.dm. ----------------------
/mob/dead/new_player/proc/handle_player_polling()
/mob/dead/new_player/proc/poll_player(pollid)
/mob/dead/new_player/proc/poll_check_voted(pollid, text = FALSE, silent = FALSE)
/mob/dead/new_player/proc/poll_rank()
/mob/dead/new_player/proc/vote_rig_check()
/mob/dead/new_player/proc/vote_valid_check(pollid, holder, type)
/mob/dead/new_player/proc/vote_on_irv_poll(pollid, list/votelist)
/mob/dead/new_player/proc/vote_on_poll(pollid, optionid)
/mob/dead/new_player/proc/log_text_poll_reply(pollid, replytext)
/mob/dead/new_player/proc/vote_on_numval_poll(pollid, optionid, rating)
/mob/dead/new_player/proc/vote_on_multi_poll(pollid, optionid)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\login.dm. ----------------------
/mob/dead/observer/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\logout.dm. ----------------------
/mob/dead/observer/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\notificationprefs.dm. ----------------------
/mob/dead/observer/verb/show_notificationprefs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\observer.dm. ----------------------
/mob/dead/observer
/mob/dead/observer/Initialize(mapload, mob/body)
/mob/dead/observer/get_photo_description(obj/item/camera/camera)
/mob/dead/observer/narsie_act()
/mob/dead/observer/ratvar_act()
/mob/dead/observer/Destroy()
/mob/dead/observer/update_icon(updates=ALL, new_form=null)
/mob/proc/brighten_color(input_color)
/mob/proc/ghostize(can_reenter_corpse = TRUE, special = FALSE, penalize = FALSE, voluntary = FALSE, cryo = FALSE)
/mob/living/verb/ghost()
/mob/camera/verb/ghost()
/mob/dead/observer/Move(NewLoc, direct)
/mob/dead/observer/verb/reenter_corpse()
/mob/dead/observer/verb/stay_dead()
/mob/dead/observer/proc/notify_cloning(var/message, var/sound, var/atom/source, flashwindow = TRUE)
/mob/dead/observer/proc/dead_tele()
/mob/dead/observer/proc/view_gas()
/mob/dead/observer/verb/follow()
/mob/dead/observer/proc/ManualFollow(atom/movable/target)
/mob/dead/observer/orbit()
/mob/dead/observer/stop_orbit(datum/component/orbiter/orbits)
/mob/dead/observer/verb/jumptomob() //Moves the ghost instead of just changing the ghosts's eye -Nodrak
/mob/dead/observer/verb/change_view_range()
/mob/dead/observer/verb/add_view_range(input as num)
/mob/dead/observer/verb/boo()
/mob/dead/observer/memory()
/mob/dead/observer/add_memory()
/mob/dead/observer/verb/toggle_ghostsee()
/mob/dead/observer/verb/toggle_darkness()
/mob/dead/observer/update_sight()
/mob/dead/observer/proc/updateghostimages()
/mob/dead/observer/verb/possess()
/mob/dead/observer/pointed(atom/A as mob|obj|turf in fov_view())
/mob/dead/observer/verb/view_manifest()
/mob/dead/observer/MouseDrop(atom/over)
/mob/dead/observer/Topic(href, href_list)
/mob/dead/observer/mind_initialize()
/mob/dead/observer/proc/show_data_huds()
/mob/dead/observer/proc/remove_data_huds()
/mob/dead/observer/verb/toggle_data_huds()
/mob/dead/observer/verb/toggle_health_scan()
/mob/dead/observer/verb/restore_ghost_appearance()
/mob/dead/observer/proc/set_ghost_appearance()
/mob/dead/observer/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/dead/observer/is_literate()
/mob/dead/observer/vv_edit_var(var_name, var_value)
/mob/dead/observer/reset_perspective(atom/A)
/mob/dead/observer/verb/observe()
/mob/dead/observer/proc/do_observe(mob/mob_eye)
/mob/dead/observer/verb/register_pai_candidate()
/mob/dead/observer/proc/register_pai()
/mob/dead/observer/verb/mafia_game_signup()
/mob/dead/observer/proc/mafia_signup()
/mob/dead/observer/examine(mob/user)
/mob/dead/observer/proc/set_invisibility(value)
/mob/dead/observer/Process_Spacemove(movement_dir)
/mob/dead/observer/vv_edit_var(var_name, var_value)
/mob/dead/observer/proc/open_spawners_menu()
/mob/dead/observer/verb/game_info()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\observer_movement.dm. ----------------------
/mob/dead/observer/canZMove(direction, turf/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\respawn.dm. ----------------------
/mob/dead/new_player/proc/respawn_latejoin_check(notify = FALSE)
/mob/dead/observer/verb/respawn()
/mob/dead/observer/verb/time_left_to_respawn()
/mob/dead/observer/proc/do_respawn(penalize)
/mob/dead/observer/proc/transfer_to_lobby()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\dead\observer\say.dm. ----------------------
/mob/dead/observer/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/dead/observer/Hear(message, atom/movable/speaker, message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\blood.dm. ----------------------
/mob/living/carbon/monkey/handle_blood()
/mob/living/carbon/human/proc/resume_bleeding()
/mob/living/carbon/human/handle_blood(delta_time, times_fired)
/mob/living/carbon/proc/bleed(amt, force)
/mob/living/carbon/human/bleed(amt)
/mob/living/proc/restore_blood()
/mob/living/carbon/restore_blood()
/mob/living/proc/transfer_blood_to(atom/movable/AM, amount, forced)
/mob/living/proc/get_blood_data()
/mob/living/carbon/get_blood_data()
/mob/proc/get_blood_id()
/mob/living/simple_animal/get_blood_id()
/mob/living/carbon/monkey/get_blood_id()
/mob/living/carbon/get_blood_id()
/mob/living/proc/add_splatter_floor(turf/T, small_drip)
/mob/living/carbon/human/add_splatter_floor(turf/T, small_drip)
/mob/living/carbon/alien/add_splatter_floor(turf/T, small_drip)
/mob/living/silicon/robot/add_splatter_floor(turf/T, small_drip)
/mob/living/proc/add_splash_floor(turf/T)
/mob/living/carbon/human/add_splash_floor(turf/T)
/mob/living/carbon/alien/add_splash_floor(turf/T)
/mob/living/silicon/robot/add_splash_floor(turf/T)
/mob/living/proc/adjust_integration_blood(value, remove_actual_blood, force)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\bloodcrawl.dm. ----------------------
/mob/living/proc/phaseout(obj/effect/decal/cleanable/B)
/mob/living/proc/bloodpool_sink(obj/effect/decal/cleanable/B)
/mob/living/proc/bloodcrawl_consume(mob/living/victim)
/mob/living/proc/bloodcrawl_swallow(var/mob/living/victim)
/mob/living/proc/exit_blood_effect(obj/effect/decal/cleanable/B)
/mob/living/proc/phasein(obj/effect/decal/cleanable/B)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\clickdelay.dm. ----------------------
/mob/living/GetActionCooldownMod()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\damage_procs.dm. ----------------------
/mob/living/proc/apply_damage(damage = 0,damagetype = BRUTE, def_zone = null, blocked = FALSE, forced = FALSE, spread_damage = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE)
/mob/living/proc/apply_damage_type(damage = 0, damagetype = BRUTE) //like apply damage except it always uses the damage procs
/mob/living/proc/get_damage_amount(damagetype = BRUTE)
/mob/living/proc/apply_damages(brute = 0, burn = 0, tox = 0, oxy = 0, clone = 0, def_zone = null, blocked = FALSE, stamina = 0, brain = 0)
/mob/living/proc/apply_effect(effect = 0,effecttype = EFFECT_STUN, blocked = FALSE, knockdown_stamoverride, knockdown_stammax)
/mob/living/proc/apply_effects(stun = 0, knockdown = 0, unconscious = 0, irradiate = 0, slur = 0, stutter = 0, eyeblur = 0, drowsy = 0, blocked = 0, stamina = 0, jitter = 0, kd_stamoverride, kd_stammax)
/mob/living/proc/getBruteLoss()
/mob/living/proc/adjustBruteLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/proc/getOxyLoss()
/mob/living/proc/adjustOxyLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/proc/setOxyLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/proc/getToxLoss(toxins_type = TOX_OMNI)
/mob/living/proc/adjustToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_DEFAULT)
/mob/living/proc/setToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_OMNI)
/mob/living/proc/getFireLoss()
/mob/living/proc/adjustFireLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/proc/getCloneLoss()
/mob/living/proc/adjustCloneLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/proc/setCloneLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/proc/adjustOrganLoss(slot, amount, maximum)
/mob/living/proc/setOrganLoss(slot, amount, maximum)
/mob/living/proc/getOrganLoss(slot)
/mob/living/proc/getStaminaLoss()
/mob/living/proc/adjustStaminaLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/proc/setStaminaLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/proc/heal_bodypart_damage(brute = 0, burn = 0, stamina = 0, updating_health = TRUE)
/mob/living/proc/take_bodypart_damage(brute = 0, burn = 0, stamina = 0, updating_health = TRUE, required_status, check_armor = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE)
/mob/living/proc/heal_overall_damage(brute = 0, burn = 0, stamina = 0, only_robotic = FALSE, only_organic = TRUE, updating_health = TRUE)
/mob/living/proc/take_overall_damage(brute = 0, burn = 0, stamina = 0, updating_health = TRUE)
/mob/living/proc/heal_ordered_damage(amount, list/damage_types)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\death.dm. ----------------------
/mob/living/gib(no_brain, no_organs, no_bodyparts, datum/explosion/was_explosion)
/mob/living/proc/gib_animation()
/mob/living/proc/spawn_gibs(with_bodyparts, atom/loc_override, datum/explosion/was_explosion)
/mob/living/proc/spill_organs()
/mob/living/proc/spread_bodyparts(no_brain, no_organs, datum/explosion/was_explosion)
/mob/living/dust(just_ash, drop_items, force)
/mob/living/proc/dust_animation()
/mob/living/proc/spawn_dust(just_ash = FALSE)
/mob/living/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\life.dm. ----------------------
/mob/living/proc/Life(seconds, times_fired)
/mob/living/proc/BiologicalLife(delta_time, times_fired)
/mob/living/proc/PhysicalLife(seconds, times_fired)
/mob/living/proc/handle_breathing(times_fired)
/mob/living/proc/handle_mutations_and_radiation()
/mob/living/proc/handle_diseases()
/mob/living/proc/handle_wounds()
/mob/living/proc/handle_diginvis()
/mob/living/proc/handle_random_events()
/mob/living/proc/handle_environment(datum/gas_mixture/environment)
/mob/living/proc/handle_fire()
/mob/living/proc/handle_stomach()
/mob/living/proc/handle_status_effects()
/mob/living/proc/handle_traits()
/mob/living/proc/update_damage_hud()
/mob/living/proc/handle_gravity()
/mob/living/proc/gravity_animate()
/mob/living/proc/gravity_pulse_animation()
/mob/living/proc/handle_high_gravity(gravity)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living.dm. ----------------------
/mob/living/Initialize(mapload)
/mob/living/prepare_huds()
/mob/living/proc/prepare_data_huds()
/mob/living/Destroy()
/mob/living/onZImpact(turf/T, levels)
/mob/living/proc/ZImpactDamage(turf/T, levels)
/mob/living/proc/OpenCraftingMenu()
/mob/living/Bump(atom/A)
/mob/living/Bumped(atom/movable/AM)
/mob/living/proc/MobBump(mob/M)
/mob/living/get_photo_description(obj/item/camera/camera)
/mob/living/proc/ObjBump(obj/O)
/mob/living/proc/PushAM(atom/movable/AM, force = move_force)
/mob/proc/has_tail()
/mob/living/carbon/human/has_tail()
/mob/living/start_pulling(atom/movable/AM, state, force = pull_force, supress_message = FALSE)
/mob/living/proc/set_pull_offsets(mob/living/M, grab_state = GRAB_PASSIVE)
/mob/living/proc/reset_pull_offsets(mob/living/M, override)
/mob/living/verb/pulled(atom/movable/AM as mob|obj in oview(1))
/mob/living/stop_pulling()
/mob/living/verb/stop_pulling1()
/mob/living/pointed(atom/A as mob|obj|turf in fov_view())
/mob/living/verb/succumb()
/mob/living/incapacitated(ignore_restraints = FALSE, ignore_grab = FALSE, check_immobilized = FALSE, ignore_stasis = FALSE)
/mob/living/canUseStorage()
/mob/living/proc/InCritical()
/mob/living/proc/InFullCritical()
/mob/living/proc/calculate_affecting_pressure(pressure)
/mob/living/proc/adjustBodyTemp(actual, desired, incrementboost)
/mob/living/proc/getMaxHealth()
/mob/living/proc/setMaxHealth(newMaxHealth)
/mob/living/proc/mob_sleep()
/mob/living/proc/surrender()
/mob/proc/get_contents()
/mob/living/get_contents()
/mob/living/proc/can_inject(mob/user, error_msg, target_zone, penetrate_thick = FALSE, bypass_immunity = FALSE)
/mob/living/is_injectable(allowmobs = TRUE)
/mob/living/is_drawable(allowmobs = TRUE)
/mob/living/proc/get_organ_target()
/mob/living/proc/updatehealth()
/mob/living/update_health_hud()
/mob/living/proc/revive(full_heal = FALSE, admin_revive = FALSE)
/mob/living/proc/remove_CC(should_update_mobility = TRUE)
/mob/living/proc/fully_heal(admin_revive = FALSE)
/mob/living/proc/can_be_revived()
/mob/living/proc/update_damage_overlays()
/mob/living/Crossed(atom/movable/AM)
/mob/living/proc/makeTrail(turf/target_turf, turf/start, direction)
/mob/living/carbon/human/makeTrail(turf/T)
/mob/living/proc/bleedDragAmount()
/mob/living/carbon/bleedDragAmount()
/mob/living/proc/getTrail()
/mob/living/experience_pressure_difference(pressure_difference, direction, pressure_resistance_prob_delta = 0)
/mob/living/can_resist()
/mob/living/verb/resist()
/mob/living/proc/do_resist()
/mob/proc/attempt_resist_grab(moving_resist, forced, log = TRUE)
/mob/proc/do_resist_grab(moving_resist, forced, silent = FALSE)
/mob/living/do_resist_grab(moving_resist, forced, silent = FALSE)
/mob/living/proc/resist_buckle()
/mob/living/proc/resist_fire()
/mob/living/proc/resist_restraints()
/mob/living/proc/get_visible_name()
/mob/living/update_gravity(has_gravity,override = 0)
/mob/living/float(on)
/mob/living/stripPanelUnequip(obj/item/what, mob/who, where)
/mob/living/stripPanelEquip(obj/item/what, mob/who, where)
/mob/living/singularity_pull(S, current_size)
/mob/living/proc/do_jitter_animation(jitteriness)
/mob/living/proc/get_temperature(datum/gas_mixture/environment)
/mob/living/proc/get_standard_pixel_x_offset(lying = 0)
/mob/living/proc/get_standard_pixel_y_offset(lying = 0)
/mob/living/cancel_camera()
/mob/living/proc/can_track(mob/living/user)
/mob/living/proc/get_permeability_protection(list/target_zones)
/mob/living/proc/harvest(mob/living/user) //used for extra objects etc. in butchering
/mob/living/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/living/proc/can_use_guns(obj/item/G)//actually used for more than guns!
/mob/living/proc/update_stamina()
/mob/living/carbon/alien/update_stamina()
/mob/living/proc/owns_soul()
/mob/living/proc/return_soul()
/mob/living/proc/has_bane(banetype)
/mob/living/proc/check_weakness(obj/item/weapon, mob/living/attacker)
/mob/living/proc/check_acedia()
/mob/living/throw_at(atom/target, range, speed, mob/thrower, spin=1, diagonals_first = 0, datum/callback/callback, force)
/mob/living/proc/wabbajack_act(mob/living/new_mob)
/mob/living/rad_act(amount)
/mob/living/anti_magic_check(magic = TRUE, holy = FALSE, chargecost = 1, self = FALSE)
/mob/living/proc/fakefireextinguish()
/mob/living/proc/fakefire()
/mob/living/proc/IgniteMob()
/mob/living/proc/ExtinguishMob()
/mob/living/proc/adjust_fire_stacks(add_fire_stacks) //Adjusting the amount of fire_stacks we have on person
/mob/living/proc/spreadFire(mob/living/L)
/mob/living/proc/knockOver(var/mob/living/carbon/C)
/mob/living/ConveyorMove()
/mob/living/can_be_pulled()
/mob/living/proc/AddAbility(obj/effect/proc_holder/A)
/mob/living/proc/RemoveAbility(obj/effect/proc_holder/A)
/mob/living/proc/add_abilities_to_panel()
/mob/living/lingcheck()
/mob/living/MouseDrop(mob/over)
/mob/living/proc/get_static_viruses() //used when creating blood and other infective objects
/mob/living/reset_perspective(atom/A)
/mob/living/update_mouse_pointer()
/mob/living/vv_edit_var(var_name, var_value)
/mob/living/proc/do_adrenaline(
/mob/living/canface()
/mob/living/proc/set_gender(ngender = NEUTER, silent = FALSE, update_icon = TRUE, forced = FALSE)
/mob/living/vv_get_header()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_active_block.dm. ----------------------
/mob/living/proc/stop_active_blocking(was_forced = FALSE)
/mob/living/proc/active_block_start(obj/item/I)
/mob/living/proc/active_block_effect_start()
/mob/living/proc/active_block_effect_end()
/mob/living/proc/continue_starting_active_block()
/mob/living/get_standard_pixel_x_offset()
/mob/living/get_standard_pixel_y_offset()
/mob/living/proc/keybind_toggle_active_blocking()
/mob/living/proc/keybind_start_active_blocking()
/mob/living/proc/find_active_block_item()
/mob/living/proc/keybind_stop_active_blocking()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_active_parry.dm. ----------------------
/mob/living/proc/keybind_parry()
/mob/living/proc/initiate_parry_sequence(silent = FALSE, list/override_method_data)
/mob/living/proc/determine_parry_method(silent = TRUE, autoparry = FALSE)
/mob/living/proc/find_backup_parry_item()
/mob/living/proc/check_unarmed_parry_activation_special()
/mob/living/proc/end_parry_sequence()
/mob/living/proc/handle_parry_starting_effects(datum/block_parry_data/data)
/mob/living/proc/handle_parry_ending_effects(datum/block_parry_data/data, list/failed_effect_text)
/mob/living/proc/on_active_parry(mob/living/owner, atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/block_return, parry_efficiency, parry_time, autoparry = FALSE)
/mob/living/proc/active_parry_reflex_counter(mob/living/owner, atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/return_list, parry_efficiency, list/effect_text)
/mob/living/proc/attempt_auto_parry(atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/return_list = list())
/mob/living/proc/get_parry_stage()
/mob/living/proc/get_parry_time()
/mob/living/proc/run_parry(atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/return_list = list(), allow_auto = TRUE)
/mob/living/proc/handle_parry_feedback(atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/return_list = list(), parry_efficiency, list/effect_text, datum/block_parry_data/data)
/mob/living/proc/run_parry_countereffects(atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/return_list = list(), parry_efficiency, datum/block_parry_data/data)
/mob/living/proc/get_parry_data()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_block.dm. ----------------------
/mob/living/proc/do_run_block(real_attack = TRUE, atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/return_list = list(), attack_direction)
/mob/living/proc/get_blocking_items()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_blocking_parrying.dm. ----------------------
/mob/living/proc/handle_block_parry(seconds = 1)
/mob/living/on_item_dropped(obj/item/I)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_defense.dm. ----------------------
/mob/living/proc/run_armor_check(def_zone = null, attack_flag = MELEE, absorb_text = "Your armor absorbs the blow!", soften_text = "Your armor softens the blow!", armour_penetration, penetrated_text = "Your armor was penetrated!", silent=FALSE)
/mob/living/proc/getarmor(def_zone, type)
/mob/living/proc/get_eye_protection()
/mob/living/proc/get_ear_protection()
/mob/living/proc/is_mouth_covered(head_only = 0, mask_only = 0)
/mob/living/proc/is_eyes_covered(check_glasses = 1, check_head = 1, check_mask = 1)
/mob/living/proc/on_hit(obj/item/projectile/P)
/mob/living/proc/handle_projectile_attack_redirection(obj/item/projectile/P, redirection_mode, silent = FALSE)
/mob/living/bullet_act(obj/item/projectile/P, def_zone, piercing_hit = FALSE)
/mob/living/proc/check_projectile_dismemberment(obj/item/projectile/P, def_zone)
/mob/living/proc/catch_item(obj/item/I, skip_throw_mode_check = FALSE)
/mob/living/hitby(atom/movable/AM, skipcatch, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)
/mob/living/fire_act()
/mob/living/proc/grabbedby(mob/living/carbon/user, supress_message = FALSE)
/mob/living/proc/grippedby(mob/living/carbon/user, instant = FALSE)
/mob/living/on_attack_hand(mob/user, act_intent = user.a_intent, attackchain_flags)
/mob/living/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/attack_animal(mob/living/simple_animal/M)
/mob/living/attack_paw(mob/living/carbon/monkey/M)
/mob/living/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/ex_act(severity, target, origin)
/mob/living/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/acid_act(acidpwr, acid_volume)
/mob/living/proc/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/emp_act(severity)
/mob/living/singularity_act()
/mob/living/narsie_act()
/mob/living/ratvar_act()
/mob/living/proc/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0, visual = 0, type = /atom/movable/screen/fullscreen/tiled/flash, override_protection = 0)
/mob/living/proc/soundbang_act()
/mob/living/proc/damage_clothes(damage_amount, damage_type = BRUTE, damage_flag = 0, def_zone)
/mob/living/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
/mob/living/proc/getBruteLoss_nonProsthetic()
/mob/living/proc/getFireLoss_nonProsthetic()
/mob/living/proc/set_last_attacker(mob/attacker)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_defines.dm. ----------------------
/mob/living
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_mobility.dm. ----------------------
/mob/living/proc/set_resting(new_resting, silent = FALSE, updating = TRUE)
/mob/living/proc/update_resting(update_mobility = TRUE)
/mob/living/proc/KnockToFloor(disarm_items = FALSE, silent = TRUE, updating = TRUE)
/mob/living/proc/lay_down()
/mob/living/proc/resist_a_rest(automatic = FALSE, ignoretimer = FALSE) //Lets mobs resist out of resting. Major QOL change with combat reworks.
/mob/living/proc/update_mobility()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_movement.dm. ----------------------
/mob/living/Moved()
/mob/living/setDir(newdir, ismousemovement)
/mob/living/proc/update_pixel_shifting(moved = FALSE)
/mob/living/proc/update_density()
/mob/living/CanAllowThrough(atom/movable/mover, turf/target)
/mob/living/toggle_move_intent()
/mob/living/update_config_movespeed()
/mob/living/proc/can_move_under_living(mob/living/other)
/mob/living/proc/update_move_intent_slowdown()
/mob/living/proc/update_turf_movespeed(turf/open/T)
/mob/living/proc/update_pull_movespeed()
/mob/living/canZMove(dir, turf/target)
/mob/living/Move(atom/newloc, direct)
/mob/living/Move_Pulled(atom/A)
/mob/living/forceMove(atom/destination)
/mob/living/proc/update_z(new_z) // 1+ to register, null to unregister
/mob/living/onTransitZ(old_z,new_z)
/mob/living/canface()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_signals.dm. ----------------------
/mob/living/ComponentInitialize()
/mob/living/proc/update_pugilism()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\living_sprint.dm. ----------------------
/mob/living/ComponentInitialize()
/mob/living/proc/update_sprint_icon()
/mob/living/proc/update_hud_sprint_bar()
/mob/living/proc/update_sprint_lock()
/mob/living/proc/enable_sprint_mode(update_icon = TRUE)
/mob/living/proc/disable_sprint_mode(update_icon = TRUE)
/mob/living/proc/enable_intentional_sprint_mode()
/mob/living/proc/disable_intentional_sprint_mode()
/mob/living/proc/user_toggle_intentional_sprint_mode()
/mob/living/proc/sprint_hotkey(targetstatus)
/mob/living/proc/doSprintLossTiles(amount)
/mob/living/proc/default_toggle_sprint()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\login.dm. ----------------------
/mob/living/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\logout.dm. ----------------------
/mob/living/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\say.dm. ----------------------
/mob/living/proc/Ellipsis(original_msg, chance = 50, keep_words)
/mob/living/say(message, bubble_type,var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/compose_message(atom/movable/speaker, datum/language/message_language, raw_message, radio_freq, list/spans, message_mode, face_name = FALSE, atom/movable/source)
/mob/living/Hear(message, atom/movable/speaker, datum/language/message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
/mob/living/send_speech(message, message_range = 6, obj/source = src, bubble_type = bubble_icon, list/spans, datum/language/message_language=null, message_mode)
/mob/proc/binarycheck()
/mob/living/can_speak(message) //For use outside of Say()
/mob/living/proc/can_speak_basic(message, ignore_spam = FALSE) //Check BEFORE handling of xeno and ling channels
/mob/living/proc/can_speak_vocal(message) //Check AFTER handling of xeno and ling channels
/mob/living/proc/get_key(message)
/mob/living/proc/get_message_language(message)
/mob/living/proc/treat_message(message)
/mob/living/proc/radio(message, message_mode, list/spans, language)
/mob/living/say_mod(input, message_mode)
/mob/living/whisper(message, bubble_type, list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/get_language_holder(get_minds = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\smell.dm. ----------------------
/mob/living
/mob/living/proc/get_smell_sensitivity()
/mob/living/carbon/get_smell_sensitivity()
/mob/living/proc/smell(datum/gas_mixture/from)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\stamina_buffer.dm. ----------------------
/mob/living/proc/UseStaminaBuffer(amount, warn = FALSE, considered_action = TRUE)
/mob/living/proc/UpdateStaminaBuffer(updating_hud = TRUE)
/mob/living/proc/RechargeStaminaBuffer(amount)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\status_procs.dm. ----------------------
/mob/living/proc/DefaultCombatKnockdown(amount, updating = TRUE, ignore_canknockdown = FALSE, override_hardstun, override_stamdmg, knocktofloor = TRUE)
/mob/living/proc/IsStun() //If we're stunned
/mob/living/proc/AmountStun() //How many deciseconds remain in our stun
/mob/living/proc/Stun(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetStun(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustStun(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/IsKnockdown() //If we're knocked down
/mob/living/proc/AmountKnockdown() //How many deciseconds remain in our knockdown
/mob/living/proc/Knockdown(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetKnockdown(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustKnockdown(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/IsImmobilized() //If we're immobilized
/mob/living/proc/AmountImmobilized() //How many deciseconds remain in our Immobilized status effect
/mob/living/proc/Immobilize(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetImmobilized(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustImmobilized(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/IsParalyzed() //If we're immobilized
/mob/living/proc/AmountParalyzed() //How many deciseconds remain in our Paralyzed status effect
/mob/living/proc/Paralyze(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetParalyzed(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustParalyzed(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/IsDazed() //If we're Dazed
/mob/living/proc/AmountDazed() //How many deciseconds remain in our Dazed status effect
/mob/living/proc/Daze(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetDazed(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustDazed(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/IsStaggered() //If we're Staggered
/mob/living/proc/AmountStaggered() //How many deciseconds remain in our Staggered status effect
/mob/living/proc/Stagger(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetStaggered(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustStaggered(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/AllImmobility(amount, updating, ignore_canstun = FALSE)
/mob/living/proc/SetAllImmobility(amount, updating, ignore_canstun = FALSE)
/mob/living/proc/AdjustAllImmobility(amount, updating, ignore_canstun = FALSE)
/mob/living/proc/HealAllImmobilityUpTo(amount, updating, ignore_canstun = FALSE)
/mob/living/proc/HighestImmobilityAmount()
/mob/living/proc/IsUnconscious() //If we're unconscious
/mob/living/proc/AmountUnconscious() //How many deciseconds remain in our unconsciousness
/mob/living/proc/Unconscious(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetUnconscious(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustUnconscious(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/IsSleeping() //If we're asleep
/mob/living/proc/AmountSleeping() //How many deciseconds remain in our sleep
/mob/living/proc/Sleeping(amount, updating = TRUE, ignore_canstun = FALSE) //Can't go below remaining duration
/mob/living/proc/SetSleeping(amount, updating = TRUE, ignore_canstun = FALSE) //Sets remaining duration
/mob/living/proc/AdjustSleeping(amount, updating = TRUE, ignore_canstun = FALSE) //Adds to remaining duration
/mob/living/proc/ShoveOffBalance(amount)
/mob/living/proc/IsFrozen()
/mob/living/proc/add_stun_absorption(key, duration, priority, message, self_message, examine_message)
/mob/living/proc/absorb_stun(amount, ignoring_flag_presence)
/mob/living/proc/add_quirk(quirktype, spawn_effects) //separate proc due to the way these ones are handled
/mob/living/proc/remove_quirk(quirktype)
/mob/living/proc/has_quirk(quirktype)
/mob/living/proc/cure_blind(source)
/mob/living/proc/become_blind(source)
/mob/living/proc/cure_nearsighted(source)
/mob/living/proc/become_nearsighted(source)
/mob/living/proc/cure_husk(source)
/mob/living/proc/become_husk(source)
/mob/living/proc/cure_fakedeath(source)
/mob/living/proc/fakedeath(source, silent = FALSE)
/mob/living/proc/unignore_slowdown(source)
/mob/living/proc/ignore_slowdown(source)
/mob/living/proc/add_movespeed_mod_immunities(source, slowdown_type, update = TRUE)
/mob/living/proc/remove_movespeed_mod_immunities(source, slowdown_type, update = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\taste.dm. ----------------------
/mob/living
/mob/living/proc/get_taste_sensitivity()
/mob/living/carbon/get_taste_sensitivity()
/mob/living/proc/taste(datum/reagents/from)
/mob/living/carbon/taste(datum/reagents/from)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\update_icons.dm. ----------------------
/mob/living/update_transform(do_animate = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\ventcrawling.dm. ----------------------
/mob/living/proc/handle_ventcrawl(atom/A, ventcrawler)
/mob/living/simple_animal/slime/handle_ventcrawl(atom/A)
/mob/living/proc/add_ventcrawl(obj/machinery/atmospherics/starting_machine)
/mob/living/proc/remove_ventcrawl()
/mob/living/update_pipe_vision(atom/new_loc = null)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\brain\brain.dm. ----------------------
/mob/living/brain
/mob/living/brain/Initialize(mapload)
/mob/living/brain/proc/create_dna()
/mob/living/brain/Destroy()
/mob/living/brain/update_mobility()
/mob/living/brain/ex_act(severity, target, origin) //you cant blow up brainmobs because it makes transfer_to() freak out when borgs blow up.
/mob/living/brain/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/brain/blob_act(obj/structure/blob/B)
/mob/living/brain/get_eye_protection()//no eyes
/mob/living/brain/get_ear_protection()//no ears
/mob/living/brain/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0)
/mob/living/brain/can_be_revived()
/mob/living/brain/fully_replace_character_name(oldname,newname)
/mob/living/brain/forceMove(atom/destination)
/mob/living/brain/update_mouse_pointer()
/mob/living/brain/proc/get_traumas()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\brain\death.dm. ----------------------
/mob/living/brain/death(gibbed)
/mob/living/brain/gib()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\brain\life.dm. ----------------------
/mob/living/brain/BiologicalLife(delta_time, times_fired)
/mob/living/brain/update_stat()
/mob/living/brain/proc/handle_emp_damage()
/mob/living/brain/handle_traits()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\brain\say.dm. ----------------------
/mob/living/brain/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/brain/radio(message, message_mode, list/spans, language)
/mob/living/brain/lingcheck()
/mob/living/brain/treat_message(message)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\brain\status_procs.dm. ----------------------
/mob/living/brain/blind_eyes() // no eyes to damage or heal
/mob/living/brain/adjust_blindness()
/mob/living/brain/set_blindness()
/mob/living/brain/blur_eyes()
/mob/living/brain/adjust_blurriness()
/mob/living/brain/set_blurriness()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon.dm. ----------------------
/mob/living/carbon
/mob/living/carbon/Initialize(mapload)
/mob/living/carbon/Destroy()
/mob/living/carbon/relaymove(mob/user, direction)
/mob/living/carbon/swap_hand(held_index)
/mob/living/carbon/activate_hand(selhand) //l/r OR 1-held_items.len
/mob/living/carbon/attackby(obj/item/I, mob/user, params)
/mob/living/carbon/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
/mob/living/carbon/proc/toggle_throw_mode()
/mob/living/carbon/proc/throw_mode_off()
/mob/living/carbon/proc/throw_mode_on()
/mob/proc/throw_item(atom/target)
/mob/living/carbon/throw_item(atom/target)
/mob/living/carbon/restrained(ignore_grab)
/mob/living/carbon/proc/canBeHandcuffed()
/mob/living/carbon/Topic(href, href_list)
/mob/living/carbon/fall(forced)
/mob/living/carbon/is_muzzled()
/mob/living/carbon/hallucinating()
/mob/living/carbon/resist_buckle()
/mob/living/carbon/resist_fire()
/mob/living/carbon/resist_restraints()
/mob/living/carbon/proc/cuff_resist(obj/item/I, breakouttime = 600, cuff_break = 0)
/mob/living/carbon/proc/uncuff()
/mob/living/carbon/proc/clear_cuffs(obj/item/I, cuff_break)
/mob/living/carbon/get_standard_pixel_y_offset(lying = 0)
/mob/living/carbon/proc/accident(obj/item/I)
/mob/living/carbon/get_status_tab_items()
/mob/living/carbon/get_proc_holders()
/mob/living/carbon/attack_ui(slot)
/mob/living/carbon/proc/vomit(lost_nutrition = 10, blood = FALSE, stun = TRUE, distance = 1, message = TRUE, vomit_type = VOMIT_TOXIC, harm = TRUE, force = FALSE, purge_ratio = 0.1)
/mob/living/carbon/proc/spew_organ(power = 5, amt = 1)
/mob/living/carbon/fully_replace_character_name(oldname,newname)
/mob/living/carbon/updatehealth()
/mob/living/carbon/update_stamina()
/mob/living/carbon/update_sight()
/mob/living/carbon/proc/update_tint()
/mob/living/carbon/proc/get_total_tint()
/mob/living/carbon/get_permeability_protection(list/target_zones = list(HANDS,CHEST,GROIN,LEGS,FEET,ARMS,HEAD))
/mob/living/carbon/update_damage_hud()
/mob/living/carbon/update_health_hud(shown_health_amount)
/mob/living/carbon/proc/update_internals_hud_icon(internal_state = 0)
/mob/living/carbon/update_stat()
/mob/living/carbon/proc/update_handcuffed()
/mob/living/carbon/proc/can_revive(ignore_timelimit = FALSE, maximum_brute_dam = MAX_REVIVE_BRUTE_DAMAGE, maximum_fire_dam = MAX_REVIVE_FIRE_DAMAGE, ignore_heart = FALSE)
/mob/living/carbon/fully_heal(admin_revive = FALSE)
/mob/living/carbon/can_be_revived()
/mob/living/carbon/harvest(mob/living/user)
/mob/living/carbon/ExtinguishMob()
/mob/living/carbon/fakefire(var/fire_icon = "Generic_mob_burning")
/mob/living/carbon/fakefireextinguish()
/mob/living/carbon/proc/devour_mob(mob/living/carbon/C, devour_time = 130)
/mob/living/carbon/proc/create_bodyparts()
/mob/living/carbon/proc/create_internal_organs()
/mob/living/carbon/proc/update_disabled_bodyparts(silent = FALSE)
/mob/living/carbon/vv_get_dropdown()
/mob/living/carbon/vv_do_topic(list/href_list)
/mob/living/carbon/can_resist()
/mob/living/carbon/proc/hypnosis_vulnerable()//unused atm, but added in case
/mob/living/carbon/can_see_reagents()
/mob/living/carbon/can_hold_items()
/mob/living/carbon/set_gender(ngender = NEUTER, silent = FALSE, update_icon = TRUE, forced = FALSE)
/mob/living/carbon/check_obscured_slots()
/mob/living/carbon/proc/is_bleeding()
/mob/living/carbon/proc/get_total_bleed_rate()
/mob/living/carbon/proc/generate_fake_scars(num_scars, forced_type)
/mob/living/carbon/proc/get_biological_state()
/mob/living/carbon/altattackby(obj/item/W, mob/living/carbon/user, params)
/mob/living/carbon/verb/give_verb()
/mob/living/carbon/proc/functional_blood()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon_active_parry.dm. ----------------------
/mob/living/carbon/check_unarmed_parry_activation_special()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon_context.dm. ----------------------
/mob/living/carbon/add_context(atom/source, list/context, obj/item/held_item, mob/living/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon_defense.dm. ----------------------
/mob/living/carbon/get_eye_protection()
/mob/living/carbon/get_ear_protection()
/mob/living/carbon/is_mouth_covered(head_only = 0, mask_only = 0)
/mob/living/carbon/is_eyes_covered(check_glasses = 1, check_head = 1, check_mask = 1)
/mob/living/carbon/check_projectile_dismemberment(obj/item/projectile/P, def_zone)
/mob/living/carbon/catch_item(obj/item/I, skip_throw_mode_check = FALSE)
/mob/living/carbon/attacked_by(obj/item/I, mob/living/user, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/carbon/attack_drone(mob/living/simple_animal/drone/user)
/mob/living/carbon/on_attack_hand(mob/living/carbon/human/user, act_intent, unarmed_attack_flags)
/mob/living/carbon/attack_paw(mob/living/carbon/monkey/M)
/mob/living/carbon/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/carbon/proc/dismembering_strike(mob/living/attacker, dam_zone)
/mob/living/carbon/blob_act(obj/structure/blob/B)
/mob/living/carbon/emp_act(severity)
/mob/living/carbon/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/carbon/proc/secondary_shock(should_stun)
/mob/living/carbon/proc/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/proc/check_self_for_injuries()
/mob/living/carbon/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0, visual = 0, type = /atom/movable/screen/fullscreen/tiled/flash, override_protection = 0)
/mob/living/carbon/soundbang_act(intensity = 1, stun_pwr = 20, damage_pwr = 5, deafen_pwr = 15)
/mob/living/carbon/damage_clothes(damage_amount, damage_type = BRUTE, damage_flag = 0, def_zone)
/mob/living/carbon/can_hear()
/mob/living/carbon/getBruteLoss_nonProsthetic()
/mob/living/carbon/getFireLoss_nonProsthetic()
/mob/living/carbon/proc/get_interaction_efficiency(zone)
/mob/living/carbon/send_item_attack_message(obj/item/I, mob/living/user, hit_area, obj/item/bodypart/hit_bodypart, totitemdamage)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon_defines.dm. ----------------------
/mob/living/carbon
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon_movement.dm. ----------------------
/mob/living/carbon/slip(knockdown_amount, obj/O, lube)
/mob/living/carbon/Process_Spacemove(movement_dir = 0)
/mob/living/carbon/Moved()
/mob/living/carbon/can_move_under_living(mob/living/other)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\carbon_sprint.dm. ----------------------
/mob/living/carbon/doSprintLossTiles(tiles)
/mob/living/carbon/proc/doSprintBufferRegen(updating = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\damage_procs.dm. ----------------------
/mob/living/carbon/apply_damage(damage, damagetype = BRUTE, def_zone = null, blocked = FALSE, forced = FALSE, spread_damage = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE)
/mob/living/carbon/getBruteLoss()
/mob/living/carbon/getFireLoss()
/mob/living/carbon/adjustBruteLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/carbon/adjustFireLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/carbon/adjustToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_DEFAULT)
/mob/living/carbon/getStaminaLoss()
/mob/living/carbon/adjustStaminaLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/carbon/setStaminaLoss(amount, updating = TRUE, forced = FALSE)
/mob/living/carbon/adjustOrganLoss(slot, amount, maximum)
/mob/living/carbon/setOrganLoss(slot, amount)
/mob/living/carbon/getOrganLoss(slot)
/mob/living/carbon/proc/adjustAllOrganLoss(amount, maximum)
/mob/living/carbon/proc/getFailingOrgans()
/mob/living/carbon/proc/get_damaged_bodyparts(brute = FALSE, burn = FALSE, stamina = FALSE, list/status)
/mob/living/carbon/proc/get_damageable_bodyparts()
/mob/living/carbon/heal_bodypart_damage(brute = 0, burn = 0, stamina = 0, updating_health = TRUE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/carbon/take_bodypart_damage(brute = 0, burn = 0, stamina = 0, updating_health = TRUE, required_status, check_armor = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE)
/mob/living/carbon/heal_overall_damage(brute = 0, burn = 0, stamina = 0, only_robotic = FALSE, only_organic = TRUE, updating_health = TRUE)
/mob/living/carbon/take_overall_damage(brute = 0, burn = 0, stamina = 0, updating_health = TRUE, required_status)
/mob/living/carbon/proc/get_wounded_bodyparts(brute = FALSE, burn = FALSE, stamina = FALSE, status)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\death.dm. ----------------------
/mob/living/carbon/death(gibbed)
/mob/living/carbon/gib(no_brain, no_organs, no_bodyparts, datum/explosion/was_explosion)
/mob/living/carbon/spill_organs(no_brain, no_organs, no_bodyparts, datum/explosion/was_explosion)
/mob/living/carbon/spread_bodyparts(no_brain, no_organs, datum/explosion/was_explosion)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\examine.dm. ----------------------
/mob/living/carbon/examine(mob/user)
/mob/living/carbon/examine_more(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\handle_corruption.dm. ----------------------
/mob/living/carbon/proc/handle_corruption()
/mob/living/carbon/proc/reenable_limb(disabled_limb)
/mob/living/carbon/proc/reenable_hearing()
/mob/living/carbon/proc/reenable_vision()
/mob/living/carbon/proc/reenable_speech()
/mob/living/carbon/proc/forcesleep(time = 100)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\inventory.dm. ----------------------
/mob/living/carbon/get_item_by_slot(slot_id)
/mob/living/carbon/proc/equip_in_one_of_slots(obj/item/I, list/slots, qdel_on_fail = 1, critical = FALSE)
/mob/living/carbon/equip_to_slot(obj/item/I, slot)
/mob/living/carbon/doUnEquip(obj/item/I, force, newloc, no_move, invdrop = TRUE, silent = FALSE)
/mob/living/proc/wear_mask_update(obj/item/clothing/C, toggle_off = 1)
/mob/living/carbon/wear_mask_update(obj/item/clothing/C, toggle_off = 1)
/mob/living/carbon/proc/head_update(obj/item/I, forced)
/mob/living/carbon/proc/get_holding_bodypart_of_item(obj/item/I)
/mob/living/carbon/proc/give(target)
/mob/living/carbon/proc/take(mob/living/carbon/offerer, obj/item/I)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\life.dm. ----------------------
/mob/living/carbon/BiologicalLife(delta_time, times_fired)
/mob/living/carbon/PhysicalLife(seconds, times_fired)
/mob/living/carbon/proc/handle_death()
/mob/living/carbon/handle_breathing(times_fired)
/mob/living/carbon/proc/breathe()
/mob/living/carbon/proc/has_smoke_protection()
/mob/living/carbon/proc/check_breath(datum/gas_mixture/breath)
/mob/living/carbon/proc/handle_breath_temperature(datum/gas_mixture/breath)
/mob/living/carbon/proc/get_breath_from_internal(volume_needed)
/mob/living/carbon/proc/rot()
/mob/living/carbon/proc/handle_blood(delta_time, times_fired)
/mob/living/carbon/proc/handle_bodyparts(seconds, times_fired)
/mob/living/carbon/proc/handle_organs(seconds, times_fired)
/mob/living/carbon/handle_diseases()
/mob/living/carbon/handle_wounds()
/mob/living/carbon/handle_mutations_and_radiation()
/mob/living/carbon/handle_stomach()
/mob/living/carbon/handle_status_effects()
/mob/living/carbon/proc/natural_bodytemperature_stabilization()
/mob/living/carbon/proc/get_cooling_efficiency()
/mob/living/carbon/proc/get_environment_cooling_efficiency()
/mob/living/carbon/proc/check_suitlinking()
/mob/living/carbon/proc/handle_liver(seconds, times_fired)
/mob/living/carbon/proc/liver_failure(seconds, times_fired)
/mob/living/carbon/proc/handle_brain_damage()
/mob/living/carbon/proc/can_heartattack()
/mob/living/carbon/proc/needs_heart()
/mob/living/carbon/proc/undergoing_cardiac_arrest()
/mob/living/carbon/proc/set_heartattack(status)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\say.dm. ----------------------
/mob/living/carbon/proc/handle_tongueless_speech(mob/living/carbon/speaker, list/speech_args)
/mob/living/carbon/can_speak_vocal(message)
/mob/living/carbon/could_speak_language(datum/language/language)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\status_procs.dm. ----------------------
/mob/living/carbon/adjust_drugginess(amount)
/mob/living/carbon/set_drugginess(amount)
/mob/living/carbon/adjust_disgust(amount)
/mob/living/carbon/set_disgust(amount)
/mob/living/carbon/proc/get_traumas()
/mob/living/carbon/proc/has_trauma_type(brain_trauma_type, resilience)
/mob/living/carbon/proc/gain_trauma(datum/brain_trauma/trauma, resilience, ...)
/mob/living/carbon/proc/gain_trauma_type(brain_trauma_type = /datum/brain_trauma, resilience)
/mob/living/carbon/proc/cure_trauma_type(brain_trauma_type = /datum/brain_trauma, resilience)
/mob/living/carbon/proc/cure_all_traumas(resilience)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\update_icons.dm. ----------------------
/mob/living/carbon
/mob/living/carbon/proc/apply_overlay(cache_index)
/mob/living/carbon/proc/remove_overlay(cache_index)
/mob/living/carbon/regenerate_icons()
/mob/living/carbon/update_inv_hands()
/mob/living/carbon/update_fire(var/fire_icon = "Generic_mob_burning")
/mob/living/carbon/update_damage_overlays()
/mob/living/carbon/update_inv_wear_mask()
/mob/living/carbon/update_inv_neck()
/mob/living/carbon/update_inv_back()
/mob/living/carbon/update_inv_head()
/mob/living/carbon/update_inv_handcuffed()
/mob/living/carbon/update_inv_legcuffed()
/mob/living/carbon/proc/update_hud_handcuffed()
/mob/living/carbon/proc/update_hud_head(obj/item/I)
/mob/living/carbon/proc/update_hud_wear_mask(obj/item/I)
/mob/living/carbon/proc/update_hud_neck(obj/item/I)
/mob/living/carbon/proc/update_hud_back(obj/item/I)
/mob/living/carbon/update_body()
/mob/living/carbon/proc/update_body_parts()
/mob/living/carbon/proc/generate_icon_render_key()
/mob/living/carbon/proc/load_limb_from_cache()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\alien.dm. ----------------------
/mob/living/carbon/alien
/mob/living/carbon/alien/Initialize(mapload)
/mob/living/carbon/alien/create_internal_organs()
/mob/living/carbon/alien/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null) // beepsky won't hunt aliums
/mob/living/carbon/alien/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/alien/reagent_check(datum/reagent/R) //can metabolize all reagents
/mob/living/carbon/alien/IsAdvancedToolUser()
/mob/living/carbon/alien/get_status_tab_items()
/mob/living/carbon/alien/getTrail()
/mob/living/carbon/alien/proc/AddInfectionImages()
/mob/living/carbon/alien/proc/RemoveInfectionImages()
/mob/living/carbon/alien/canBeHandcuffed()
/mob/living/carbon/alien/get_standard_pixel_y_offset(lying = 0)
/mob/living/carbon/alien/proc/alien_evolve(mob/living/carbon/alien/new_xeno)
/mob/living/carbon/alien/can_hold_items()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\alien_defense.dm. ----------------------
/mob/living/carbon/alien/get_eye_protection()
/mob/living/carbon/alien/get_ear_protection()
/mob/living/carbon/alien/hitby(atom/movable/AM, skipcatch, hitpush, blocked, datum/thrownthing/throwingdatum)
/mob/living/carbon/alien/attack_alien(mob/living/carbon/alien/M)
/mob/living/carbon/alien/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/carbon/alien/on_attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/alien/attack_paw(mob/living/carbon/monkey/M)
/mob/living/carbon/alien/attack_animal(mob/living/simple_animal/M)
/mob/living/carbon/alien/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/carbon/alien/ex_act(severity, target, origin)
/mob/living/carbon/alien/soundbang_act(intensity = 1, stun_pwr = 20, damage_pwr = 5, deafen_pwr = 15)
/mob/living/carbon/alien/acid_act(acidpwr, acid_volume)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\damage_procs.dm. ----------------------
/mob/living/carbon/alien/getToxLoss(toxins_type = TOX_OMNI)
/mob/living/carbon/alien/adjustToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_DEFAULT) //alien immune to tox damage
/mob/living/carbon/alien/adjustStaminaLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/carbon/alien/setStaminaLoss(amount, updating_health = TRUE, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\death.dm. ----------------------
/mob/living/carbon/alien/spawn_gibs(with_bodyparts, atom/loc_override)
/mob/living/carbon/alien/gib_animation()
/mob/living/carbon/alien/spawn_dust()
/mob/living/carbon/alien/dust_animation()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\life.dm. ----------------------
/mob/living/carbon/alien/BiologicalLife(delta_time, times_fired)
/mob/living/carbon/alien/check_breath(datum/gas_mixture/breath)
/mob/living/carbon/alien/handle_status_effects()
/mob/living/carbon/alien/handle_fire()//Aliens on fire code
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\login.dm. ----------------------
/mob/living/carbon/alien/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\logout.dm. ----------------------
/mob/living/carbon/alien/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\say.dm. ----------------------
/mob/living/proc/alien_talk(message, shown_name = real_name)
/mob/living/carbon/alien/humanoid/royal/queen/alien_talk(message, shown_name = name)
/mob/living/carbon/hivecheck()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\screen.dm. ----------------------
/mob/living/carbon/alien/proc/updatePlasmaDisplay()
/mob/living/carbon/alien/larva/updatePlasmaDisplay()
/mob/living/carbon/alien/proc/findQueen()
/mob/living/carbon/alien/humanoid/royal/queen/findQueen()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\status_procs.dm. ----------------------
/mob/living/carbon/alien/DefaultCombatKnockdown(amount, updating = TRUE, ignore_canknockdown = FALSE, override_hardstun, override_stamdmg, knocktofloor)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\update_icons.dm. ----------------------
/mob/living/carbon/alien/update_damage_overlays() //aliens don't have damage overlays.
/mob/living/carbon/alien/update_body() // we don't use the bodyparts or body layers for aliens.
/mob/living/carbon/alien/update_body_parts()//we don't use the bodyparts layer for aliens.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\alien_powers.dm. ----------------------
/mob/living/carbon/proc/corrosive_acid(O as obj|turf in oview(1)) // right click menu verb ugh
/mob/living/carbon/proc/getPlasma()
/mob/living/carbon/proc/adjustPlasma(amount)
/mob/living/carbon/alien/adjustPlasma(amount)
/mob/living/carbon/proc/usePlasma(amount)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\death.dm. ----------------------
/mob/living/carbon/alien/humanoid/death(gibbed)
/mob/living/carbon/alien/humanoid/royal/queen/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\humanoid.dm. ----------------------
/mob/living/carbon/alien/humanoid
/mob/living/carbon/alien/humanoid/Initialize(mapload)
/mob/living/carbon/alien/humanoid/Destroy()
/mob/living/carbon/alien/humanoid/ComponentInitialize()
/mob/living/carbon/alien/humanoid/restrained(ignore_grab)
/mob/living/carbon/alien/humanoid/Topic(href, href_list)
/mob/living/carbon/alien/humanoid/cuff_resist(obj/item/I)
/mob/living/carbon/alien/humanoid/do_resist_grab(moving_resist, forced, silent = FALSE)
/mob/living/carbon/alien/humanoid/get_standard_pixel_y_offset(lying = 0)
/mob/living/carbon/alien/humanoid/get_standard_pixel_x_offset(lying = 0)
/mob/living/carbon/alien/humanoid/get_permeability_protection(list/target_zones)
/mob/living/carbon/alien/humanoid/alien_evolve(mob/living/carbon/alien/humanoid/new_xeno)
/mob/living/carbon/alien/humanoid/check_breath(datum/gas_mixture/breath)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\humanoid_defense.dm. ----------------------
/mob/living/carbon/alien/humanoid/grabbedby(mob/living/carbon/user, supress_message = 0)
/mob/living/carbon/alien/humanoid/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/carbon/alien/humanoid/on_attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/alien/humanoid/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\life.dm. ----------------------
/mob/living/carbon/alien/humanoid/proc/adjust_body_temperature(current, loc_temp, boost)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\queen.dm. ----------------------
/mob/living/carbon/alien/humanoid/royal
/mob/living/carbon/alien/humanoid/royal/can_inject(mob/user, error_msg, target_zone, penetrate_thick = FALSE, bypass_immunity = FALSE)
/mob/living/carbon/alien/humanoid/royal/queen
/mob/living/carbon/alien/humanoid/royal/queen/Initialize(mapload)
/mob/living/carbon/alien/humanoid/royal/queen/Destroy()
/mob/living/carbon/alien/humanoid/royal/queen/create_internal_organs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\update_icons.dm. ----------------------
/mob/living/carbon/alien/humanoid/update_icons()
/mob/living/carbon/alien/humanoid/regenerate_icons()
/mob/living/carbon/alien/humanoid/update_transform(do_animate) //The old method of updating lying/standing was update_icons(). Aliens still expect that.
/mob/living/carbon/alien/humanoid/update_inv_handcuffed()
/mob/living/carbon/alien/humanoid/royal/update_inv_hands()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\caste\drone.dm. ----------------------
/mob/living/carbon/alien/humanoid/drone
/mob/living/carbon/alien/humanoid/drone/Initialize(mapload)
/mob/living/carbon/alien/humanoid/drone/create_internal_organs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\caste\hunter.dm. ----------------------
/mob/living/carbon/alien/humanoid/hunter
/mob/living/carbon/alien/humanoid/hunter/create_internal_organs()
/mob/living/carbon/alien/humanoid/hunter/proc/toggle_leap(message = 1)
/mob/living/carbon/alien/humanoid/hunter/ClickOn(atom/A, params)
/mob/living/carbon/alien/humanoid/hunter/proc/leap_at(atom/A)
/mob/living/carbon/alien/humanoid/hunter/proc/leap_end()
/mob/living/carbon/alien/humanoid/hunter/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
/mob/living/carbon/alien/humanoid/float(on)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\caste\praetorian.dm. ----------------------
/mob/living/carbon/alien/humanoid/royal/praetorian
/mob/living/carbon/alien/humanoid/royal/praetorian/Initialize(mapload)
/mob/living/carbon/alien/humanoid/royal/praetorian/create_internal_organs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\humanoid\caste\sentinel.dm. ----------------------
/mob/living/carbon/alien/humanoid/sentinel
/mob/living/carbon/alien/humanoid/sentinel/Initialize(mapload)
/mob/living/carbon/alien/humanoid/sentinel/create_internal_organs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\larva\death.dm. ----------------------
/mob/living/carbon/alien/larva/death(gibbed)
/mob/living/carbon/alien/larva/spawn_gibs(with_bodyparts, atom/loc_override)
/mob/living/carbon/alien/larva/gib_animation()
/mob/living/carbon/alien/larva/spawn_dust()
/mob/living/carbon/alien/larva/dust_animation()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\larva\inventory.dm. ----------------------
/mob/living/carbon/alien/larva/doUnEquip(obj/item/W, silent = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\larva\larva.dm. ----------------------
/mob/living/carbon/alien/larva
/mob/living/carbon/alien/larva/Initialize(mapload)
/mob/living/carbon/alien/larva/create_internal_organs()
/mob/living/carbon/alien/larva/get_status_tab_items()
/mob/living/carbon/alien/larva/adjustPlasma(amount)
/mob/living/carbon/alien/larva/attack_ui(slot_id)
/mob/living/carbon/alien/larva/restrained(ignore_grab)
/mob/living/carbon/alien/larva/toggle_throw_mode()
/mob/living/carbon/alien/larva/start_pulling(atom/movable/AM, state, force = move_force, supress_message = FALSE)
/mob/living/carbon/alien/larva/stripPanelUnequip(obj/item/what, mob/who)
/mob/living/carbon/alien/larva/stripPanelEquip(obj/item/what, mob/who)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\larva\larva_defense.dm. ----------------------
/mob/living/carbon/alien/larva/on_attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/alien/larva/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/carbon/alien/larva/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\larva\life.dm. ----------------------
/mob/living/carbon/alien/larva/BiologicalLife(delta_time, times_fired)
/mob/living/carbon/alien/larva/update_stat()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\alien\larva\update_icons.dm. ----------------------
/mob/living/carbon/alien/larva/regenerate_icons()
/mob/living/carbon/alien/larva/update_icons()
/mob/living/carbon/alien/larva/update_transform(do_animate) //All this is handled in update_icons()
/mob/living/carbon/alien/larva/update_inv_handcuffed()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\damage_procs.dm. ----------------------
/mob/living/carbon/human/apply_damage(damage = 0,damagetype = BRUTE, def_zone = null, blocked = FALSE, forced = FALSE, spread_damage = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\death.dm. ----------------------
/mob/living/carbon/human/gib_animation()
/mob/living/carbon/human/dust_animation()
/mob/living/carbon/human/spawn_gibs(with_bodyparts, atom/loc_override)
/mob/living/carbon/human/spawn_dust(just_ash = FALSE)
/mob/living/carbon/human/death(gibbed)
/mob/living/carbon/human/proc/makeSkeleton()
/mob/living/carbon/proc/Drain()
/mob/living/carbon/proc/makeUncloneable()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\dummy.dm. ----------------------
/mob/living/carbon/human/dummy
/mob/living/carbon/human/vore
/mob/living/carbon/human/dummy/Destroy()
/mob/living/carbon/human/dummy/Life()
/mob/living/carbon/human/dummy/update_mobility()
/mob/living/carbon/human/dummy/proc/wipe_state()
/mob/living/carbon/human/dummy/setup_human_dna()
/mob/living/carbon/human/dummy/consistent
/mob/living/carbon/human/dummy/consistent/setup_human_dna()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\emote.dm. ----------------------
/mob/living/carbon/human/proc/OpenWings()
/mob/living/carbon/human/proc/CloseWings()
/mob/living/carbon/human/proc/beginRockPaperScissors(var/chosen_move)
/mob/living/carbon/human/proc/rockpaperscissors_tick() //called every cycle of the progress bar for rock paper scissors while waiting for an opponent
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\examine.dm. ----------------------
/mob/living/carbon/human/examine(mob/user)
/mob/living/proc/status_effect_examines(pronoun_replacement) //You can include this in any mob's examine() to show the examine texts of status effects!
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human.dm. ----------------------
/mob/living/carbon/human
/mob/living/carbon/human/Initialize(mapload)
/mob/living/carbon/human/proc/setup_human_dna()
/mob/living/carbon/human/ComponentInitialize()
/mob/living/carbon/human/Destroy()
/mob/living/carbon/human/prepare_data_huds()
/mob/living/carbon/human/get_status_tab_items()
/mob/living/carbon/human/Crossed(atom/movable/AM)
/mob/living/carbon/human/Topic(href, href_list)
/mob/living/carbon/human/proc/canUseHUD()
/mob/living/carbon/human/can_inject(mob/user, error_msg, target_zone, penetrate_thick = FALSE, bypass_immunity = FALSE)
/mob/living/carbon/human/check_obscured_slots()
/mob/living/carbon/human/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null)
/mob/living/carbon/human/proc/set_cloned_appearance()
/mob/living/carbon/human/singularity_pull(S, current_size)
/mob/living/carbon/human/proc/do_cpr(mob/living/carbon/C)
/mob/living/carbon/human/cuff_resist(obj/item/I)
/mob/living/carbon/human/clean_blood()
/mob/living/carbon/human/wash_cream()
/mob/living/carbon/human/proc/electrocution_animation(anim_duration)
/mob/living/carbon/human/proc/end_electrocution_animation(mutable_appearance/MA)
/mob/living/carbon/human/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE, check_resting = TRUE)
/mob/living/carbon/human/resist_restraints()
/mob/living/carbon/human/replace_records_name(oldname,newname) // Only humans have records right now, move this up if changed.
/mob/living/carbon/human/get_total_tint()
/mob/living/carbon/human/update_health_hud()
/mob/living/carbon/human/fully_heal(admin_revive = FALSE)
/mob/living/carbon/human/check_weakness(obj/item/weapon, mob/living/attacker)
/mob/living/carbon/human/is_literate()
/mob/living/carbon/human/update_gravity(has_gravity,override = 0)
/mob/living/carbon/human/vomit(lost_nutrition = 10, blood = FALSE, stun = TRUE, distance = 1, message = TRUE, vomit_type = VOMIT_TOXIC, harm = TRUE, force = FALSE, purge_ratio = 0.1)
/mob/living/carbon/human/vv_get_dropdown()
/mob/living/carbon/human/vv_do_topic(list/href_list)
/mob/living/carbon/human/MouseDrop_T(mob/living/target, mob/living/user)
/mob/living/carbon/human/proc/can_piggyback(mob/living/target)
/mob/living/carbon/human/proc/can_be_firemanned(mob/living/carbon/target)
/mob/living/carbon/human/proc/fireman_carry(mob/living/carbon/target)
/mob/living/carbon/human/proc/piggyback(mob/living/carbon/target)
/mob/living/carbon/human/buckle_mob(mob/living/target, force = FALSE, check_loc = TRUE, lying_buckle = 0, hands_needed = 0, target_hands_needed = 0, fireman = FALSE)
/mob/living/carbon/human/proc/is_shove_knockdown_blocked() //If you want to add more things that block shove knockdown, extend this
/mob/living/carbon/human/updatehealth()
/mob/living/carbon/human/is_bleeding()
/mob/living/carbon/human/get_total_bleed_rate()
/mob/living/carbon/human/species
/mob/living/carbon/human/species/Initialize(mapload)
/mob/living/carbon/human/proc/spec_trait_examine_font()
/mob/living/carbon/human/get_tooltip_data()
/mob/living/carbon/human/chestonly
/mob/living/carbon/human/species/abductor
/mob/living/carbon/human/species/android
/mob/living/carbon/human/species/corporate
/mob/living/carbon/human/species/felinid
/mob/living/carbon/human/species/fly
/mob/living/carbon/human/species/golem
/mob/living/carbon/human/species/golem/random
/mob/living/carbon/human/species/golem/adamantine
/mob/living/carbon/human/species/golem/plasma
/mob/living/carbon/human/species/golem/diamond
/mob/living/carbon/human/species/golem/gold
/mob/living/carbon/human/species/golem/silver
/mob/living/carbon/human/species/golem/plasteel
/mob/living/carbon/human/species/golem/titanium
/mob/living/carbon/human/species/golem/plastitanium
/mob/living/carbon/human/species/golem/alien_alloy
/mob/living/carbon/human/species/golem/wood
/mob/living/carbon/human/species/golem/uranium
/mob/living/carbon/human/species/golem/sand
/mob/living/carbon/human/species/golem/glass
/mob/living/carbon/human/species/golem/bluespace
/mob/living/carbon/human/species/golem/bananium
/mob/living/carbon/human/species/golem/blood_cult
/mob/living/carbon/human/species/golem/cloth
/mob/living/carbon/human/species/golem/plastic
/mob/living/carbon/human/species/golem/bronze
/mob/living/carbon/human/species/golem/cardboard
/mob/living/carbon/human/species/golem/leather
/mob/living/carbon/human/species/golem/bone
/mob/living/carbon/human/species/golem/durathread
/mob/living/carbon/human/species/golem/clockwork
/mob/living/carbon/human/species/golem/clockwork/no_scrap
/mob/living/carbon/human/species/jelly
/mob/living/carbon/human/species/jelly/slime
/mob/living/carbon/human/species/jelly/stargazer
/mob/living/carbon/human/species/jelly/luminescent
/mob/living/carbon/human/species/lizard
/mob/living/carbon/human/species/ethereal
/mob/living/carbon/human/species/lizard/ashwalker
/mob/living/carbon/human/species/insect
/mob/living/carbon/human/species/mush
/mob/living/carbon/human/species/plasma
/mob/living/carbon/human/species/pod
/mob/living/carbon/human/species/shadow
/mob/living/carbon/human/species/shadow/nightmare
/mob/living/carbon/human/species/skeleton
/mob/living/carbon/human/species/synth
/mob/living/carbon/human/species/synth/military
/mob/living/carbon/human/species/vampire
/mob/living/carbon/human/species/zombie
/mob/living/carbon/human/species/zombie/infectious
/mob/living/carbon/human/species/zombie/krokodil_addict
/mob/living/carbon/human/species/mammal
/mob/living/carbon/human/species/insect
/mob/living/carbon/human/species/xeno
/mob/living/carbon/human/species/ipc
/mob/living/carbon/human/species/roundstartslime
/mob/living/carbon/human/species/arachnid
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_block.dm. ----------------------
/mob/living/carbon/human/get_blocking_items()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_context.dm. ----------------------
/mob/living/carbon/human/add_context(atom/source, list/context, obj/item/held_item, mob/living/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_defense.dm. ----------------------
/mob/living/carbon/human/getarmor(def_zone, type)
/mob/living/carbon/human/proc/checkarmor(obj/item/bodypart/def_zone, d_type)
/mob/living/carbon/human/proc/clothingonpart(obj/item/bodypart/def_zone)
/mob/living/carbon/human/on_hit(obj/item/projectile/P)
/mob/living/carbon/human/bullet_act(obj/item/projectile/P, def_zone, piercing_hit = FALSE)
/mob/living/carbon/human/proc/check_martial_melee_block()
/mob/living/carbon/human/hitby(atom/movable/AM, skipcatch = FALSE, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)
/mob/living/carbon/human/grabbedby(mob/living/carbon/user, supress_message = 0)
/mob/living/carbon/human/grippedby(mob/living/user, instant = FALSE)
/mob/living/carbon/human/attacked_by(obj/item/I, mob/living/user, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/carbon/human/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/carbon/human/on_attack_hand(mob/user, act_intent = user.a_intent, unarmed_attack_flags)
/mob/living/carbon/human/attack_paw(mob/living/carbon/monkey/M)
/mob/living/carbon/human/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/carbon/human/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/carbon/human/attack_animal(mob/living/simple_animal/M)
/mob/living/carbon/human/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/carbon/human/ex_act(severity, target, origin)
/mob/living/carbon/human/blob_act(obj/structure/blob/B)
/mob/living/carbon/human/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/carbon/human/emp_act(severity)
/mob/living/carbon/human/acid_act(acidpwr, acid_volume, bodyzone_hit)
/mob/living/carbon/human/singularity_act()
/mob/living/carbon/human/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/human/check_self_for_injuries()
/mob/living/carbon/human/damage_clothes(damage_amount, damage_type = BRUTE, damage_flag = 0, def_zone)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_defines.dm. ----------------------
/mob/living/carbon/human
/mob/living/on_active_parry(mob/living/owner, atom/object, damage, attack_text, attack_type, armour_penetration, mob/attacker, def_zone, list/block_return, parry_efficiency, parry_time)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_helpers.dm. ----------------------
/mob/living/carbon/human/restrained(ignore_grab)
/mob/living/carbon/human/canBeHandcuffed()
/mob/living/carbon/human/proc/get_assignment(if_no_id = "No id", if_no_job = "No job", hand_first = TRUE)
/mob/living/carbon/human/proc/get_authentification_name(if_no_id = "Unknown")
/mob/living/carbon/human/get_visible_name()
/mob/living/carbon/human/proc/get_face_name(if_no_face="Unknown")
/mob/living/carbon/human/proc/get_id_name(if_no_id = "Unknown")
/mob/living/carbon/human/get_idcard(hand_first = TRUE)
/mob/living/carbon/human/IsAdvancedToolUser()
/mob/living/carbon/human/reagent_check(datum/reagent/R)
/mob/living/carbon/human/can_track(mob/living/user)
/mob/living/carbon/human/can_use_guns(obj/item/G)
/mob/living/proc/get_bank_account()
/mob/living/carbon/human/can_see_reagents()
/mob/living/carbon/human/proc/format_scars()
/mob/living/carbon/human/proc/load_scar(scar_line)
/mob/living/carbon/human/get_biological_state()
/mob/living/carbon/human/proc/copy_clothing_prefs(mob/living/carbon/human/destination)
/mob/living/carbon/human/adjust_integration_blood(value, force)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_mobility.dm. ----------------------
/mob/living/carbon/human/resist_a_rest(automatic = FALSE, ignoretimer = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_movement.dm. ----------------------
/mob/living/carbon/human/get_movespeed_modifiers()
/mob/living/carbon/human/slip(knockdown_amount, obj/O, lube)
/mob/living/carbon/human/experience_pressure_difference(pressure_difference, direction, pressure_resistance_prob_delta = 0, throw_target)
/mob/living/carbon/human/mob_has_gravity()
/mob/living/carbon/human/mob_negates_gravity()
/mob/living/carbon/human/Move(NewLoc, direct)
/mob/living/carbon/human/Process_Spacemove(movement_dir = 0) //Temporary laziness thing. Will change to handles by species reee.
/mob/living/carbon/human/proc/dirt_buildup(strength = 1)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\human_stripping.dm. ----------------------
/mob/living/carbon/human/proc/should_strip(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\inventory.dm. ----------------------
/mob/living/carbon/human/can_equip(obj/item/I, slot, disable_warning = FALSE, bypass_equip_delay_self = FALSE, clothing_check = FALSE, list/return_warning)
/mob/living/carbon/human/get_equipped_items(include_pockets = FALSE)
/mob/living/carbon/human/get_item_by_slot(slot_id)
/mob/living/carbon/human/proc/get_all_slots()
/mob/living/carbon/human/proc/get_body_slots()
/mob/living/carbon/human/proc/get_head_slots()
/mob/living/carbon/human/proc/get_storage_slots()
/mob/living/carbon/human/equip_to_slot(obj/item/I, slot)
/mob/living/carbon/human/equipped_speed_mods()
/mob/living/carbon/human/doUnEquip(obj/item/I, force, newloc, no_move, invdrop = TRUE, silent = FALSE)
/mob/living/carbon/human/wear_mask_update(obj/item/clothing/C, toggle_off = 1)
/mob/living/carbon/human/head_update(obj/item/I, forced)
/mob/living/carbon/human/proc/equipOutfit(outfit, visualsOnly = FALSE, client/preference_source)
/mob/living/carbon/human/proc/delete_equipment()
/mob/living/carbon/human/proc/smart_equipbag() // take most recent item out of bag or place held item in bag
/mob/living/carbon/human/proc/smart_equipbelt() // put held thing in belt or take most recent item out of belt
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\life.dm. ----------------------
/mob/living/carbon/human/BiologicalLife(delta_time, times_fired)
/mob/living/carbon/human/PhysicalLife(seconds, times_fired)
/mob/living/carbon/human/calculate_affecting_pressure(pressure)
/mob/living/carbon/human/handle_traits()
/mob/living/carbon/human/handle_mutations_and_radiation()
/mob/living/carbon/human/breathe()
/mob/living/carbon/human/check_breath(datum/gas_mixture/breath)
/mob/living/carbon/human/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/human/handle_fire()
/mob/living/carbon/human/proc/easy_thermal_protection()
/mob/living/carbon/human/IgniteMob()
/mob/living/carbon/human/ExtinguishMob()
/mob/living/carbon/human/proc/get_heat_protection_flags(temperature) //Temperature is the temperature you're being exposed to.
/mob/living/carbon/human/proc/get_cold_protection_flags(temperature)
/mob/living/carbon/human/proc/get_thermal_protection(temperature, cold = FALSE)
/mob/living/carbon/human/handle_random_events()
/mob/living/carbon/human/has_smoke_protection()
/mob/living/carbon/human/proc/handle_active_genes()
/mob/living/carbon/human/proc/handle_heart()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\login.dm. ----------------------
/mob/living/carbon/human/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\say.dm. ----------------------
/mob/living/carbon/human/say_mod(input, message_mode)
/mob/living/carbon/human/GetVoice()
/mob/living/carbon/human/IsVocal()
/mob/living/carbon/human/proc/SetSpecialVoice(new_voice)
/mob/living/carbon/human/proc/UnsetSpecialVoice()
/mob/living/carbon/human/proc/GetSpecialVoice()
/mob/living/carbon/human/binarycheck()
/mob/living/carbon/human/radio(message, message_mode, list/spans, language)
/mob/living/carbon/human/get_alt_name()
/mob/living/carbon/human/proc/forcesay(list/append) //this proc is at the bottom of the file because quote fuckery makes notepad++ cri
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\status_procs.dm. ----------------------
/mob/living/carbon/human/Stun(amount, updating = 1, ignore_canstun = 0)
/mob/living/carbon/human/DefaultCombatKnockdown(amount, updating = TRUE, ignore_canknockdown = FALSE, override_hardstun, override_stamdmg, knocktofloor)
/mob/living/carbon/human/Unconscious(amount, updating = 1, ignore_canunconscious = 0)
/mob/living/carbon/human/Sleeping(amount, updating = 1, ignore_sleepimmune = 0)
/mob/living/carbon/human/cure_husk(list/sources)
/mob/living/carbon/human/become_husk(source)
/mob/living/carbon/human/set_drugginess(amount)
/mob/living/carbon/human/adjust_drugginess(amount)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\typing_indicator.dm. ----------------------
/mob/living/carbon/human/get_typing_indicator_icon_state()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\update_icons.dm. ----------------------
/mob/living/carbon/human/ComponentInitialize()
/mob/living/carbon/human/update_hair()
/mob/living/carbon/human/proc/update_mutant_bodyparts(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_body(update_genitals = FALSE, block_recursive_calls = FALSE)
/mob/living/carbon/human/update_fire()
/mob/living/carbon/human/regenerate_icons(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_antag_overlays()
/mob/living/carbon/human/update_inv_w_uniform(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_w_underwear(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_w_socks(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_w_shirt(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_wear_id()
/mob/living/carbon/human/update_inv_gloves()
/mob/living/carbon/human/update_inv_wrists()
/mob/living/carbon/human/update_inv_glasses()
/mob/living/carbon/human/update_inv_ears()
/mob/living/carbon/human/update_inv_ears_extra()
/mob/living/carbon/human/update_inv_shoes()
/mob/living/carbon/human/update_inv_s_store()
/mob/living/carbon/human/update_inv_head(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_belt()
/mob/living/carbon/human/update_inv_wear_suit(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_pockets()
/mob/living/carbon/human/update_inv_wear_mask(block_recursive_calls = FALSE)
/mob/living/carbon/human/update_inv_back()
/mob/living/carbon/human/proc/get_overlays_copy(list/unwantedLayers)
/mob/living/carbon/human/update_hud_neck(obj/item/I)
/mob/living/carbon/human/update_hud_back(obj/item/I)
/mob/proc/get_item_offsets_for_index(i)
/mob/living/carbon/human/generate_icon_render_key()
/mob/living/carbon/human/load_limb_from_cache()
/mob/living/carbon/human/proc/update_observer_view(obj/item/I, inventory)
/mob/living/carbon/human/proc/update_body_parts_head_only()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\species_types\dwarves.dm. ----------------------
/mob/living/carbon/human/species/dwarf //species admin spawn path
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\human\species_types\vampire.dm. ----------------------
/mob/living/carbon/get_status_tab_items()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\combat.dm. ----------------------
/mob/living/carbon/monkey
/mob/living/carbon/monkey/proc/IsStandingStill()
/mob/living/carbon/monkey/proc/walk2derpless(target)
/mob/living/carbon/monkey/proc/IsDeadOrIncap(checkDead = TRUE)
/mob/living/carbon/monkey/proc/battle_screech()
/mob/living/carbon/monkey/proc/equip_item(var/obj/item/I)
/mob/living/carbon/monkey/proc/pickup_and_wear(obj/item/I)
/mob/living/carbon/monkey/resist_restraints()
/mob/living/carbon/monkey/proc/should_target(var/mob/living/L)
/mob/living/carbon/monkey/proc/handle_combat()
/mob/living/carbon/monkey/proc/pickpocket(var/mob/M)
/mob/living/carbon/monkey/proc/stuff_mob_in()
/mob/living/carbon/monkey/proc/back_to_idle()
/mob/living/carbon/monkey/proc/monkey_attack(mob/living/L)
/mob/living/carbon/monkey/proc/retaliate(mob/living/L)
/mob/living/carbon/monkey/on_attack_hand(mob/living/L)
/mob/living/carbon/monkey/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/carbon/monkey/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/carbon/monkey/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/carbon/monkey/attack_paw(mob/living/L)
/mob/living/carbon/monkey/attackby(obj/item/W, mob/user, params)
/mob/living/carbon/monkey/bullet_act(obj/item/projectile/Proj)
/mob/living/carbon/monkey/hitby(atom/movable/AM, skipcatch = FALSE, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)
/mob/living/carbon/monkey/Crossed(atom/movable/AM)
/mob/living/carbon/monkey/proc/monkeyDrop(var/obj/item/A)
/mob/living/carbon/monkey/grabbedby(mob/living/carbon/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\death.dm. ----------------------
/mob/living/carbon/monkey/gib_animation()
/mob/living/carbon/monkey/dust_animation()
/mob/living/carbon/monkey/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\inventory.dm. ----------------------
/mob/living/carbon/monkey/can_equip(obj/item/I, slot, disable_warning = FALSE, bypass_equip_delay_self = FALSE, clothing_check = FALSE, list/return_warning)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\life.dm. ----------------------
/mob/living/carbon/monkey
/mob/living/carbon/monkey/BiologicalLife(delta_time, times_fired)
/mob/living/carbon/monkey/handle_mutations_and_radiation()
/mob/living/carbon/monkey/handle_breath_temperature(datum/gas_mixture/breath)
/mob/living/carbon/monkey/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/monkey/handle_random_events()
/mob/living/carbon/monkey/has_smoke_protection()
/mob/living/carbon/monkey/handle_fire()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\monkey.dm. ----------------------
/mob/living/carbon/monkey
/mob/living/carbon/monkey/Initialize(mapload, cubespawned=FALSE, mob/spawner)
/mob/living/carbon/monkey/ComponentInitialize()
/mob/living/carbon/monkey/Destroy()
/mob/living/carbon/monkey/create_internal_organs()
/mob/living/carbon/monkey/on_reagent_change()
/mob/living/carbon/monkey/updatehealth()
/mob/living/carbon/monkey/adjust_bodytemperature(amount)
/mob/living/carbon/monkey/get_status_tab_items()
/mob/living/carbon/monkey/verb/removeinternal()
/mob/living/carbon/monkey/IsAdvancedToolUser()//Unless its monkey mode monkeys cant use advanced tools
/mob/living/carbon/monkey/reagent_check(datum/reagent/R) //can metabolize all reagents
/mob/living/carbon/monkey/canBeHandcuffed()
/mob/living/carbon/monkey/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null)
/mob/living/carbon/monkey/IsVocal()
/mob/living/carbon/monkey/can_use_guns(obj/item/G)
/mob/living/carbon/monkey/angry
/mob/living/carbon/monkey/angry/Initialize(mapload)
/mob/living/carbon/monkey/angry/proc/give_ape_escape_helmet()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\monkey_defense.dm. ----------------------
/mob/living/carbon/monkey/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/monkey/attack_paw(mob/living/M)
/mob/living/carbon/monkey/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/carbon/monkey/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/carbon/monkey/on_attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/monkey/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/carbon/monkey/attack_animal(mob/living/simple_animal/M)
/mob/living/carbon/monkey/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/carbon/monkey/acid_act(acidpwr, acid_volume, bodyzone_hit)
/mob/living/carbon/monkey/ex_act(severity, target, origin)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\punpun.dm. ----------------------
/mob/living/carbon/monkey/punpun //except for a few special persistence features, pun pun is just a normal monkey
/mob/living/carbon/monkey/punpun/Initialize(mapload)
/mob/living/carbon/monkey/punpun/BiologicalLife(delta_time, times_fired)
/mob/living/carbon/monkey/punpun/death(gibbed)
/mob/living/carbon/monkey/punpun/proc/Read_Memory()
/mob/living/carbon/monkey/punpun/proc/Write_Memory(dead, gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\carbon\monkey\update_icons.dm. ----------------------
/mob/living/carbon/monkey/regenerate_icons()
/mob/living/carbon/monkey/update_hair()
/mob/living/carbon/monkey/update_fire()
/mob/living/carbon/monkey/update_inv_legcuffed()
/mob/living/carbon/monkey/update_hud_head(obj/item/I)
/mob/living/carbon/monkey/update_hud_wear_mask(obj/item/I)
/mob/living/carbon/monkey/update_hud_neck(obj/item/I)
/mob/living/carbon/monkey/update_hud_back(obj/item/I)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\custom_holoform.dm. ----------------------
/mob/living/silicon/verb/clear_custom_holoform()
/mob/living/silicon/verb/set_custom_holoform()
/mob/living/silicon/proc/attempt_set_custom_holoform()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\damage_procs.dm. ----------------------
/mob/living/silicon/apply_damage(damage = 0,damagetype = BRUTE, def_zone = null, blocked = FALSE, forced = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE)
/mob/living/silicon/apply_effect(effect = 0,effecttype = EFFECT_STUN, blocked = FALSE)
/mob/living/silicon/adjustToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_DEFAULT) //immune to tox damage
/mob/living/silicon/setToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_OMNI)
/mob/living/silicon/adjustCloneLoss(amount, updating_health = TRUE, forced = FALSE) //immune to clone damage
/mob/living/silicon/setCloneLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/silicon/adjustStaminaLoss(amount, updating_health = 1, forced = FALSE) //immune to stamina damage.
/mob/living/silicon/setStaminaLoss(amount, updating_health = 1)
/mob/living/silicon/adjustOrganLoss(slot, amount, maximum = 500)
/mob/living/silicon/setOrganLoss(slot, amount)
/mob/living/silicon/adjustOxyLoss(amount, updating_health = TRUE, forced = FALSE) //immune to oxygen damage
/mob/living/silicon/setOxyLoss(amount, updating_health = TRUE, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\death.dm. ----------------------
/mob/living/silicon/spawn_gibs(with_bodyparts, atom/loc_override)
/mob/living/silicon/spawn_dust()
/mob/living/silicon/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\examine.dm. ----------------------
/mob/living/silicon/examine(mob/user) //Displays a silicon's laws to ghosts
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\laws.dm. ----------------------
/mob/living/silicon/proc/show_laws() //Redefined in ai/laws.dm and robot/laws.dm
/mob/living/silicon/proc/laws_sanity_check()
/mob/living/silicon/proc/post_lawchange(announce = TRUE)
/mob/living/silicon/proc/set_law_sixsixsix(law, announce = TRUE)
/mob/living/silicon/proc/set_zeroth_law(law, law_borg, announce = TRUE)
/mob/living/silicon/proc/add_inherent_law(law, announce = TRUE)
/mob/living/silicon/proc/clear_inherent_laws(announce = TRUE)
/mob/living/silicon/proc/add_supplied_law(number, law, announce = TRUE)
/mob/living/silicon/proc/clear_supplied_laws(announce = TRUE)
/mob/living/silicon/proc/add_ion_law(law, announce = TRUE)
/mob/living/silicon/proc/add_hacked_law(law, announce = TRUE)
/mob/living/silicon/proc/replace_random_law(law, groups, announce = TRUE)
/mob/living/silicon/proc/shuffle_laws(list/groups, announce = TRUE)
/mob/living/silicon/proc/remove_law(number, announce = TRUE)
/mob/living/silicon/proc/clear_ion_laws(announce = TRUE)
/mob/living/silicon/proc/clear_hacked_laws(announce = TRUE)
/mob/living/silicon/proc/make_laws()
/mob/living/silicon/proc/clear_zeroth_law(force, announce = TRUE)
/mob/living/silicon/proc/clear_law_sixsixsix(force, announce = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\login.dm. ----------------------
/mob/living/silicon/Login()
/mob/living/silicon/auto_deadmin_on_login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\say.dm. ----------------------
/mob/living/proc/robot_talk(message)
/mob/living/silicon/binarycheck()
/mob/living/silicon/lingcheck()
/mob/living/silicon/radio(message, message_mode, list/spans, language)
/mob/living/silicon/get_message_mode(message)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\silicon.dm. ----------------------
/mob/living/silicon
/mob/living/silicon/Initialize(mapload)
/mob/living/silicon/ComponentInitialize()
/mob/living/silicon/med_hud_set_health()
/mob/living/silicon/med_hud_set_status()
/mob/living/silicon/Destroy()
/mob/living/silicon/contents_explosion(severity, target, origin)
/mob/living/silicon/proc/cancelAlarm()
/mob/living/silicon/proc/freeCamera()
/mob/living/silicon/proc/triggerAlarm()
/mob/living/silicon/proc/queueAlarm(message, type, incoming = 1)
/mob/living/silicon/can_inject(mob/user, error_msg, target_zone, penetrate_thick = FALSE, bypass_immunity = FALSE)
/mob/living/silicon/IsAdvancedToolUser()
/mob/living/silicon/Topic(href, href_list)
/mob/living/silicon/proc/statelaws(force = 0)
/mob/living/silicon/proc/checklaws() //Gives you a link-driven interface for deciding what laws the statelaws() proc will share with the crew. --NeoFite
/mob/living/silicon/proc/set_autosay() //For allowing the AI and borgs to set the radio behavior of auto announcements (state laws, arrivals).
/mob/living/silicon/put_in_hand_check() // This check is for borgs being able to receive items, not put them in others' hands.
/mob/living/silicon/stripPanelEquip(obj/item/what, mob/who, slot)
/mob/living/silicon/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null) //Secbots won't hunt silicon units
/mob/living/silicon/proc/remove_sensors()
/mob/living/silicon/proc/add_sensors()
/mob/living/silicon/proc/toggle_sensors()
/mob/living/silicon/proc/GetPhoto(mob/user)
/mob/living/silicon/proc/ai_roster()
/mob/living/silicon/is_literate()
/mob/living/silicon/get_inactive_held_item()
/mob/living/silicon/handle_high_gravity(gravity)
/mob/living/silicon/rust_heretic_act()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\silicon_defense.dm. ----------------------
/mob/living/silicon/KnockToFloor(disarm_items = FALSE, silent = TRUE, updating = TRUE)
/mob/living/silicon/grippedby(mob/living/user, instant = FALSE)
/mob/living/silicon/get_ear_protection()//no ears
/mob/living/silicon/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/silicon/attack_animal(mob/living/simple_animal/M)
/mob/living/silicon/attack_paw(mob/living/user)
/mob/living/silicon/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/silicon/on_attack_hand(mob/living/carbon/human/M)
/mob/living/silicon/proc/disarm_shove(mob/living/carbon/human/H)
/mob/living/silicon/attack_drone(mob/living/simple_animal/drone/M)
/mob/living/silicon/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/silicon/emp_act(severity)
/mob/living/silicon/bullet_act(obj/item/projectile/P, def_zone, piercing_hit = FALSE)
/mob/living/silicon/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0, visual = 0, type = /atom/movable/screen/fullscreen/tiled/flash/static)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\silicon_movement.dm. ----------------------
/mob/living/silicon/Moved(oldLoc, dir)
/mob/living/silicon/forceMove(atom/destination)
/mob/living/silicon/proc/do_camera_update(oldLoc)
/mob/living/silicon/proc/update_camera_location(oldLoc)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\ai.dm. ----------------------
/mob/living/silicon/ai
/mob/living/silicon/ai/Initialize(mapload, datum/ai_laws/L, mob/target_ai)
/mob/living/silicon/ai/Destroy()
/mob/living/silicon/ai/IgniteMob()
/mob/living/silicon/ai/proc/set_core_display_icon(input, client/C)
/mob/living/silicon/ai/verb/pick_icon()
/mob/living/silicon/ai/get_status_tab_items()
/mob/living/silicon/ai/proc/ai_alerts()
/mob/living/silicon/ai/proc/ai_call_shuttle()
/mob/living/silicon/ai/can_interact_with(atom/A)
/mob/living/silicon/ai/cancel_camera()
/mob/living/silicon/ai/verb/toggle_anchor()
/mob/living/silicon/ai/update_mobility()
/mob/living/silicon/ai/proc/ai_cancel_call()
/mob/living/silicon/ai/restrained(ignore_grab)
/mob/living/silicon/ai/Topic(href, href_list)
/mob/living/silicon/ai/proc/switchCamera(obj/machinery/camera/C)
/mob/living/silicon/ai/proc/botcall()
/mob/living/silicon/ai/proc/set_waypoint(atom/A)
/mob/living/silicon/ai/proc/call_bot(turf/waypoint)
/mob/living/silicon/ai/triggerAlarm(class, area/home, cameras, obj/source)
/mob/living/silicon/ai/freeCamera(area/home, obj/machinery/camera/cam)
/mob/living/silicon/ai/cancelAlarm(class, area/A, obj/origin)
/mob/living/silicon/ai/proc/ai_network_change()
/mob/living/silicon/ai/proc/choose_modules()
/mob/living/silicon/ai/proc/ai_statuschange()
/mob/living/silicon/ai/proc/ai_hologram_change()
/mob/living/silicon/ai/proc/corereturn()
/mob/living/silicon/ai/proc/toggle_camera_light()
/mob/living/silicon/ai/proc/light_cameras()
/mob/living/silicon/ai/proc/control_integrated_radio()
/mob/living/silicon/ai/proc/set_syndie_radio()
/mob/living/silicon/ai/proc/set_automatic_say_channel()
/mob/living/silicon/ai/transfer_ai(interaction, mob/user, mob/living/silicon/ai/AI, obj/item/aicard/card)
/mob/living/silicon/ai/can_buckle()
/mob/living/silicon/ai/incapacitated(ignore_restraints, ignore_grab)
/mob/living/silicon/ai/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/living/silicon/ai/proc/can_see(atom/A)
/mob/living/silicon/ai/proc/relay_speech(message, atom/movable/speaker, datum/language/message_language, raw_message, radio_freq, list/spans, message_mode)
/mob/living/silicon/ai/fully_replace_character_name(oldname,newname)
/mob/living/silicon/ai/replace_identification_name(oldname,newname)
/mob/living/silicon/ai/proc/add_malf_picker()
/mob/living/silicon/ai/reset_perspective(atom/A)
/mob/living/silicon/ai/revive(full_heal = 0, admin_revive = 0)
/mob/living/silicon/ai/proc/malfhacked(obj/machinery/power/apc/apc)
/mob/living/silicon/ai/verb/deploy_to_shell(var/mob/living/silicon/robot/target)
/mob/living/silicon/ai/proc/disconnect_shell()
/mob/living/silicon/ai/do_resist()
/mob/living/silicon/ai/spawned/Initialize(mapload, datum/ai_laws/L, mob/target_ai)
/mob/living/silicon/ai/proc/camera_visibility(mob/camera/aiEye/moved_eye)
/mob/living/silicon/ai/forceMove(atom/destination)
/mob/living/silicon/ai/verb/ai_cryo()
/mob/living/silicon/ai/emote(act, m_type=1, message = null, intentional = FALSE)
/mob/living/silicon/ai/zMove(dir, feedback = FALSE)
/mob/living/silicon/ai/proc/stop_controlling_display()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\ai_defense.dm. ----------------------
/mob/living/silicon/ai/attacked_by(obj/item/I, mob/living/user, def_zone, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/silicon/ai/attack_slime(mob/living/simple_animal/slime/user)
/mob/living/silicon/ai/blob_act(obj/structure/blob/B)
/mob/living/silicon/ai/emp_act(severity)
/mob/living/silicon/ai/ex_act(severity, target, origin)
/mob/living/silicon/ai/bullet_act(obj/item/projectile/Proj)
/mob/living/silicon/ai/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\death.dm. ----------------------
/mob/living/silicon/ai/death(gibbed)
/mob/living/silicon/ai/proc/ShutOffDoomsdayDevice()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\examine.dm. ----------------------
/mob/living/silicon/ai/examine(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\laws.dm. ----------------------
/mob/living/silicon/ai/proc/show_laws_verb()
/mob/living/silicon/ai/show_laws(everyone = 0)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\life.dm. ----------------------
/mob/living/silicon/ai/BiologicalLife(delta_time, times_fired)
/mob/living/silicon/ai/proc/lacks_power()
/mob/living/silicon/ai/updatehealth()
/mob/living/silicon/ai/update_stat()
/mob/living/silicon/ai/update_sight()
/mob/living/silicon/ai/proc/start_RestorePowerRoutine()
/mob/living/silicon/ai/proc/ai_restore_power()
/mob/living/silicon/ai/proc/ai_lose_power()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\login.dm. ----------------------
/mob/living/silicon/ai/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\logout.dm. ----------------------
/mob/living/silicon/ai/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\multicam.dm. ----------------------
/mob/camera/aiEye/pic_in_pic
/mob/camera/aiEye/pic_in_pic/GetViewerClient()
/mob/camera/aiEye/pic_in_pic/setLoc(turf/T)
/mob/camera/aiEye/pic_in_pic/get_visible_turfs()
/mob/camera/aiEye/pic_in_pic/proc/update_camera_telegraphing()
/mob/camera/aiEye/pic_in_pic/proc/disable_camera_telegraphing()
/mob/camera/aiEye/pic_in_pic/Destroy()
/mob/living/silicon/ai/proc/drop_new_multicam(silent = FALSE)
/mob/living/silicon/ai/proc/toggle_multicam()
/mob/living/silicon/ai/proc/start_multicam()
/mob/living/silicon/ai/proc/refresh_multicam()
/mob/living/silicon/ai/proc/end_multicam()
/mob/living/silicon/ai/proc/select_main_multicam_window(atom/movable/screen/movable/pic_in_pic/ai/P)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\say.dm. ----------------------
/mob/living/silicon/ai/say(message, bubble_type,var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/silicon/ai/compose_track_href(atom/movable/speaker, namepart)
/mob/living/silicon/ai/compose_job(atom/movable/speaker, message_langs, raw_message, radio_freq)
/mob/living/silicon/ai/IsVocal()
/mob/living/silicon/ai/radio(message, message_mode, list/spans, language)
/mob/living/silicon/ai/get_message_mode(message)
/mob/living/silicon/ai/proc/holopad_talk(message, language)
/mob/living/silicon/ai/proc/statusdisplay_talk(message, language)
/mob/living/silicon/ai/verb/announcement_help()
/mob/living/silicon/ai/proc/announcement()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\ai\freelook\eye.dm. ----------------------
/mob/camera/aiEye
/mob/camera/aiEye/Initialize(mapload)
/mob/camera/aiEye/proc/update_ai_detect_hud()
/mob/camera/aiEye/proc/get_visible_turfs()
/mob/camera/aiEye/proc/setLoc(T, force_update = FALSE, dir)
/mob/camera/aiEye/zMove(dir, feedback = FALSE)
/mob/camera/aiEye/canZMove(direction, turf/target) //cameras do not respect these FLOORS you speak so much of
/mob/camera/aiEye/Move()
/mob/camera/aiEye/proc/GetViewerClient()
/mob/camera/aiEye/Destroy()
/mob/living/silicon/ai/proc/view_core()
/mob/living/silicon/ai/proc/create_eye()
/mob/living/silicon/ai/proc/set_eyeobj_visible(state = TRUE)
/mob/living/silicon/ai/verb/toggle_acceleration()
/mob/camera/aiEye/Hear(message, atom/movable/speaker, datum/language/message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
/mob/camera/aiEye/emote(act, m_type=1, message = null, intentional = FALSE, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\death.dm. ----------------------
/mob/living/silicon/pai/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\pai.dm. ----------------------
/mob/living/silicon/pai
/mob/living/silicon/pai/Destroy()
/mob/living/silicon/pai/Initialize(mapload)
/mob/living/silicon/pai/deployed/Initialize(mapload)
/mob/living/silicon/pai/ComponentInitialize()
/mob/living/silicon/pai/BiologicalLife(delta_time, times_fired)
/mob/living/silicon/pai/proc/process_hack()
/mob/living/silicon/pai/make_laws()
/mob/living/silicon/pai/Login()
/mob/living/silicon/pai/get_status_tab_items()
/mob/living/silicon/pai/restrained(ignore_grab)
/mob/living/silicon/pai/can_interact_with(atom/target)
/mob/living/silicon/pai/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/proc/makePAI(delold)
/mob/living/silicon/pai/Process_Spacemove(movement_dir = 0)
/mob/living/silicon/pai/examine(mob/user)
/mob/living/silicon/pai/PhysicalLife()
/mob/living/silicon/pai/BiologicalLife()
/mob/living/silicon/pai/updatehealth()
/mob/living/silicon/pai/process()
/mob/living/silicon/pai/proc/short_radio()
/mob/living/silicon/pai/proc/unshort_radio()
/mob/living/silicon/pai/proc/initialize_dynamic_chassis_icons()
/mob/living/silicon/pai/proc/default_chassis_pixel_offsets_x()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\pai_defense.dm. ----------------------
/mob/living/silicon/pai/blob_act(obj/structure/blob/B)
/mob/living/silicon/pai/emp_act(severity)
/mob/living/silicon/pai/ex_act(severity, target, origin)
/mob/living/silicon/pai/on_attack_hand(mob/living/carbon/human/user)
/mob/living/silicon/pai/bullet_act(obj/item/projectile/P, def_zone)
/mob/living/silicon/pai/stripPanelUnequip(obj/item/what, mob/who, where) //prevents stripping
/mob/living/silicon/pai/stripPanelEquip(obj/item/what, mob/who, where) //prevents stripping
/mob/living/silicon/pai/IgniteMob(var/mob/living/silicon/pai/P)
/mob/living/silicon/pai/proc/take_holo_damage(amount)
/mob/living/silicon/pai/adjustBruteLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/silicon/pai/adjustFireLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/silicon/pai/adjustStaminaLoss(amount, updating_health, forced = FALSE)
/mob/living/silicon/pai/adjustOrganLoss(slot, amount, maximum = 500) //I kept this in, unlike tg
/mob/living/silicon/pai/getBruteLoss()
/mob/living/silicon/pai/getFireLoss()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\pai_shell.dm. ----------------------
/mob/living/silicon/pai/proc/fold_out(force = FALSE)
/mob/living/silicon/pai/proc/fold_in(force = FALSE)
/mob/living/silicon/pai/proc/choose_chassis()
/mob/living/silicon/pai/lay_down()
/mob/living/silicon/pai/start_pulling(atom/movable/AM, state, force = move_force, supress_message = FALSE)
/mob/living/silicon/pai/proc/toggle_integrated_light()
/mob/living/silicon/pai/verb/toggle_chassis_sit()
/mob/living/silicon/pai/verb/toggle_chassis_bellyup()
/mob/living/silicon/pai/can_buckle_others(mob/living/target, atom/buckle_to)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\say.dm. ----------------------
/mob/living/silicon/pai/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/silicon/pai/binarycheck()
/mob/living/silicon/pai/radio(message, message_mode, list/spans, language)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\software.dm. ----------------------
/mob/living/silicon/pai/var/list/available_software = list(
/mob/living/silicon/pai/proc/paiInterface()
/mob/living/silicon/pai/Topic(href, href_list)
/mob/living/silicon/pai/proc/softwareMenu()			// Populate the right menu
/mob/living/silicon/pai/proc/downloadSoftware()
/mob/living/silicon/pai/proc/directives()
/mob/living/silicon/pai/proc/CheckDNA(mob/living/carbon/M, mob/living/silicon/pai/P)
/mob/living/silicon/pai/proc/softwareSignal()
/mob/living/silicon/pai/proc/softwareManifest()
/mob/living/silicon/pai/proc/softwareMedicalRecord()
/mob/living/silicon/pai/proc/softwareSecurityRecord()
/mob/living/silicon/pai/proc/softwareEncryptionKeys()
/mob/living/silicon/pai/proc/softwareTranslator()
/mob/living/silicon/pai/proc/facialRecognition()
/mob/living/silicon/pai/proc/medicalAnalysis()
/mob/living/silicon/pai/proc/softwareAtmo()
/mob/living/silicon/pai/proc/softwareCamera()
/mob/living/silicon/pai/proc/softwareDoor()
/mob/living/silicon/pai/proc/hackloop()
/mob/living/silicon/pai/proc/pdamessage()
/mob/living/silicon/pai/proc/softwareLoudness()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\pai\update_icon.dm. ----------------------
/mob/living/silicon/pai/update_icon()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\death.dm. ----------------------
/mob/living/silicon/robot/gib_animation()
/mob/living/silicon/robot/dust(just_ash, drop_items, force)
/mob/living/silicon/robot/spawn_dust()
/mob/living/silicon/robot/dust_animation()
/mob/living/silicon/robot/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\emote.dm. ----------------------
/mob/living/silicon/robot/verb/powerwarn()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\examine.dm. ----------------------
/mob/living/silicon/robot/examine(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\inventory.dm. ----------------------
/mob/living/silicon/robot/get_active_held_item(get_gripper = FALSE)
/mob/living/silicon/robot/proc/activate_module(obj/item/item_module)
/mob/living/silicon/robot/proc/equip_module_to_slot(obj/item/item_module, module_num)
/mob/living/silicon/robot/proc/unequip_module_from_slot(obj/item/item_module, module_num)
/mob/living/silicon/robot/proc/break_cyborg_slot(module_num)
/mob/living/silicon/robot/proc/break_all_cyborg_slots()
/mob/living/silicon/robot/proc/repair_cyborg_slot(module_num)
/mob/living/silicon/robot/proc/repair_all_cyborg_slots()
/mob/living/silicon/robot/proc/observer_screen_update(obj/item/item_module, add = TRUE)
/mob/living/silicon/robot/proc/uneq_active()
/mob/living/silicon/robot/proc/uneq_all()
/mob/living/silicon/robot/proc/activated(obj/item/item_module)
/mob/living/silicon/robot/proc/is_invalid_module_number(module_num, check_all_slots = FALSE)
/mob/living/silicon/robot/proc/get_selected_module()
/mob/living/silicon/robot/proc/select_module(module_num)
/mob/living/silicon/robot/proc/deselect_module(module_num)
/mob/living/silicon/robot/proc/toggle_module(module_num)
/mob/living/silicon/robot/proc/cycle_modules()
/mob/living/silicon/robot/swap_hand()
/mob/living/silicon/robot/can_hold_items(obj/item/I)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\laws.dm. ----------------------
/mob/living/silicon/robot/verb/cmd_show_laws()
/mob/living/silicon/robot/show_laws(everyone = 0)
/mob/living/silicon/robot/proc/lawsync()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\life.dm. ----------------------
/mob/living/silicon/robot/BiologicalLife(delta_time, times_fired)
/mob/living/silicon/robot/proc/handle_robot_cell()
/mob/living/silicon/robot/proc/use_power()
/mob/living/silicon/robot/proc/handle_robot_hud_updates()
/mob/living/silicon/robot/update_health_hud()
/mob/living/silicon/robot/proc/update_cell_hud_icon()
/mob/living/silicon/robot/handle_fire()
/mob/living/silicon/robot/update_fire()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\login.dm. ----------------------
/mob/living/silicon/robot/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\robot.dm. ----------------------
/mob/living/silicon/robot
/mob/living/silicon/robot/get_cell()
/mob/living/silicon/robot/Initialize(mapload)
/mob/living/silicon/robot/proc/create_modularInterface()
/mob/living/silicon/robot/Destroy()
/mob/living/silicon/robot/proc/pick_module()
/mob/living/silicon/robot/proc/updatename(client/C)
/mob/living/silicon/robot/proc/get_standard_name()
/mob/living/silicon/robot/verb/cmd_robot_alerts()
/mob/living/silicon/robot/proc/robot_alerts()
/mob/living/silicon/robot/proc/ionpulse()
/mob/living/silicon/robot/proc/toggle_ionpulse()
/mob/living/silicon/robot/get_status_tab_items()
/mob/living/silicon/robot/restrained(ignore_grab)
/mob/living/silicon/robot/triggerAlarm(class, area/home, cameras, obj/source)
/mob/living/silicon/robot/freeCamera(area/home, obj/machinery/camera/cam)
/mob/living/silicon/robot/cancelAlarm(class, area/A, obj/origin)
/mob/living/silicon/robot/can_interact_with(atom/A)
/mob/living/silicon/robot/proc/attempt_welder_repair(obj/item/W, mob/user)
/mob/living/silicon/robot/proc/attempt_cable_repair(obj/item/stack/cable_coil/W, mob/user)
/mob/living/silicon/robot/attackby(obj/item/W, mob/user, params)
/mob/living/silicon/robot/crowbar_act(mob/living/user, obj/item/I) //TODO: make fucking everything up there in that attackby() proc use the proper tool_act() procs. But honestly, who has time for that? 'cause I know for sure that you, the person reading this, sure as hell doesn't.
/mob/living/silicon/robot/verb/unlock_own_cover()
/mob/living/silicon/robot/proc/allowed(mob/M)
/mob/living/silicon/robot/proc/check_access(obj/item/card/id/I)
/mob/living/silicon/robot/regenerate_icons()
/mob/living/silicon/robot/proc/self_destruct()
/mob/living/silicon/robot/proc/UnlinkSelf()
/mob/living/silicon/robot/mode()
/mob/living/silicon/robot/proc/SetLockdown(state = TRUE)
/mob/living/silicon/robot/proc/SetEmagged(new_state)
/mob/living/silicon/robot/proc/smash_headlamp()
/mob/living/silicon/robot/verb/outputlaws()
/mob/living/silicon/robot/verb/set_automatic_say_channel() //Borg version of setting the radio for autosay messages.
/mob/living/silicon/robot/proc/toggle_headlamp(turn_off = FALSE, update_color = FALSE)
/mob/living/silicon/robot/proc/deconstruct()
/mob/living/silicon/robot/nocell
/mob/living/silicon/robot/modules
/mob/living/silicon/robot/modules/Initialize(mapload)
/mob/living/silicon/robot/modules/standard
/mob/living/silicon/robot/modules/medical
/mob/living/silicon/robot/modules/engineering
/mob/living/silicon/robot/modules/security
/mob/living/silicon/robot/modules/clown
/mob/living/silicon/robot/modules/peacekeeper
/mob/living/silicon/robot/modules/miner
/mob/living/silicon/robot/modules/syndicate
/mob/living/silicon/robot/modules/syndicate/Initialize(mapload)
/mob/living/silicon/robot/modules/syndicate/create_modularInterface()
/mob/living/silicon/robot/modules/syndicate/proc/show_playstyle()
/mob/living/silicon/robot/modules/syndicate/ResetModule()
/mob/living/silicon/robot/modules/syndicate/medical
/mob/living/silicon/robot/modules/syndicate/saboteur
/mob/living/silicon/robot/modules/syndicate/spider// used for space ninja and their cyborg hacking special objective
/mob/living/silicon/robot/modules/syndicate_medical/spider// ditto
/mob/living/silicon/robot/modules/saboteur/spider// ditto
/mob/living/silicon/robot/proc/notify_ai(notifytype, oldname, newname)
/mob/living/silicon/robot/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/living/silicon/robot/updatehealth()
/mob/living/silicon/robot/update_sight()
/mob/living/silicon/robot/update_stat()
/mob/living/silicon/robot/revive(full_heal = FALSE, admin_revive = FALSE)
/mob/living/silicon/robot/fully_replace_character_name(oldname, newname)
/mob/living/silicon/robot/proc/ResetModule()
/mob/living/silicon/robot/proc/has_module()
/mob/living/silicon/robot/proc/update_module_innate()
/mob/living/silicon/robot/proc/place_on_head(obj/item/new_hat)
/mob/living/silicon/robot/Exited(atom/A)
/mob/living/silicon/robot/proc/add_to_upgrades(obj/item/borg/upgrade/new_upgrade, mob/user)
/mob/living/silicon/robot/proc/remove_from_upgrades(obj/item/borg/upgrade/old_upgrade)
/mob/living/silicon/robot/proc/on_upgrade_deleted(obj/item/borg/upgrade/old_upgrade)
/mob/living/silicon/robot/proc/make_shell(obj/item/borg/upgrade/ai/board)
/mob/living/silicon/robot/proc/revert_shell()
/mob/living/silicon/robot/proc/deploy_init(mob/living/silicon/ai/AI)
/mob/living/silicon/robot/proc/undeploy()
/mob/living/silicon/robot/attack_ai(mob/user)
/mob/living/silicon/robot/shell
/mob/living/silicon/robot/MouseDrop_T(mob/living/M, mob/living/user)
/mob/living/silicon/robot/buckle_mob(mob/living/M, force = FALSE, check_loc = TRUE)
/mob/living/silicon/robot/unbuckle_mob(mob/user, force=FALSE)
/mob/living/silicon/robot/resist()
/mob/living/silicon/robot/proc/TryConnectToAI()
/mob/living/silicon/robot/proc/picturesync()
/mob/living/silicon/robot/proc/charge(datum/source, amount, repairs)
/mob/living/silicon/robot/proc/rest_style()
/mob/living/silicon/robot/verb/viewmanifest()
/mob/living/silicon/robot/proc/set_connected_ai(new_ai)
/mob/living/silicon/robot/proc/logevent(string = "")
/mob/living/silicon/robot/get_tooltip_data()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\robot_defense.dm. ----------------------
/mob/living/silicon/robot/attackby(obj/item/I, mob/living/user)
/mob/living/silicon/robot/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/silicon/robot/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/silicon/robot/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/silicon/robot/on_attack_hand(mob/living/carbon/human/user)
/mob/living/silicon/robot/disarm_shove(mob/living/carbon/human/H)
/mob/living/silicon/robot/proc/vtec_disable(time)
/mob/living/silicon/robot/fire_act()
/mob/living/silicon/robot/emp_act(severity)
/mob/living/silicon/robot/emag_act(mob/user)
/mob/living/silicon/robot/proc/beep_boop_rogue_bot(mob/user)
/mob/living/silicon/robot/blob_act(obj/structure/blob/B)
/mob/living/silicon/robot/ex_act(severity, target, origin)
/mob/living/silicon/robot/bullet_act(obj/item/projectile/P, def_zone)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\robot_defines.dm. ----------------------
/mob/living/silicon/robot
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\robot_mobility.dm. ----------------------
/mob/living/silicon/robot/update_mobility()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\robot_movement.dm. ----------------------
/mob/living/silicon/robot/Process_Spacemove(movement_dir = 0)
/mob/living/silicon/robot/mob_negates_gravity()
/mob/living/silicon/robot/mob_has_gravity()
/mob/living/silicon/robot/experience_pressure_difference(pressure_difference, direction)
/mob/living/silicon/robot/Move(NewLoc, direct)
/mob/living/silicon/robot/movement_delay()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\robot_sprint.dm. ----------------------
/mob/living/silicon/robot/default_toggle_sprint(shutdown = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\say.dm. ----------------------
/mob/living/silicon/robot/IsVocal()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\silicon\robot\update_icons.dm. ----------------------
/mob/living/silicon/robot/update_icons()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\animal_defense.dm. ----------------------
/mob/living/simple_animal/on_attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/simple_animal/attack_paw(mob/living/carbon/monkey/M)
/mob/living/simple_animal/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/simple_animal/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/simple_animal/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/simple_animal/attack_drone(mob/living/simple_animal/drone/M)
/mob/living/simple_animal/proc/attack_threshold_check(damage, damagetype = BRUTE, armorcheck = MELEE)
/mob/living/simple_animal/bullet_act(obj/item/projectile/Proj, def_zone, piercing_hit = FALSE)
/mob/living/simple_animal/ex_act(severity, target, origin)
/mob/living/simple_animal/blob_act(obj/structure/blob/B)
/mob/living/simple_animal/do_attack_animation(atom/A, visual_effect_icon, used_item, no_effect)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\astral.dm. ----------------------
/mob/living/simple_animal/astral
/mob/living/simple_animal/astral/death()
/mob/living/simple_animal/astral/ClickOn(var/atom/A, var/params)
/mob/living/simple_animal/astral/proc/attempt_possess(atom/A)
/mob/living/simple_animal/astral/PhysicalLife(seconds, times_fired)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\constructs.dm. ----------------------
/mob/living/simple_animal/hostile/construct
/mob/living/simple_animal/hostile/construct/Initialize(mapload)
/mob/living/simple_animal/hostile/construct/Destroy()
/mob/living/simple_animal/hostile/construct/death()
/mob/living/simple_animal/hostile/construct/Login()
/mob/living/simple_animal/hostile/construct/examine(mob/user)
/mob/living/simple_animal/hostile/construct/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/hostile/construct/narsie_act()
/mob/living/simple_animal/hostile/construct/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/simple_animal/hostile/construct/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/construct/armored
/mob/living/simple_animal/hostile/construct/armored/hostile //actually hostile, will move around, hit things
/mob/living/simple_animal/hostile/construct/armored/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/construct/wraith
/mob/living/simple_animal/hostile/construct/wraith/AttackingTarget() //refund jaunt cooldown when attacking living targets
/mob/living/simple_animal/hostile/construct/wraith/hostile //actually hostile, will move around, hit things
/mob/living/simple_animal/hostile/construct/builder
/mob/living/simple_animal/hostile/construct/builder/Found(atom/A) //what have we found here?
/mob/living/simple_animal/hostile/construct/builder/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/construct/builder/MoveToTarget(var/list/possible_targets)
/mob/living/simple_animal/hostile/construct/builder/Aggro()
/mob/living/simple_animal/hostile/construct/builder/LoseAggro()
/mob/living/simple_animal/hostile/construct/builder/hostile //actually hostile, will move around, hit things, heal other constructs
/mob/living/simple_animal/hostile/construct/builder/noncult
/mob/living/simple_animal/hostile/construct/harvester
/mob/living/simple_animal/hostile/construct/harvester/Bump(atom/AM)
/mob/living/simple_animal/hostile/construct/harvester/AttackingTarget()
/mob/living/simple_animal/hostile/construct/harvester/Initialize(mapload)
/mob/living/simple_animal/hostile/construct/update_health_hud()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\damage_procs.dm. ----------------------
/mob/living/simple_animal/proc/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/adjustBruteLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/simple_animal/adjustFireLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/simple_animal/adjustOxyLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/adjustToxLoss(amount, updating_health = TRUE, forced = FALSE, toxins_type = TOX_DEFAULT)
/mob/living/simple_animal/adjustCloneLoss(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/adjustStaminaLoss(amount, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\eldritch_demons.dm. ----------------------
/mob/living/simple_animal/hostile/eldritch
/mob/living/simple_animal/hostile/eldritch/Initialize(mapload)
/mob/living/simple_animal/hostile/eldritch/proc/add_spells()
/mob/living/simple_animal/hostile/eldritch/raw_prophet
/mob/living/simple_animal/hostile/eldritch/raw_prophet/Initialize(mapload)
/mob/living/simple_animal/hostile/eldritch/raw_prophet/Login()
/mob/living/simple_animal/hostile/eldritch/raw_prophet/proc/link_mob(mob/living/mob_linked)
/mob/living/simple_animal/hostile/eldritch/raw_prophet/proc/unlink_mob(mob/living/mob_linked)
/mob/living/simple_animal/hostile/eldritch/raw_prophet/death(gibbed)
/mob/living/simple_animal/hostile/eldritch/armsy
/mob/living/simple_animal/hostile/eldritch/armsy/Initialize(mapload,spawn_more = TRUE,len = 6)
/mob/living/simple_animal/hostile/eldritch/armsy/has_gravity(turf/T)
/mob/living/simple_animal/hostile/eldritch/armsy/can_be_pulled()
/mob/living/simple_animal/hostile/eldritch/armsy/proc/contract_next_chain_into_single_tile()
/mob/living/simple_animal/hostile/eldritch/armsy/proc/get_length()
/mob/living/simple_animal/hostile/eldritch/armsy/proc/update_chain_links()
/mob/living/simple_animal/hostile/eldritch/armsy/proc/gib_trail()
/mob/living/simple_animal/hostile/eldritch/armsy/Destroy()
/mob/living/simple_animal/hostile/eldritch/armsy/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/eldritch/armsy/proc/heal()
/mob/living/simple_animal/hostile/eldritch/armsy/Shoot(atom/targeted_atom)
/mob/living/simple_animal/hostile/eldritch/armsy/AttackingTarget()
/mob/living/simple_animal/hostile/eldritch/armsy/prime
/mob/living/simple_animal/hostile/eldritch/armsy/prime/Initialize(mapload,spawn_more = TRUE,len = 9)
/mob/living/simple_animal/hostile/eldritch/armsy/primeproc/heal()
/mob/living/simple_animal/hostile/eldritch/rust_spirit
/mob/living/simple_animal/hostile/eldritch/rust_spirit/setDir(newdir, ismousemovement)
/mob/living/simple_animal/hostile/eldritch/rust_spirit/Moved()
/mob/living/simple_animal/hostile/eldritch/rust_spirit/Life()
/mob/living/simple_animal/hostile/eldritch/ash_spirit
/mob/living/simple_animal/hostile/eldritch/stalker
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\parrot.dm. ----------------------
/mob/living/simple_animal/parrot
/mob/living/simple_animal/parrot/Initialize(mapload)
/mob/living/simple_animal/parrot/ComponentInitialize()
/mob/living/simple_animal/parrot/examine(mob/user)
/mob/living/simple_animal/parrot/death(gibbed)
/mob/living/simple_animal/parrot/get_status_tab_items()
/mob/living/simple_animal/parrot/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
/mob/living/simple_animal/parrot/radio(message, message_mode, list/spans, language) //literally copied from human/radio(), but there's no other way to do this. at least it's better than it used to be.
/mob/living/simple_animal/parrot/on_attack_hand(mob/living/carbon/M)
/mob/living/simple_animal/parrot/attack_paw(mob/living/carbon/monkey/M)
/mob/living/simple_animal/parrot/attack_alien(mob/living/carbon/alien/M)
/mob/living/simple_animal/parrot/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/parrot/attackby(obj/item/O, mob/living/user, params)
/mob/living/simple_animal/parrot/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/parrot/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/parrot/handle_automated_speech()
/mob/living/simple_animal/parrot/handle_automated_movement()
/mob/living/simple_animal/parrot/proc/isStuck()
/mob/living/simple_animal/parrot/proc/attempt_item_theft()
/mob/living/simple_animal/parrot/proc/search_for_item()
/mob/living/simple_animal/parrot/proc/search_for_perch()
/mob/living/simple_animal/parrot/proc/search_for_perch_and_item()
/mob/living/simple_animal/parrot/proc/steal_from_ground()
/mob/living/simple_animal/parrot/proc/steal_from_mob()
/mob/living/simple_animal/parrot/verb/drop_held_item_player()
/mob/living/simple_animal/parrot/proc/drop_held_item(drop_gently = 1)
/mob/living/simple_animal/parrot/proc/perch_player()
/mob/living/simple_animal/parrot/Moved(oldLoc, dir)
/mob/living/simple_animal/parrot/proc/perch_mob_player()
/mob/living/simple_animal/parrot/proc/perch_on_human(mob/living/carbon/human/H)
/mob/living/simple_animal/parrot/proc/toggle_mode()
/mob/living/simple_animal/parrot/Polly
/mob/living/simple_animal/parrot/Polly/Initialize(mapload)
/mob/living/simple_animal/parrot/Polly/say(message, bubble_type,var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/parrot/Polly/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/parrot/Polly/death(gibbed)
/mob/living/simple_animal/parrot/Polly/proc/Read_Memory()
/mob/living/simple_animal/parrot/Polly/proc/Write_Memory(dead)
/mob/living/simple_animal/parrot/Polly/ratvar_act()
/mob/living/simple_animal/parrot/Polly/ghost
/mob/living/simple_animal/parrot/Polly/ghost/Initialize(mapload)
/mob/living/simple_animal/parrot/Polly/ghost/handle_automated_speech()
/mob/living/simple_animal/parrot/Polly/ghost/handle_automated_movement()
/mob/living/simple_animal/parrot/Polly/ghost/proc/Possess(mob/living/carbon/human/H)
/mob/living/simple_animal/parrot/clock_hawk
/mob/living/simple_animal/parrot/clock_hawk/ratvar_act()
/mob/living/simple_animal/parrot/kea
/mob/living/simple_animal/parrot/eclectusr
/mob/living/simple_animal/parrot/eclectus
/mob/living/simple_animal/parrot/eclectusf
/mob/living/simple_animal/parrot/greybird
/mob/living/simple_animal/parrot/blue_caique
/mob/living/simple_animal/parrot/white_caique
/mob/living/simple_animal/parrot/green_budgerigar
/mob/living/simple_animal/parrot/blue_Budgerigar
/mob/living/simple_animal/parrot/bluegreen_Budgerigar
/mob/living/simple_animal/parrot/commonblackbird
/mob/living/simple_animal/parrot/azuretit
/mob/living/simple_animal/parrot/europeanrobin
/mob/living/simple_animal/parrot/goldcrest
/mob/living/simple_animal/parrot/ringneckdove
/mob/living/simple_animal/parrot/cockatiel
/mob/living/simple_animal/parrot/white_cockatiel
/mob/living/simple_animal/parrot/yellowish_cockatiel
/mob/living/simple_animal/parrot/grey_cockatiel
/mob/living/simple_animal/parrot/too
/mob/living/simple_animal/parrot/hooded_too
/mob/living/simple_animal/parrot/pink_too
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\pickle.dm. ----------------------
/mob/living/simple_animal/pickle
/mob/living/simple_animal/pickle/UnarmedAttack(atom/A)
/mob/living/simple_animal/pickle/death()
/mob/living/simple_animal/pickle/wabbajack_act() //restore users name before its used on the new mob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\shade.dm. ----------------------
/mob/living/simple_animal/hostile/construct/shade
/mob/living/simple_animal/hostile/construct/shade/death()
/mob/living/simple_animal/hostile/construct/shade/canSuicide()
/mob/living/simple_animal/hostile/construct/shade/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/hostile/construct/shade/attackby(obj/item/O, mob/user, params)  //Marker -Agouri
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\simplemob_vore_values.dm. ----------------------
/mob/living/carbon/alien
/mob/living/carbon/monkey
/mob/living/simple_animal/crab
/mob/living/simple_animal/cow
/mob/living/simple_animal/chick
/mob/living/simple_animal/chicken
/mob/living/simple_animal/mouse
/mob/living/simple_animal/kiwi
/mob/living/simple_animal/pet
/mob/living/simple_animal/sloth
/mob/living/simple_animal/parrot
/mob/living/simple_animal/hostile/retaliate/goat
/mob/living/simple_animal/hostile/lizard
/mob/living/simple_animal/hostile/alien
/mob/living/simple_animal/hostile/bear
/mob/living/simple_animal/hostile/poison/giant_spider
/mob/living/simple_animal/hostile/retaliate/poison/snake
/mob/living/simple_animal/hostile/gorilla
/mob/living/simple_animal/hostile/asteroid/goliath
/mob/living/simple_animal/hostile/carp
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\simple_animal.dm. ----------------------
/mob/living/simple_animal
/mob/living/simple_animal/Initialize(mapload)
/mob/living/simple_animal/Destroy()
/mob/living/simple_animal/updatehealth()
/mob/living/simple_animal/update_stat()
/mob/living/simple_animal/proc/handle_automated_action()
/mob/living/simple_animal/proc/handle_automated_movement()
/mob/living/simple_animal/proc/handle_automated_speech(var/override)
/mob/living/simple_animal/proc/environment_is_safe(datum/gas_mixture/environment, check_temp = FALSE)
/mob/living/simple_animal/handle_environment(datum/gas_mixture/environment)
/mob/living/simple_animal/proc/handle_temperature_damage()
/mob/living/simple_animal/gib(no_brain, no_organs, no_bodyparts, datum/explosion/was_explosion)
/mob/living/simple_animal/gib_animation()
/mob/living/simple_animal/say_mod(input, message_mode)
/mob/living/simple_animal/emote(act, m_type=1, message = null, intentional = FALSE)
/mob/living/simple_animal/proc/set_varspeed(var_value)
/mob/living/simple_animal/proc/update_simplemob_varspeed()
/mob/living/simple_animal/get_status_tab_items()
/mob/living/simple_animal/proc/drop_loot()
/mob/living/simple_animal/death(gibbed)
/mob/living/simple_animal/proc/CanAttack(atom/the_target)
/mob/living/simple_animal/handle_fire()
/mob/living/simple_animal/IgniteMob()
/mob/living/simple_animal/ExtinguishMob()
/mob/living/simple_animal/revive(full_heal = 0, admin_revive = 0)
/mob/living/simple_animal/proc/make_babies() // <3 <3 <3
/mob/living/simple_animal/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
/mob/living/simple_animal/stripPanelUnequip(obj/item/what, mob/who, where)
/mob/living/simple_animal/stripPanelEquip(obj/item/what, mob/who, where)
/mob/living/simple_animal/update_mobility(value_otherwise = MOBILITY_FLAGS_DEFAULT)
/mob/living/simple_animal/update_transform(do_animate)
/mob/living/simple_animal/proc/sentience_act() //Called when a simple animal gains sentience via gold slime potion
/mob/living/simple_animal/update_sight()
/mob/living/simple_animal/get_idcard(hand_first = TRUE)
/mob/living/simple_animal/can_hold_items()
/mob/living/simple_animal/IsAdvancedToolUser()
/mob/living/simple_animal/activate_hand(selhand)
/mob/living/simple_animal/swap_hand(hand_index)
/mob/living/simple_animal/put_in_hands(obj/item/I, del_on_fail = FALSE, merge_stacks = TRUE)
/mob/living/simple_animal/update_inv_hands()
/mob/living/simple_animal/user_buckle_mob(mob/living/M, mob/user)
/mob/living/simple_animal/relaymove(mob/user, direction)
/mob/living/simple_animal/buckle_mob(mob/living/buckled_mob, force = 0, check_loc = 1)
/mob/living/simple_animal/proc/toggle_ai(togglestatus)
/mob/living/simple_animal/proc/consider_wakeup()
/mob/living/simple_animal/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/onTransitZ(old_z, new_z)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\simple_animal_vr.dm. ----------------------
/mob/living/simple_animal
/mob/living/simple_animal/Destroy()
/mob/living/simple_animal/proc/update_fullness(var/atom/movable/M)
/mob/living/simple_animal/death()
/mob/living/simple_animal/init_vore()
/mob/living/simple_animal/lazy_init_belly()
/mob/living/simple_animal/verb/toggle_digestion()
/mob/living/simple_animal/proc/animal_nom(var/mob/living/T in oview(1))
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\status_procs.dm. ----------------------
/mob/living/simple_animal/blind_eyes()
/mob/living/simple_animal/adjust_blindness()
/mob/living/simple_animal/set_blindness()
/mob/living/simple_animal/blur_eyes()
/mob/living/simple_animal/adjust_blurriness()
/mob/living/simple_animal/set_blurriness()
/mob/living/simple_animal/become_blind()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\bot.dm. ----------------------
/mob/living/simple_animal/bot
/mob/living/simple_animal/bot/proc/get_mode()
/mob/living/simple_animal/bot/proc/get_mode_ui()
/mob/living/simple_animal/bot/proc/turn_on()
/mob/living/simple_animal/bot/proc/turn_off()
/mob/living/simple_animal/bot/Initialize(mapload)
/mob/living/simple_animal/bot/update_mobility()
/mob/living/simple_animal/bot/Destroy()
/mob/living/simple_animal/bot/bee_friendly()
/mob/living/simple_animal/bot/death(gibbed)
/mob/living/simple_animal/bot/proc/explode()
/mob/living/simple_animal/bot/emag_act(mob/user)
/mob/living/simple_animal/bot/examine(mob/user)
/mob/living/simple_animal/bot/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/bot/updatehealth()
/mob/living/simple_animal/bot/med_hud_set_health()
/mob/living/simple_animal/bot/med_hud_set_status()
/mob/living/simple_animal/bot/handle_automated_action() //Master process which handles code common across most bots.
/mob/living/simple_animal/bot/on_attack_hand(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/attack_ai(mob/user)
/mob/living/simple_animal/bot/ui_interact(mob/user, datum/tgui/ui)
/mob/living/simple_animal/bot/attackby(obj/item/W, mob/user, params)
/mob/living/simple_animal/bot/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/bot/emp_act(severity)
/mob/living/simple_animal/bot/proc/set_custom_texts() //Superclass for setting hack texts. Appears only if a set is not given to a bot locally.
/mob/living/simple_animal/bot/proc/speak(message,channel) //Pass a message to have the bot say() it. Pass a frequency to say it on the radio.
/mob/living/simple_animal/bot/radio(message, message_mode, list/spans, language)
/mob/living/simple_animal/bot/proc/drop_part(obj/item/drop_item, dropzone)
/mob/living/simple_animal/bot/proc/scan(scan_type, old_target, scan_range = DEFAULT_SCAN_RANGE)
/mob/living/simple_animal/bot/proc/checkscan(scan, scan_type, old_target)
/mob/living/simple_animal/bot/proc/check_bot(targ)
/mob/living/simple_animal/bot/proc/process_scan(scan_target)
/mob/living/simple_animal/bot/proc/add_to_ignore(subject)
/mob/living/simple_animal/bot/proc/bot_move(dest, move_speed)
/mob/living/simple_animal/bot/proc/bot_step(dest) //Step,increase tries if failed
/mob/living/simple_animal/bot/proc/check_bot_access()
/mob/living/simple_animal/bot/proc/call_bot(caller, turf/waypoint, message=TRUE)
/mob/living/simple_animal/bot/proc/call_mode() //Handles preparing a bot for a call, as well as calling the move proc.
/mob/living/simple_animal/bot/proc/bot_reset()
/mob/living/simple_animal/bot/proc/bot_patrol()
/mob/living/simple_animal/bot/proc/start_patrol()
/mob/living/simple_animal/bot/proc/patrol_step()
/mob/living/simple_animal/bot/proc/find_patrol_target()
/mob/living/simple_animal/bot/proc/get_next_patrol_target()
/mob/living/simple_animal/bot/proc/find_nearest_beacon()
/mob/living/simple_animal/bot/proc/bot_control(command, mob/user, list/user_access = list())
/mob/living/simple_animal/bot/proc/bot_control_message(command, user)
/mob/living/simple_animal/bot/proc/calc_path(turf/avoid)
/mob/living/simple_animal/bot/proc/calc_summon_path(turf/avoid)
/mob/living/simple_animal/bot/proc/summon_step()
/mob/living/simple_animal/bot/ui_data(mob/user)
/mob/living/simple_animal/bot/ui_act(action, params)
/mob/living/simple_animal/bot/update_icon_state()
/mob/living/simple_animal/bot/proc/topic_denied(mob/user) //Access check proc for bot topics! Remember to place in a bot's individual Topic if desired.
/mob/living/simple_animal/bot/proc/insertpai(mob/user, obj/item/paicard/card)
/mob/living/simple_animal/bot/proc/ejectpai(mob/user = null, announce = 1)
/mob/living/simple_animal/bot/proc/ejectpairemote(mob/user)
/mob/living/simple_animal/bot/Login()
/mob/living/simple_animal/bot/Logout()
/mob/living/simple_animal/bot/revive(full_heal = 0, admin_revive = 0)
/mob/living/simple_animal/bot/ghost()
/mob/living/simple_animal/bot/sentience_act()
/mob/living/simple_animal/bot/proc/set_path(list/newpath)
/mob/living/simple_animal/bot/proc/increment_path()
/mob/living/simple_animal/bot/rust_heretic_act()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\cleanbot.dm. ----------------------
/mob/living/simple_animal/bot/cleanbot
/mob/living/simple_animal/bot/cleanbot/proc/deputize(obj/item/W, mob/user)
/mob/living/simple_animal/bot/cleanbot/proc/update_titles()
/mob/living/simple_animal/bot/cleanbot/examine(mob/user)
/mob/living/simple_animal/bot/cleanbot/Initialize(mapload)
/mob/living/simple_animal/bot/cleanbot/Destroy()
/mob/living/simple_animal/bot/cleanbot/turn_on()
/mob/living/simple_animal/bot/cleanbot/turn_off()
/mob/living/simple_animal/bot/cleanbot/update_icon_state()
/mob/living/simple_animal/bot/cleanbot/bot_reset()
/mob/living/simple_animal/bot/cleanbot/set_custom_texts()
/mob/living/simple_animal/bot/cleanbot/Crossed(atom/movable/AM)
/mob/living/simple_animal/bot/cleanbot/attackby(obj/item/W, mob/user, params)
/mob/living/simple_animal/bot/cleanbot/emag_act(mob/user)
/mob/living/simple_animal/bot/cleanbot/process_scan(atom/A)
/mob/living/simple_animal/bot/cleanbot/handle_automated_action()
/mob/living/simple_animal/bot/cleanbot/proc/get_targets()
/mob/living/simple_animal/bot/cleanbot/UnarmedAttack(atom/A)
/mob/living/simple_animal/bot/cleanbot/explode()
/mob/living/simple_animal/bot/cleanbot/medbay
/mob/living/simple_animal/bot/cleanbot/ui_data(mob/user)
/mob/living/simple_animal/bot/cleanbot/ui_act(action, params)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\ed209bot.dm. ----------------------
/mob/living/simple_animal/bot/ed209
/mob/living/simple_animal/bot/ed209/Initialize(mapload,created_name,created_lasercolor)
/mob/living/simple_animal/bot/ed209/turn_on()
/mob/living/simple_animal/bot/ed209/turn_off()
/mob/living/simple_animal/bot/ed209/bot_reset()
/mob/living/simple_animal/bot/ed209/set_custom_texts()
/mob/living/simple_animal/bot/ed209/ui_data(mob/user)
/mob/living/simple_animal/bot/ed209/ui_act(action, params)
/mob/living/simple_animal/bot/ed209/proc/judgement_criteria()
/mob/living/simple_animal/bot/ed209/proc/retaliate(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/ed209/on_attack_hand(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/ed209/attackby(obj/item/W, mob/user, params)
/mob/living/simple_animal/bot/ed209/emag_act(mob/user)
/mob/living/simple_animal/bot/ed209/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/bot/ed209/handle_automated_action()
/mob/living/simple_animal/bot/ed209/proc/back_to_idle()
/mob/living/simple_animal/bot/ed209/proc/back_to_hunt()
/mob/living/simple_animal/bot/ed209/proc/look_for_perp()
/mob/living/simple_animal/bot/ed209/proc/check_for_weapons(var/obj/item/slot_item)
/mob/living/simple_animal/bot/ed209/explode()
/mob/living/simple_animal/bot/ed209/proc/set_weapon()  //used to update the projectile type and firing sound
/mob/living/simple_animal/bot/ed209/proc/shootAt(mob/target)
/mob/living/simple_animal/bot/ed209/attack_alien(mob/living/carbon/alien/user)
/mob/living/simple_animal/bot/ed209/emp_act(severity)
/mob/living/simple_animal/bot/ed209/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/bot/ed209/bluetag
/mob/living/simple_animal/bot/ed209/redtag
/mob/living/simple_animal/bot/ed209/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/ed209/RangedAttack(atom/A)
/mob/living/simple_animal/bot/ed209/proc/stun_attack(mob/living/carbon/C)
/mob/living/simple_animal/bot/ed209/proc/cuff(mob/living/carbon/C)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\firebot.dm. ----------------------
/mob/living/simple_animal/bot/firebot
/mob/living/simple_animal/bot/firebot/Initialize(mapload)
/mob/living/simple_animal/bot/firebot/Destroy()
/mob/living/simple_animal/bot/firebot/bot_reset()
/mob/living/simple_animal/bot/firebot/proc/create_extinguisher()
/mob/living/simple_animal/bot/firebot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/firebot/RangedAttack(atom/A)
/mob/living/simple_animal/bot/firebot/turn_on()
/mob/living/simple_animal/bot/firebot/turn_off()
/mob/living/simple_animal/bot/firebot/bot_reset()
/mob/living/simple_animal/bot/firebot/proc/soft_reset()
/mob/living/simple_animal/bot/firebot/set_custom_texts()
/mob/living/simple_animal/bot/firebot/emag_act(mob/user)
/mob/living/simple_animal/bot/firebot/ui_data(mob/user)
/mob/living/simple_animal/bot/firebot/ui_act(action, params)
/mob/living/simple_animal/bot/firebot/proc/is_burning(atom/target)
/mob/living/simple_animal/bot/firebot/handle_automated_action()
/mob/living/simple_animal/bot/firebot/process_scan(atom/scan_target)
/mob/living/simple_animal/bot/firebot/temperature_expose(datum/gas_mixture/air, temperature, volume)
/mob/living/simple_animal/bot/firebot/proc/spray_water(atom/target, mob/user)
/mob/living/simple_animal/bot/firebot/update_icon()
/mob/living/simple_animal/bot/firebot/explode()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\floorbot.dm. ----------------------
/mob/living/simple_animal/bot/floorbot
/mob/living/simple_animal/bot/floorbot/Initialize(mapload)
/mob/living/simple_animal/bot/floorbot/turn_on()
/mob/living/simple_animal/bot/floorbot/turn_off()
/mob/living/simple_animal/bot/floorbot/bot_reset()
/mob/living/simple_animal/bot/floorbot/set_custom_texts()
/mob/living/simple_animal/bot/floorbot/attackby(obj/item/W , mob/user, params)
/mob/living/simple_animal/bot/floorbot/emag_act(mob/user)
/mob/living/simple_animal/bot/floorbot/ui_data(mob/user)
/mob/living/simple_animal/bot/floorbot/ui_act(action, params)
/mob/living/simple_animal/bot/floorbot/proc/empty_tiles()
/mob/living/simple_animal/bot/floorbot/handle_automated_action()
/mob/living/simple_animal/bot/floorbot/proc/is_hull_breach(turf/t) //Ignore space tiles not considered part of a structure, also ignores shuttle docking areas.
/mob/living/simple_animal/bot/floorbot/process_scan(scan_target)
/mob/living/simple_animal/bot/floorbot/proc/repair(turf/target_turf)
/mob/living/simple_animal/bot/floorbot/update_icon()
/mob/living/simple_animal/bot/floorbot/explode()
/mob/living/simple_animal/bot/floorbot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/floorbot/proc/check_bot_working(turf/active_turf)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\honkbot.dm. ----------------------
/mob/living/simple_animal/bot/honkbot
/mob/living/simple_animal/bot/honkbot/Initialize(mapload)
/mob/living/simple_animal/bot/honkbot/proc/spam_flag_false() //used for addtimer
/mob/living/simple_animal/bot/honkbot/proc/sensor_blink()
/mob/living/simple_animal/bot/honkbot/proc/react_ping()
/mob/living/simple_animal/bot/honkbot/proc/react_buzz()
/mob/living/simple_animal/bot/honkbot/bot_reset()
/mob/living/simple_animal/bot/honkbot/set_custom_texts()
/mob/living/simple_animal/bot/honkbot/proc/judgement_criteria()
/mob/living/simple_animal/bot/honkbot/proc/retaliate(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/honkbot/on_attack_hand(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/honkbot/attackby(obj/item/W, mob/user, params)
/mob/living/simple_animal/bot/honkbot/emag_act(mob/user)
/mob/living/simple_animal/bot/honkbot/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/bot/honkbot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/honkbot/hitby(atom/movable/AM, skipcatch = FALSE, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/bot/honkbot/proc/bike_horn() //use bike_horn
/mob/living/simple_animal/bot/honkbot/proc/honk_attack(mob/living/carbon/C) // horn attack
/mob/living/simple_animal/bot/honkbot/proc/stun_attack(mob/living/carbon/C) // airhorn stun
/mob/living/simple_animal/bot/honkbot/handle_automated_action()
/mob/living/simple_animal/bot/honkbot/proc/back_to_idle()
/mob/living/simple_animal/bot/honkbot/proc/back_to_hunt()
/mob/living/simple_animal/bot/honkbot/proc/look_for_perp()
/mob/living/simple_animal/bot/honkbot/explode()
/mob/living/simple_animal/bot/honkbot/attack_alien(var/mob/living/carbon/alien/user as mob)
/mob/living/simple_animal/bot/honkbot/Crossed(atom/movable/AM)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\medbot.dm. ----------------------
/mob/living/simple_animal/bot/medbot
/mob/living/simple_animal/bot/medbot/mysterious
/mob/living/simple_animal/bot/medbot/derelict
/mob/living/simple_animal/bot/medbot/update_icon()
/mob/living/simple_animal/bot/medbot/Initialize(mapload, new_skin)
/mob/living/simple_animal/bot/medbot/update_mobility()
/mob/living/simple_animal/bot/medbot/bot_reset()
/mob/living/simple_animal/bot/medbot/proc/soft_reset() //Allows the medibot to still actively perform its medical duties without being completely halted as a hard reset does.
/mob/living/simple_animal/bot/medbot/set_custom_texts()
/mob/living/simple_animal/bot/medbot/attack_paw(mob/user)
/mob/living/simple_animal/bot/medbot/ui_data(mob/user)
/mob/living/simple_animal/bot/medbot/ui_act(action, params)
/mob/living/simple_animal/bot/medbot/attackby(obj/item/W as obj, mob/user as mob, params)
/mob/living/simple_animal/bot/medbot/emag_act(mob/user)
/mob/living/simple_animal/bot/medbot/process_scan(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/medbot/proc/tip_over(mob/user)
/mob/living/simple_animal/bot/medbot/proc/set_right(mob/user)
/mob/living/simple_animal/bot/medbot/proc/handle_panic()
/mob/living/simple_animal/bot/medbot/examine(mob/user)
/mob/living/simple_animal/bot/medbot/handle_automated_action()
/mob/living/simple_animal/bot/medbot/proc/assess_patient(mob/living/carbon/C)
/mob/living/simple_animal/bot/medbot/proc/get_avoidchem_toxin(mob/M)
/mob/living/simple_animal/bot/medbot/proc/get_healchem_toxin(mob/M)
/mob/living/simple_animal/bot/medbot/on_attack_hand(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/medbot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/medbot/examinate(atom/A as mob|obj|turf in fov_view())
/mob/living/simple_animal/bot/medbot/proc/medicate_patient(mob/living/carbon/C)
/mob/living/simple_animal/bot/medbot/proc/check_overdose(mob/living/carbon/patient,reagent_id,injection_amount)
/mob/living/simple_animal/bot/medbot/explode()
/mob/living/simple_animal/bot/medbot/proc/declare(crit_patient)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\mulebot.dm. ----------------------
/mob/living/simple_animal/bot/mulebot
/mob/living/simple_animal/bot/mulebot/Initialize(mapload)
/mob/living/simple_animal/bot/mulebot/ComponentInitialize()
/mob/living/simple_animal/bot/mulebot/Destroy()
/mob/living/simple_animal/bot/mulebot/proc/set_id(new_id)
/mob/living/simple_animal/bot/mulebot/bot_reset()
/mob/living/simple_animal/bot/mulebot/attackby(obj/item/I, mob/user, params)
/mob/living/simple_animal/bot/mulebot/emag_act(mob/user)
/mob/living/simple_animal/bot/mulebot/update_icon()
/mob/living/simple_animal/bot/mulebot/ex_act(severity, target, origin)
/mob/living/simple_animal/bot/mulebot/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/bot/mulebot/interact(mob/user)
/mob/living/simple_animal/bot/mulebot/ui_interact(mob/user, datum/tgui/ui)
/mob/living/simple_animal/bot/mulebot/ui_data(mob/user)
/mob/living/simple_animal/bot/mulebot/ui_act(action, params)
/mob/living/simple_animal/bot/mulebot/bot_control(command, mob/user, list/params = list(), pda = FALSE)
/mob/living/simple_animal/bot/mulebot/proc/has_power()
/mob/living/simple_animal/bot/mulebot/proc/buzz(type)
/mob/living/simple_animal/bot/mulebot/MouseDrop_T(atom/movable/AM, mob/user)
/mob/living/simple_animal/bot/mulebot/proc/load(atom/movable/AM)
/mob/living/simple_animal/bot/mulebot/proc/load_mob(mob/living/M)
/mob/living/simple_animal/bot/mulebot/post_buckle_mob(mob/living/M)
/mob/living/simple_animal/bot/mulebot/post_unbuckle_mob(mob/living/M)
/mob/living/simple_animal/bot/mulebot/proc/unload(dirn)
/mob/living/simple_animal/bot/mulebot/get_status_tab_items()
/mob/living/simple_animal/bot/mulebot/call_bot()
/mob/living/simple_animal/bot/mulebot/handle_automated_action()
/mob/living/simple_animal/bot/mulebot/proc/process_bot()
/mob/living/simple_animal/bot/mulebot/proc/process_blocked(turf/next)
/mob/living/simple_animal/bot/mulebot/proc/process_nav()
/mob/living/simple_animal/bot/mulebot/calc_path(turf/avoid = null)
/mob/living/simple_animal/bot/mulebot/proc/set_destination(new_dest)
/mob/living/simple_animal/bot/mulebot/proc/start()
/mob/living/simple_animal/bot/mulebot/proc/start_home()
/mob/living/simple_animal/bot/mulebot/proc/do_start_home()
/mob/living/simple_animal/bot/mulebot/proc/at_target()
/mob/living/simple_animal/bot/mulebot/Bump(atom/obs)
/mob/living/simple_animal/bot/mulebot/proc/RunOver(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/mulebot/relaymove(mob/user)
/mob/living/simple_animal/bot/mulebot/proc/get_nav()
/mob/living/simple_animal/bot/mulebot/emp_act(severity)
/mob/living/simple_animal/bot/mulebot/explode()
/mob/living/simple_animal/bot/mulebot/remove_air(amount) //To prevent riders suffocating
/mob/living/simple_animal/bot/mulebot/remove_air_ratio(ratio)
/mob/living/simple_animal/bot/mulebot/do_resist()
/mob/living/simple_animal/bot/mulebot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/mulebot/insertpai(mob/user, obj/item/paicard/card)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\secbot.dm. ----------------------
/mob/living/simple_animal/bot/secbot
/mob/living/simple_animal/bot/secbot/beepsky
/mob/living/simple_animal/bot/secbot/beepsky/jr
/mob/living/simple_animal/bot/secbot/beepsky/jr/Initialize(mapload)
/mob/living/simple_animal/bot/secbot/proc/process_emote(var/emote_type, var/atom/criminal, var/threat, var/arrest = -1, var/location)
/mob/living/simple_animal/bot/secbot/proc/apply_fashion(var/datum/beepsky_fashion/fashion)
/mob/living/simple_animal/bot/secbot/proc/reset_fashion()
/mob/living/simple_animal/bot/secbot/beepsky/explode()
/mob/living/simple_animal/bot/secbot/pingsky
/mob/living/simple_animal/bot/secbot/Initialize(mapload)
/mob/living/simple_animal/bot/secbot/update_icon()
/mob/living/simple_animal/bot/secbot/turn_off()
/mob/living/simple_animal/bot/secbot/bot_reset()
/mob/living/simple_animal/bot/secbot/set_custom_texts()
/mob/living/simple_animal/bot/secbot/ui_data(mob/user)
/mob/living/simple_animal/bot/secbot/ui_act(action, params)
/mob/living/simple_animal/bot/secbot/proc/retaliate(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/secbot/proc/judgement_criteria()
/mob/living/simple_animal/bot/secbot/proc/special_retaliate_after_attack(mob/user) //allows special actions to take place after being attacked.
/mob/living/simple_animal/bot/secbot/on_attack_hand(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/secbot/attackby(obj/item/W, mob/user, params)
/mob/living/simple_animal/bot/secbot/proc/attempt_place_on_head(mob/user, obj/item/clothing/head/H)
/mob/living/simple_animal/bot/secbot/regenerate_icons()
/mob/living/simple_animal/bot/secbot/emag_act(mob/user)
/mob/living/simple_animal/bot/secbot/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/bot/secbot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/bot/secbot/hitby(atom/movable/AM, skipcatch = FALSE, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/bot/secbot/proc/cuff(mob/living/carbon/C)
/mob/living/simple_animal/bot/secbot/proc/attempt_handcuff(mob/living/carbon/C)
/mob/living/simple_animal/bot/secbot/proc/stun_attack(mob/living/carbon/C)
/mob/living/simple_animal/bot/secbot/handle_automated_action()
/mob/living/simple_animal/bot/secbot/proc/back_to_idle()
/mob/living/simple_animal/bot/secbot/proc/back_to_hunt()
/mob/living/simple_animal/bot/secbot/proc/look_for_perp()
/mob/living/simple_animal/bot/secbot/proc/check_for_weapons(var/obj/item/slot_item)
/mob/living/simple_animal/bot/secbot/explode()
/mob/living/simple_animal/bot/secbot/attack_alien(var/mob/living/carbon/alien/user as mob)
/mob/living/simple_animal/bot/secbot/Crossed(atom/movable/AM)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\bot\SuperBeepsky.dm. ----------------------
/mob/living/simple_animal/bot/secbot/grievous //This bot is powerful. If you managed to get 4 eswords somehow, you deserve this horror. Emag him for best results.
/mob/living/simple_animal/bot/secbot/grievous/toy //A toy version of general beepsky!
/mob/living/simple_animal/bot/secbot/grievous/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/bot/secbot/grievous/Crossed(atom/movable/AM)
/mob/living/simple_animal/bot/secbot/grievous/Initialize(mapload)
/mob/living/simple_animal/bot/secbot/grievous/Destroy()
/mob/living/simple_animal/bot/secbot/grievous/special_retaliate_after_attack(mob/user)
/mob/living/simple_animal/bot/secbot/grievous/stun_attack(mob/living/carbon/C) //Criminals don't deserve to live
/mob/living/simple_animal/bot/secbot/grievous/handle_automated_action()
/mob/living/simple_animal/bot/secbot/grievous/look_for_perp()
/mob/living/simple_animal/bot/secbot/grievous/explode()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\bumbles.dm. ----------------------
/mob/living/simple_animal/pet/bumbles
/mob/living/simple_animal/pet/bumbles/Initialize(mapload)
/mob/living/simple_animal/pet/bumbles/ComponentInitialize()
/mob/living/simple_animal/pet/bumbles/update_mobility()
/mob/living/simple_animal/pet/bumbles/bee_friendly()
/mob/living/simple_animal/pet/bumbles/handle_automated_movement()
/mob/living/simple_animal/pet/bumbles/update_mobility()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\butterfly.dm. ----------------------
/mob/living/simple_animal/butterfly
/mob/living/simple_animal/butterfly/Initialize(mapload)
/mob/living/simple_animal/butterfly/bee_friendly()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\cat.dm. ----------------------
/mob/living/simple_animal/pet/cat
/mob/living/simple_animal/pet/cat/Initialize(mapload)
/mob/living/simple_animal/pet/cat/ComponentInitialize()
/mob/living/simple_animal/pet/cat/update_mobility()
/mob/living/simple_animal/pet/cat/space
/mob/living/simple_animal/pet/cat/original
/mob/living/simple_animal/pet/cat/kitten
/mob/living/simple_animal/pet/cat/Runtime
/mob/living/simple_animal/pet/cat/Runtime/Initialize(mapload)
/mob/living/simple_animal/pet/cat/Runtime/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/pet/cat/Runtime/make_babies()
/mob/living/simple_animal/pet/cat/Runtime/death()
/mob/living/simple_animal/pet/cat/Runtime/proc/Read_Memory()
/mob/living/simple_animal/pet/cat/Runtime/proc/Write_Memory(dead)
/mob/living/simple_animal/pet/cat/Runtime/proc/Deploy_The_Cats()
/mob/living/simple_animal/pet/cat/Proc
/mob/living/simple_animal/pet/cat/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/pet/cat/cak //I told you I'd do it, Remie
/mob/living/simple_animal/pet/cat/cak/CheckParts(list/parts)
/mob/living/simple_animal/pet/cat/cak/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/pet/cat/cak/on_attack_hand(mob/living/L)
/mob/living/simple_animal/pet/cat/custom_cat
/mob/living/simple_animal/pet/cat/custom_cat/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\cockroach.dm. ----------------------
/mob/living/simple_animal/cockroach
/mob/living/simple_animal/cockroach/Initialize(mapload)
/mob/living/simple_animal/cockroach/death(gibbed)
/mob/living/simple_animal/cockroach/Crossed(atom/movable/AM)
/mob/living/simple_animal/cockroach/ex_act(severity, target, origin) //Explosions are a terrible way to handle a cockroach.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\crab.dm. ----------------------
/mob/living/simple_animal/crab
/mob/living/simple_animal/crab/Initialize(mapload)
/mob/living/simple_animal/crab/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/crab/Coffee
/mob/living/simple_animal/crab/evil
/mob/living/simple_animal/crab/kreb
/mob/living/simple_animal/crab/evil/kreb
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\dog.dm. ----------------------
/mob/living/simple_animal/pet/dog
/mob/living/simple_animal/pet/dog/ComponentInitialize()
/mob/living/simple_animal/pet/dog/corgi
/mob/living/simple_animal/pet/dog/corgi/Destroy()
/mob/living/simple_animal/pet/dog/corgi/handle_atom_del(atom/A)
/mob/living/simple_animal/pet/dog/pug
/mob/living/simple_animal/pet/dog/corgi/exoticcorgi
/mob/living/simple_animal/pet/dog/Initialize(mapload)
/mob/living/simple_animal/pet/dog/corgi/Initialize(mapload)
/mob/living/simple_animal/pet/dog/corgi/exoticcorgi/Initialize(mapload)
/mob/living/simple_animal/pet/dog/corgi/death(gibbed)
/mob/living/simple_animal/pet/dog/corgi/getarmor(def_zone, type)
/mob/living/simple_animal/pet/dog/corgi/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/pet/dog/corgi/proc/place_on_head(obj/item/item_to_add, mob/user)
/mob/living/simple_animal/pet/dog/corgi/proc/update_corgi_fluff()
/mob/living/simple_animal/pet/dog/corgi/Ian
/mob/living/simple_animal/pet/dog/corgi/Ian/Initialize(mapload)
/mob/living/simple_animal/pet/dog/corgi/Ian/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/pet/dog/corgi/Ian/death()
/mob/living/simple_animal/pet/dog/corgi/Ian/proc/Read_Memory()
/mob/living/simple_animal/pet/dog/corgi/Ian/proc/Write_Memory(dead)
/mob/living/simple_animal/pet/dog/corgi/Ian/BiologicalLife()
/mob/living/simple_animal/pet/dog/corgi/Ian/proc/corgi_ai_behavior()
/mob/living/simple_animal/pet/dog/corgi/Ian/narsie_act()
/mob/living/simple_animal/pet/dog/corgi/narsie
/mob/living/simple_animal/pet/dog/corgi/narsie/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/pet/dog/corgi/narsie/update_corgi_fluff()
/mob/living/simple_animal/pet/dog/corgi/narsie/narsie_act()
/mob/living/simple_animal/pet/dog/corgi/regenerate_icons()
/mob/living/simple_animal/pet/dog/corgi/puppy
/mob/living/simple_animal/pet/dog/corgi/puppy/Topic(href, href_list)
/mob/living/simple_animal/pet/dog/corgi/puppy/void		//Tribute to the corgis born in nullspace
/mob/living/simple_animal/pet/dog/corgi/puppy/void/Process_Spacemove(movement_dir = 0)
/mob/living/simple_animal/pet/dog/corgi/Lisa
/mob/living/simple_animal/pet/dog/corgi/Lisa/Topic(href, href_list)
/mob/living/simple_animal/pet/dog/corgi/Lisa/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/pet/dog/pug/BiologicalLife(delta_time, times_fired)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\farm_animals.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/goat
/mob/living/simple_animal/hostile/retaliate/goat/Initialize(mapload, /datum/reagent/milk_reagent)
/mob/living/simple_animal/hostile/retaliate/goat/Destroy()
/mob/living/simple_animal/hostile/retaliate/goat/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/retaliate/goat/Retaliate()
/mob/living/simple_animal/hostile/retaliate/goat/Move()
/mob/living/simple_animal/hostile/retaliate/goat/proc/eat_plants()
/mob/living/simple_animal/hostile/retaliate/goat/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/hostile/retaliate/goat/AttackingTarget()
/mob/living/simple_animal/cow
/mob/living/simple_animal/cow/Initialize(mapload)
/mob/living/simple_animal/cow/Destroy()
/mob/living/simple_animal/cow/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/cow/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/cow/on_attack_hand(mob/living/carbon/M)
/mob/living/simple_animal/cow/random
/mob/living/simple_animal/cow/random/Initialize(mapload)
/mob/living/simple_animal/cow/wisdom
/mob/living/simple_animal/cow/wisdom/Initialize(mapload)
/mob/living/simple_animal/chick
/mob/living/simple_animal/chick/Initialize(mapload)
/mob/living/simple_animal/chick/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/chick/holo/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/chicken
/mob/living/simple_animal/chicken/Initialize(mapload)
/mob/living/simple_animal/chicken/Destroy()
/mob/living/simple_animal/chicken/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/chicken/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/kiwi
/mob/living/simple_animal/kiwi/Destroy()
/mob/living/simple_animal/kiwi/Initialize(mapload)
/mob/living/simple_animal/kiwi/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/kiwi/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/babyKiwi
/mob/living/simple_animal/babyKiwi/Initialize(mapload)
/mob/living/simple_animal/babyKiwi/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/deer
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\fox.dm. ----------------------
/mob/living/simple_animal/pet/fox
/mob/living/simple_animal/pet/fox/ComponentInitialize()
/mob/living/simple_animal/pet/fox/Renault
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\gondola.dm. ----------------------
/mob/living/simple_animal/pet/gondola
/mob/living/simple_animal/pet/gondola/Initialize(mapload)
/mob/living/simple_animal/pet/gondola/ComponentInitialize()
/mob/living/simple_animal/pet/gondola/proc/CreateGondola()
/mob/living/simple_animal/pet/gondola/IsVocal() //Gondolas are the silent walker.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\lizard.dm. ----------------------
/mob/living/simple_animal/hostile/lizard
/mob/living/simple_animal/hostile/lizard/ComponentInitialize()
/mob/living/simple_animal/hostile/lizard/CanAttack(atom/the_target)//Can we actually attack a possible target?
/mob/living/simple_animal/hostile/lizard/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\mouse.dm. ----------------------
/mob/living/simple_animal/mouse
/mob/living/simple_animal/mouse/Initialize(mapload)
/mob/living/simple_animal/mouse/proc/splat()
/mob/living/simple_animal/mouse/death(gibbed, toast)
/mob/living/simple_animal/mouse/Crossed(AM as mob|obj)
/mob/living/simple_animal/mouse/handle_automated_action()
/mob/living/simple_animal/mouse/proc/be_fruitful()
/mob/living/simple_animal/mouse/proc/evolve()
/mob/living/simple_animal/mouse/proc/evolve_plague()
/mob/living/simple_animal/mouse/white
/mob/living/simple_animal/mouse/gray
/mob/living/simple_animal/mouse/brown
/mob/living/simple_animal/mouse/Destroy()
/mob/living/simple_animal/mouse/brown/Tom
/mob/living/simple_animal/mouse/brown/Tom/Initialize(mapload)
/mob/living/simple_animal/mouse/proc/miasma(datum/gas_mixture/environment, check_temp = FALSE)
/mob/living/simple_animal/mouse/handle_environment(datum/gas_mixture/environment)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\panda.dm. ----------------------
/mob/living/simple_animal/pet/redpanda
/mob/living/simple_animal/pet/redpanda/stinky
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\penguin.dm. ----------------------
/mob/living/simple_animal/pet/penguin
/mob/living/simple_animal/pet/penguin/emperor
/mob/living/simple_animal/pet/penguin/emperor/shamebrero
/mob/living/simple_animal/pet/penguin/baby
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\pet.dm. ----------------------
/mob/living/simple_animal/pet
/mob/living/simple_animal/pet/handle_atom_del(atom/A)
/mob/living/simple_animal/pet/proc/add_collar(obj/item/clothing/neck/petcollar/P, mob/user)
/mob/living/simple_animal/pet/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/pet/Initialize(mapload)
/mob/living/simple_animal/pet/Destroy()
/mob/living/simple_animal/pet/revive(full_heal = 0, admin_revive = 0)
/mob/living/simple_animal/pet/death(gibbed)
/mob/living/simple_animal/pet/gib()
/mob/living/simple_animal/pet/regenerate_icons()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\plushie.dm. ----------------------
/mob/living/simple_animal/pet/plushie
/mob/living/simple_animal/pet/plushie/ComponentInitialize()
/mob/living/simple_animal/pet/plushie/BiologicalLife(delta_time, times_fired)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\possum.dm. ----------------------
/mob/living/simple_animal/opossum
/mob/living/simple_animal/opossum/Initialize(mapload)
/mob/living/simple_animal/opossum/poppy
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\sloth.dm. ----------------------
/mob/living/simple_animal/sloth
/mob/living/simple_animal/pet/sloth/ComponentInitialize()
/mob/living/simple_animal/sloth/paperwork
/mob/living/simple_animal/sloth/citrus
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\snake.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/poison
/mob/living/simple_animal/hostile/retaliate/poison/AttackingTarget()
/mob/living/simple_animal/hostile/retaliate/poison/snake
/mob/living/simple_animal/hostile/retaliate/poison/snake/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/poison/snake/ListTargets(atom/the_target)
/mob/living/simple_animal/hostile/retaliate/poison/snake/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\extra_drone_types.dm. ----------------------
/mob/living/simple_animal/drone/syndrone
/mob/living/simple_animal/drone/syndrone/Initialize(mapload)
/mob/living/simple_animal/drone/syndrone/Login()
/mob/living/simple_animal/drone/syndrone/badass
/mob/living/simple_animal/drone/syndrone/badass/Initialize(mapload)
/mob/living/simple_animal/drone/snowflake
/mob/living/simple_animal/drone/snowflake/Initialize(mapload)
/mob/living/simple_animal/drone/polymorphed
/mob/living/simple_animal/drone/polymorphed/Initialize(mapload)
/mob/living/simple_animal/drone/derelict
/mob/living/simple_animal/drone/cogscarab
/mob/living/simple_animal/drone/cogscarab/ratvar //a subtype for spawning when ratvar is alive, has a slab that it can use and a normal fabricator
/mob/living/simple_animal/drone/cogscarab/admin //an admin-only subtype of cogscarab with a no-cost fabricator and slab in its box
/mob/living/simple_animal/drone/cogscarab/Initialize(mapload)
/mob/living/simple_animal/drone/cogscarab/Login()
/mob/living/simple_animal/drone/cogscarab/binarycheck()
/mob/living/simple_animal/drone/cogscarab/alert_drones(msg, dead_can_hear = FALSE)
/mob/living/simple_animal/drone/attackby(obj/item/I, mob/user)
/mob/living/simple_animal/drone/cogscarab/try_reactivate(mob/living/user)
/mob/living/simple_animal/drone/cogscarab/can_use_guns(obj/item/G)
/mob/living/simple_animal/drone/cogscarab/get_armor_effectiveness()
/mob/living/simple_animal/drone/cogscarab/triggerAlarm(class, area/A, O, obj/alarmsource)
/mob/living/simple_animal/drone/cogscarab/cancelAlarm(class, area/A, obj/origin)
/mob/living/simple_animal/drone/cogscarab/update_drone_hack()
/mob/living/simple_animal/drone/cogscarab/death(gibbed)
/mob/living/simple_animal/drone/cogscarab/drone_chat(msg)
/mob/living/simple_animal/drone/cogscarab/ratvar_act()
/mob/living/simple_animal/drone/cogscarab/update_icons()
/mob/living/simple_animal/drone/cogscarab/update_mobility()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\interaction.dm. ----------------------
/mob/living/simple_animal/drone/attack_drone(mob/living/simple_animal/drone/D)
/mob/living/simple_animal/drone/proc/try_reactivate(mob/living/user)
/mob/living/simple_animal/drone/attackby(obj/item/I, mob/user)
/mob/living/simple_animal/drone/getarmor(def_zone, type)
/mob/living/simple_animal/drone/proc/get_armor_effectiveness()
/mob/living/simple_animal/drone/proc/update_drone_hack(hack, clockwork)
/mob/living/simple_animal/drone/proc/liberate()
/mob/living/simple_animal/drone/proc/update_drone_icon()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\inventory.dm. ----------------------
/mob/living/simple_animal/drone/doUnEquip(obj/item/I, force, newloc, no_move, invdrop = TRUE, silent = FALSE)
/mob/living/simple_animal/drone/can_equip(obj/item/I, slot, disable_warning = FALSE, bypass_equip_delay_self = FALSE, clothing_check = FALSE, list/return_warning)
/mob/living/simple_animal/drone/get_item_by_slot(slot_id)
/mob/living/simple_animal/drone/equip_to_slot(obj/item/I, slot)
/mob/living/simple_animal/drone/getBackSlot()
/mob/living/simple_animal/drone/getBeltSlot()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\say.dm. ----------------------
/mob/living/simple_animal/drone/proc/alert_drones(msg, dead_can_hear = FALSE)
/mob/living/simple_animal/drone/proc/drone_chat(msg)
/mob/living/simple_animal/drone/binarycheck()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\verbs.dm. ----------------------
/mob/living/simple_animal/drone/verb/check_laws()
/mob/living/simple_animal/drone/verb/drone_ping()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\visuals_icons.dm. ----------------------
/mob/living/simple_animal/drone/proc/apply_overlay(cache_index)
/mob/living/simple_animal/drone/proc/remove_overlay(cache_index)
/mob/living/simple_animal/drone/update_inv_hands()
/mob/living/simple_animal/drone/proc/update_inv_internal_storage()
/mob/living/simple_animal/drone/update_inv_head()
/mob/living/simple_animal/drone/update_inv_wear_mask()
/mob/living/simple_animal/drone/regenerate_icons()
/mob/living/simple_animal/drone/proc/pickVisualAppearence()
/mob/living/simple_animal/drone/proc/getItemPixelShiftY()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\friendly\drone\_drone.dm. ----------------------
/mob/living/simple_animal/drone
/mob/living/simple_animal/drone/Initialize(mapload)
/mob/living/simple_animal/drone/ComponentInitialize()
/mob/living/simple_animal/drone/med_hud_set_health()
/mob/living/simple_animal/drone/med_hud_set_status()
/mob/living/simple_animal/drone/Destroy()
/mob/living/simple_animal/drone/Login()
/mob/living/simple_animal/drone/auto_deadmin_on_login()
/mob/living/simple_animal/drone/death(gibbed)
/mob/living/simple_animal/drone/gib()
/mob/living/simple_animal/drone/ratvar_act()
/mob/living/simple_animal/drone/examine(mob/user)
/mob/living/simple_animal/drone/assess_threat(judgement_criteria, lasercolor = "", datum/callback/weaponcheck=null) //Secbots won't hunt maintenance drones.
/mob/living/simple_animal/drone/emp_act(severity)
/mob/living/simple_animal/drone/proc/triggerAlarm(class, area/home, cameras, obj/source)
/mob/living/simple_animal/drone/proc/freeCamera(area/home, obj/machinery/camera/cam)
/mob/living/simple_animal/drone/proc/cancelAlarm(class, area/A, obj/origin)
/mob/living/simple_animal/drone/handle_temperature_damage()
/mob/living/simple_animal/drone/flash_act(intensity = 1, override_blindness_check = 0, affect_silicon = 0)
/mob/living/simple_animal/drone/mob_negates_gravity()
/mob/living/simple_animal/drone/mob_has_gravity()
/mob/living/simple_animal/drone/experience_pressure_difference(pressure_difference, direction)
/mob/living/simple_animal/drone/bee_friendly()
/mob/living/simple_animal/drone/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)
/mob/living/simple_animal/drone/can_see_reagents()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\gremlin\gremlin.dm. ----------------------
/mob/living/simple_animal/hostile/gremlin
/mob/living/simple_animal/hostile/gremlin/Initialize(mapload)
/mob/living/simple_animal/hostile/gremlin/AttackingTarget()
/mob/living/simple_animal/hostile/gremlin/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, list/spans, message_mode)
/mob/living/simple_animal/hostile/gremlin/proc/generate_markov_input()
/mob/living/simple_animal/hostile/gremlin/proc/generate_markov_chain()
/mob/living/simple_animal/hostile/gremlin/proc/tamper(obj/M)
/mob/living/simple_animal/hostile/gremlin/CanAttack(atom/new_target)
/mob/living/simple_animal/hostile/gremlin/death(gibbed)
/mob/living/simple_animal/hostile/gremlin/Life()
/mob/living/simple_animal/hostile/gremlin/EscapeConfinement()
/mob/living/simple_animal/hostile/gremlin/proc/exit_vents()
/mob/living/simple_animal/hostile/gremlin/UnarmedAttack(var/atom/A)
/mob/living/simple_animal/hostile/gremlin/IsAdvancedToolUser()
/mob/living/simple_animal/hostile/gremlin/proc/divide()
/mob/living/simple_animal/hostile/gremlin/traitor
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\guardian.dm. ----------------------
/mob/living/simple_animal/hostile/guardian
/mob/living/simple_animal/hostile/guardian/Initialize(mapload, theme)
/mob/living/simple_animal/hostile/guardian/med_hud_set_health()
/mob/living/simple_animal/hostile/guardian/med_hud_set_status()
/mob/living/simple_animal/hostile/guardian/Destroy()
/mob/living/simple_animal/hostile/guardian/verb/music_interact()
/mob/living/simple_animal/hostile/guardian/proc/updatetheme(theme) //update the guardian's theme
/mob/living/simple_animal/hostile/guardian/Login() //if we have a mind, set its name to ours when it logs in
/mob/living/simple_animal/hostile/guardian/proc/guardiancustomize()
/mob/living/simple_animal/hostile/guardian/proc/guardianrecolor()
/mob/living/simple_animal/hostile/guardian/proc/guardianrename()
/mob/living/simple_animal/hostile/guardian/PhysicalLife() //Dies if the summoner dies
/mob/living/simple_animal/hostile/guardian/get_status_tab_items()
/mob/living/simple_animal/hostile/guardian/Move() //Returns to summoner if they move out of range
/mob/living/simple_animal/hostile/guardian/proc/snapback()
/mob/living/simple_animal/hostile/guardian/canSuicide()
/mob/living/simple_animal/hostile/guardian/proc/is_deployed()
/mob/living/simple_animal/hostile/guardian/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/death()
/mob/living/simple_animal/hostile/guardian/update_health_hud()
/mob/living/simple_animal/hostile/guardian/adjustHealth(amount, updating_health = TRUE, forced = FALSE) //The spirit is invincible, but passes on damage to the summoner
/mob/living/simple_animal/hostile/guardian/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/guardian/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/simple_animal/hostile/guardian/gib(no_brain, no_organs, no_bodyparts, datum/explosion/was_explosion)
/mob/living/simple_animal/hostile/guardian/equip_to_slot(obj/item/I, slot)
/mob/living/simple_animal/hostile/guardian/proc/apply_overlay(cache_index)
/mob/living/simple_animal/hostile/guardian/proc/remove_overlay(cache_index)
/mob/living/simple_animal/hostile/guardian/update_inv_hands()
/mob/living/simple_animal/hostile/guardian/regenerate_icons()
/mob/living/simple_animal/hostile/guardian/proc/Manifest(forced)
/mob/living/simple_animal/hostile/guardian/proc/Recall(forced)
/mob/living/simple_animal/hostile/guardian/proc/ToggleMode()
/mob/living/simple_animal/hostile/guardian/proc/ToggleLight()
/mob/living/simple_animal/hostile/guardian/verb/ShowType()
/mob/living/simple_animal/hostile/guardian/proc/Communicate()
/mob/living/proc/guardian_comm()
/mob/living/proc/guardian_recall()
/mob/living/proc/guardian_reset()
/mob/living/proc/hasparasites() //returns a list of guardians the mob is a summoner for
/mob/living/simple_animal/hostile/guardian/proc/hasmatchingsummoner(mob/living/simple_animal/hostile/guardian/G) //returns 1 if the summoner matches the target's summoner
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\assassin.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/assassin
/mob/living/simple_animal/hostile/guardian/assassin/Initialize(mapload)
/mob/living/simple_animal/hostile/guardian/assassin/PhysicalLife()
/mob/living/simple_animal/hostile/guardian/assassin/get_status_tab_items()
/mob/living/simple_animal/hostile/guardian/assassin/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/assassin/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/guardian/assassin/Recall()
/mob/living/simple_animal/hostile/guardian/assassin/ToggleMode(forced = 0)
/mob/living/simple_animal/hostile/guardian/assassin/proc/updatestealthalert()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\charger.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/charger
/mob/living/simple_animal/hostile/guardian/charger/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/guardian/charger/OpenFire(atom/A)
/mob/living/simple_animal/hostile/guardian/charger/Shoot(atom/targeted_atom)
/mob/living/simple_animal/hostile/guardian/charger/proc/charging_end()
/mob/living/simple_animal/hostile/guardian/charger/Move()
/mob/living/simple_animal/hostile/guardian/charger/snapback()
/mob/living/simple_animal/hostile/guardian/charger/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\dextrous.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/dextrous
/mob/living/simple_animal/hostile/guardian/dextrous/death(gibbed)
/mob/living/simple_animal/hostile/guardian/dextrous/examine(mob/user)
/mob/living/simple_animal/hostile/guardian/dextrous/Recall(forced)
/mob/living/simple_animal/hostile/guardian/dextrous/snapback()
/mob/living/simple_animal/hostile/guardian/dextrous/doUnEquip(obj/item/I, force, silent = FALSE)
/mob/living/simple_animal/hostile/guardian/dextrous/can_equip(obj/item/I, slot, disable_warning = FALSE, bypass_equip_delay_self = FALSE, clothing_check = FALSE, list/return_warning)
/mob/living/simple_animal/hostile/guardian/dextrous/equip_to_slot(obj/item/I, slot)
/mob/living/simple_animal/hostile/guardian/dextrous/getBackSlot()
/mob/living/simple_animal/hostile/guardian/dextrous/getBeltSlot()
/mob/living/simple_animal/hostile/guardian/dextrous/proc/update_inv_internal_storage()
/mob/living/simple_animal/hostile/guardian/dextrous/regenerate_icons()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\explosive.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/bomb
/mob/living/simple_animal/hostile/guardian/bomb/get_status_tab_items()
/mob/living/simple_animal/hostile/guardian/bomb/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/bomb/AltClickOn(atom/movable/A)
/mob/living/simple_animal/hostile/guardian/bomb/proc/on_explode(atom/bomb, atom/victim)
/mob/living/simple_animal/hostile/guardian/bomb/proc/on_failure(atom/bomb)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\fire.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/fire
/mob/living/simple_animal/hostile/guardian/fire/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/guardian/fire/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/fire/Crossed(AM as mob|obj)
/mob/living/simple_animal/hostile/guardian/fire/Bumped(atom/movable/AM)
/mob/living/simple_animal/hostile/guardian/fire/Bump(AM as mob|obj)
/mob/living/simple_animal/hostile/guardian/fire/proc/collision_ignite(AM as mob|obj)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\gravitokinetic.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/gravitokinetic
/mob/living/simple_animal/hostile/guardian/gravitokinetic/death()
/mob/living/simple_animal/hostile/guardian/gravitokinetic/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/gravitokinetic/AltClickOn(atom/A)
/mob/living/simple_animal/hostile/guardian/gravitokinetic/Recall(forced)
/mob/living/simple_animal/hostile/guardian/gravitokinetic/Manifest(forced)
/mob/living/simple_animal/hostile/guardian/gravitokinetic/Moved(oldLoc, dir)
/mob/living/simple_animal/hostile/guardian/gravitokinetic/proc/add_gravity(atom/A, new_gravity = 3)
/mob/living/simple_animal/hostile/guardian/gravitokinetic/proc/remove_gravity(atom/target)
/mob/living/simple_animal/hostile/guardian/gravitokinetic/proc/__distance_check(atom/movable/AM, OldLoc, Dir, Forced)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\lightning.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/beam
/mob/living/simple_animal/hostile/guardian/beam/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/beam/Destroy()
/mob/living/simple_animal/hostile/guardian/beam/Manifest()
/mob/living/simple_animal/hostile/guardian/beam/Recall()
/mob/living/simple_animal/hostile/guardian/beam/proc/cleardeletedchains()
/mob/living/simple_animal/hostile/guardian/beam/proc/shockallchains()
/mob/living/simple_animal/hostile/guardian/beam/proc/removechains()
/mob/living/simple_animal/hostile/guardian/beam/proc/chainshock(datum/beam/B)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\protector.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/protector
/mob/living/simple_animal/hostile/guardian/protector/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/guardian/protector/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/guardian/protector/ToggleMode()
/mob/living/simple_animal/hostile/guardian/protector/snapback() //snap to what? snap to the guardian!
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\ranged.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/ranged
/mob/living/simple_animal/hostile/guardian/ranged/ToggleMode()
/mob/living/simple_animal/hostile/guardian/ranged/Shoot(atom/targeted_atom)
/mob/living/simple_animal/hostile/guardian/ranged/ToggleLight()
/mob/living/simple_animal/hostile/guardian/ranged/verb/Snare()
/mob/living/simple_animal/hostile/guardian/ranged/verb/DisarmSnare()
/mob/living/simple_animal/hostile/guardian/ranged/Manifest(forced)
/mob/living/simple_animal/hostile/guardian/ranged/Recall(forced)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\standard.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/punch
/mob/living/simple_animal/hostile/guardian/punch/verb/Battlecry()
/mob/living/simple_animal/hostile/guardian/punch/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\guardian\types\support.dm. ----------------------
/mob/living/simple_animal/hostile/guardian/healer
/mob/living/simple_animal/hostile/guardian/healer/Initialize(mapload)
/mob/living/simple_animal/hostile/guardian/healer/get_status_tab_items()
/mob/living/simple_animal/hostile/guardian/healer/AttackingTarget()
/mob/living/simple_animal/hostile/guardian/healer/ToggleMode()
/mob/living/simple_animal/hostile/guardian/healer/verb/Beacon()
/mob/living/simple_animal/hostile/guardian/healer/AltClickOn(atom/movable/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\alien.dm. ----------------------
/mob/living/simple_animal/hostile/alien
/mob/living/simple_animal/hostile/alien/Initialize(mapload)
/mob/living/simple_animal/hostile/alien/drone
/mob/living/simple_animal/hostile/alien/drone/handle_automated_action()
/mob/living/simple_animal/hostile/alien/sentinel
/mob/living/simple_animal/hostile/alien/sentinel/cube
/mob/living/simple_animal/hostile/alien/queen
/mob/living/simple_animal/hostile/alien/queen/handle_automated_action()
/mob/living/simple_animal/hostile/alien/proc/SpreadPlants()
/mob/living/simple_animal/hostile/alien/proc/LayEggs()
/mob/living/simple_animal/hostile/alien/queen/large
/mob/living/simple_animal/hostile/alien/handle_temperature_damage()
/mob/living/simple_animal/hostile/alien/maid
/mob/living/simple_animal/hostile/alien/maid/Initialize(mapload)
/mob/living/simple_animal/hostile/alien/maid/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\banana_spider.dm. ----------------------
/mob/living/simple_animal/banana_spider
/mob/living/simple_animal/banana_spider/Initialize(mapload)
/mob/living/simple_animal/banana_spider/attack_ghost(mob/user)
/mob/living/simple_animal/banana_spider/ComponentInitialize()
/mob/living/simple_animal/banana_spider/Crossed(atom/movable/AM)		//no /var in proc headers
/mob/living/simple_animal/banana_spider/ex_act(severity, target, origin)
/mob/living/simple_animal/banana_spider/start_pulling()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\bear.dm. ----------------------
/mob/living/simple_animal/hostile/bear
/mob/living/simple_animal/hostile/bear/Hudson
/mob/living/simple_animal/hostile/bear/snow
/mob/living/simple_animal/hostile/bear/russian
/mob/living/simple_animal/hostile/bear/update_icons()
/mob/living/simple_animal/hostile/bear/butter //The mighty companion to Cak. Several functions used from it.
/mob/living/simple_animal/hostile/bear/butter/BiologicalLife(delta_time, times_fired) //Heals butter bear really fast when he takes damage.
/mob/living/simple_animal/hostile/bear/butter/on_attack_hand(mob/living/L) //Borrowed code from Cak, feeds people if they hit you. More nutriment but less vitamin to represent BUTTER.
/mob/living/simple_animal/hostile/bear/butter/CheckParts(list/parts) //Borrowed code from Cak, allows the brain used to actually control the bear.
/mob/living/simple_animal/hostile/bear/butter/AttackingTarget() //Makes some attacks by the butter bear slip those who dare cross its path.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\bees.dm. ----------------------
/mob/living/simple_animal/hostile/poison/bees
/mob/living/simple_animal/hostile/poison/bees/Initialize(mapload)
/mob/living/simple_animal/hostile/poison/bees/ComponentInitialize()
/mob/living/simple_animal/hostile/poison/bees/Destroy()
/mob/living/simple_animal/hostile/poison/bees/death(gibbed)
/mob/living/simple_animal/hostile/poison/bees/examine(mob/user)
/mob/living/simple_animal/hostile/poison/bees/proc/generate_bee_visuals()
/mob/living/simple_animal/hostile/poison/bees/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/poison/bees/Found(atom/A)
/mob/living/simple_animal/hostile/poison/bees/AttackingTarget()
/mob/living/simple_animal/hostile/poison/bees/proc/assign_reagent(datum/reagent/R)
/mob/living/simple_animal/hostile/poison/bees/proc/pollinate(obj/machinery/hydroponics/Hydro)
/mob/living/simple_animal/hostile/poison/bees/handle_automated_action()
/mob/living/simple_animal/hostile/poison/bees/toxin/Initialize(mapload)
/mob/living/simple_animal/hostile/poison/bees/queen
/mob/living/simple_animal/hostile/poison/bees/queen/Found(atom/A)
/mob/living/simple_animal/hostile/poison/bees/queen/AttackingTarget()
/mob/living/simple_animal/hostile/poison/bees/queen/pollinate()
/mob/living/simple_animal/hostile/poison/bees/proc/reagent_incompatible(mob/living/simple_animal/hostile/poison/bees/B)
/mob/living/simple_animal/hostile/poison/bees/consider_wakeup()
/mob/living/simple_animal/hostile/poison/bees/short
/mob/living/simple_animal/hostile/poison/bees/short/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\bread.dm. ----------------------
/mob/living/simple_animal/hostile/bread
/mob/living/simple_animal/bread/hostile/Initialize(mapload)
/mob/living/simple_animal/hostile/bread/attack_ghost(mob/user)
/mob/living/simple_animal/hostile/bread/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/bread/start_pulling()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\carp.dm. ----------------------
/mob/living/simple_animal/hostile/carp
/mob/living/simple_animal/hostile/carp/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/carp/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/carp/AttackingTarget()
/mob/living/simple_animal/hostile/carp/holocarp
/mob/living/simple_animal/hostile/carp/megacarp
/mob/living/simple_animal/hostile/carp/megacarp/Initialize(mapload)
/mob/living/simple_animal/hostile/carp/cayenne
/mob/living/simple_animal/hostile/carp/cayenne/Initialize(mapload)
/mob/living/simple_animal/hostile/carp/cayenne/IsAdvancedToolUser()
/mob/living/simple_animal/hostile/carp/cayenne/death(gibbed)
/mob/living/simple_animal/hostile/carp/cayenne/Destroy(force)
/mob/living/simple_animal/hostile/carp/cayenne/examine(mob/user)
/mob/living/simple_animal/hostile/carp/cayenne/AttackingTarget(atom/attacked_target)
/mob/living/simple_animal/hostile/carp/cayenne/Exited(atom/movable/gone, direction)
/mob/living/simple_animal/hostile/carp/cayenne/update_overlays()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\cat_butcher.dm. ----------------------
/mob/living/simple_animal/hostile/cat_butcherer
/mob/living/simple_animal/hostile/cat_butcherer/Life()
/mob/living/simple_animal/hostile/cat_butcherer/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/cat_butcherer/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\dark_wizard.dm. ----------------------
/mob/living/simple_animal/hostile/dark_wizard
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\eyeballs.dm. ----------------------
/mob/living/simple_animal/hostile/carp/eyeball
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\faithless.dm. ----------------------
/mob/living/simple_animal/hostile/faithless
/mob/living/simple_animal/hostile/faithless/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\floor_cluwne.dm. ----------------------
/mob/living/simple_animal/hostile/floor_cluwne
/mob/living/simple_animal/hostile/floor_cluwne/Initialize(mapload)
/mob/living/simple_animal/hostile/floor_cluwne/med_hud_set_health()
/mob/living/simple_animal/hostile/floor_cluwne/med_hud_set_status()
/mob/living/simple_animal/hostile/floor_cluwne/Destroy()
/mob/living/simple_animal/hostile/floor_cluwne/attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/floor_cluwne/CanPass(atom/A, turf/target)
/mob/living/simple_animal/hostile/floor_cluwne/Life()
/mob/living/simple_animal/hostile/floor_cluwne/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/floor_cluwne/FindTarget()
/mob/living/simple_animal/hostile/floor_cluwne/CanAttack(atom/the_target)//you will not escape
/mob/living/simple_animal/hostile/floor_cluwne/AttackingTarget()
/mob/living/simple_animal/hostile/floor_cluwne/LoseTarget()
/mob/living/simple_animal/hostile/floor_cluwne/electrocute_act(shock_damage, source, siemens_coeff = 1, flags = NONE)//prevents runtimes with machine fuckery
/mob/living/simple_animal/hostile/floor_cluwne/proc/Found_You()
/mob/living/simple_animal/hostile/floor_cluwne/proc/Acquire_Victim(specific)
/mob/living/simple_animal/hostile/floor_cluwne/proc/Manifest()//handles disappearing and appearance anim
/mob/living/simple_animal/hostile/floor_cluwne/proc/Appear()//handled in a seperate proc so floor cluwne doesn't appear before the animation finishes
/mob/living/simple_animal/hostile/floor_cluwne/proc/Reset_View(screens, colour, mob/living/carbon/human/H)
/mob/living/simple_animal/hostile/floor_cluwne/proc/On_Stage()
/mob/living/simple_animal/hostile/floor_cluwne/proc/Grab(mob/living/carbon/human/H)
/mob/living/simple_animal/hostile/floor_cluwne/proc/Kill(mob/living/carbon/human/H)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\giant_spider.dm. ----------------------
/mob/living/simple_animal/hostile/poison
/mob/living/simple_animal/hostile/poison/AttackingTarget()
/mob/living/simple_animal/hostile/poison/giant_spider
/mob/living/simple_animal/hostile/poison/giant_spider/Initialize(mapload)
/mob/living/simple_animal/hostile/poison/giant_spider/Destroy()
/mob/living/simple_animal/hostile/poison/giant_spider/Topic(href, href_list)
/mob/living/simple_animal/hostile/poison/giant_spider/Login()
/mob/living/simple_animal/hostile/poison/giant_spider/attack_ghost(mob/user)
/mob/living/simple_animal/hostile/poison/giant_spider/proc/humanize_spider(mob/user)
/mob/living/simple_animal/hostile/poison/giant_spider/nurse
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/Initialize(mapload)
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/Destroy()
/mob/living/simple_animal/hostile/poison/giant_spider/hunter
/mob/living/simple_animal/hostile/poison/giant_spider/hunter/viper
/mob/living/simple_animal/hostile/poison/giant_spider/tarantula
/mob/living/simple_animal/hostile/poison/giant_spider/tarantula/Moved(atom/oldloc, dir)
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/midwife
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/midwife/Initialize(mapload)
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/midwife/Destroy()
/mob/living/simple_animal/hostile/poison/giant_spider/ice //spiders dont usually like tempatures of 140 kelvin who knew
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/ice
/mob/living/simple_animal/hostile/poison/giant_spider/hunter/ice
/mob/living/simple_animal/hostile/poison/giant_spider/handle_automated_action()
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/proc/GiveUp(C)
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/handle_automated_action()
/mob/living/simple_animal/hostile/poison/giant_spider/nurse/proc/cocoon()
/mob/living/simple_animal/hostile/poison/giant_spider/Login()
/mob/living/simple_animal/hostile/poison/giant_spider/Destroy()
/mob/living/simple_animal/hostile/poison/giant_spider/handle_temperature_damage()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\goose.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/goose
/mob/living/simple_animal/hostile/retaliate/goose/handle_automated_movement()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\headcrab.dm. ----------------------
/mob/living/simple_animal/hostile/headcrab
/mob/living/simple_animal/hostile/headcrab/Initialize(mapload)
/mob/living/simple_animal/hostile/headcrab/proc/Infect(mob/living/carbon/victim)
/mob/living/simple_animal/hostile/headcrab/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\hivebot.dm. ----------------------
/mob/living/simple_animal/hostile/hivebot
/mob/living/simple_animal/hostile/hivebot/Initialize(mapload)
/mob/living/simple_animal/hostile/hivebot/range
/mob/living/simple_animal/hostile/hivebot/rapid
/mob/living/simple_animal/hostile/hivebot/engineering
/mob/living/simple_animal/hostile/hivebot/strong
/mob/living/simple_animal/hostile/hivebot/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\hostile.dm. ----------------------
/mob/living/simple_animal/hostile
/mob/living/simple_animal/hostile/Initialize(mapload)
/mob/living/simple_animal/hostile/Destroy()
/mob/living/simple_animal/hostile/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/handle_automated_action()
/mob/living/simple_animal/hostile/handle_automated_movement()
/mob/living/simple_animal/hostile/proc/sidestep()
/mob/living/simple_animal/hostile/attacked_by(obj/item/I, mob/living/user, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/simple_animal/hostile/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/proc/ListTargets()//Step 1, find out what we can see
/mob/living/simple_animal/hostile/proc/FindTarget(var/list/possible_targets, var/HasTargetsList = 0)//Step 2, filter down possible targets to things we actually care about
/mob/living/simple_animal/hostile/proc/PossibleThreats()
/mob/living/simple_animal/hostile/proc/Found(atom/A)//This is here as a potential override to pick a specific target if available
/mob/living/simple_animal/hostile/proc/PickTarget(list/Targets)//Step 3, pick amongst the possible, attackable targets
/mob/living/simple_animal/hostile/CanAttack(atom/the_target)//Can we actually attack a possible target?
/mob/living/simple_animal/hostile/proc/GiveTarget(new_target)//Step 4, give us our selected target
/mob/living/simple_animal/hostile/proc/MeleeAction(patience = TRUE)
/mob/living/simple_animal/hostile/proc/CheckAndAttack()
/mob/living/simple_animal/hostile/proc/MoveToTarget(list/possible_targets)//Step 5, handle movement between us and our target
/mob/living/simple_animal/hostile/proc/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/proc/AttackingTarget()
/mob/living/simple_animal/hostile/proc/Aggro()
/mob/living/simple_animal/hostile/proc/LoseAggro()
/mob/living/simple_animal/hostile/proc/LoseTarget()
/mob/living/simple_animal/hostile/death(gibbed)
/mob/living/simple_animal/hostile/proc/summon_backup(distance, exact_faction_match)
/mob/living/simple_animal/hostile/proc/CheckFriendlyFire(atom/A)
/mob/living/simple_animal/hostile/proc/OpenFire(atom/A)
/mob/living/simple_animal/hostile/proc/Shoot(atom/targeted_atom)
/mob/living/simple_animal/hostile/proc/CanSmashTurfs(turf/T)
/mob/living/simple_animal/hostile/Move(atom/newloc, dir , step_x , step_y)
/mob/living/simple_animal/hostile/proc/dodge(moving_to,move_direction)
/mob/living/simple_animal/hostile/proc/DestroyObjectsInDirection(direction)
/mob/living/simple_animal/hostile/proc/DestroyPathToTarget()
/mob/living/simple_animal/hostile/proc/DestroySurroundings() // for use with megafauna destroying everything around them
/mob/living/simple_animal/hostile/proc/EscapeConfinement()
/mob/living/simple_animal/hostile/proc/FindHidden()
/mob/living/simple_animal/hostile/RangedAttack(atom/A, params) //Player firing
/mob/living/simple_animal/hostile/proc/AICanContinue(var/list/possible_targets)
/mob/living/simple_animal/hostile/proc/AIShouldSleep(var/list/possible_targets)
/mob/living/simple_animal/hostile/proc/GainPatience()
/mob/living/simple_animal/hostile/proc/LosePatience()
/mob/living/simple_animal/hostile/proc/LoseSearchObjects()
/mob/living/simple_animal/hostile/proc/RegainSearchObjects(value)
/mob/living/simple_animal/hostile/consider_wakeup()
/mob/living/simple_animal/hostile/proc/ListTargetsLazy(var/_Z)//Step 1, find out what we can see
/mob/living/simple_animal/hostile/proc/enter_charge(var/atom/target)
/mob/living/simple_animal/hostile/proc/handle_charge_target(var/atom/target)
/mob/living/simple_animal/hostile/proc/charge_end()
/mob/living/simple_animal/hostile/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\illusion.dm. ----------------------
/mob/living/simple_animal/hostile/illusion
/mob/living/simple_animal/hostile/illusion/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/illusion/proc/Copy_Parent(mob/living/original, life = 50, hp = 100, damage = 0, replicate = 0 )
/mob/living/simple_animal/hostile/illusion/examine(mob/user)
/mob/living/simple_animal/hostile/illusion/AttackingTarget()
/mob/living/simple_animal/hostile/illusion/escape
/mob/living/simple_animal/hostile/illusion/escape/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\killertomato.dm. ----------------------
/mob/living/simple_animal/hostile/killertomato
/mob/living/simple_animal/hostile/killertomato/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mecha_pilot.dm. ----------------------
/mob/living/simple_animal/hostile/syndicate/mecha_pilot
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/no_mech
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/no_mech/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/nanotrasen //nanotrasen are syndies! no it's just a weird path.
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/no_mech/nanotrasen
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/proc/enter_mecha(obj/vehicle/sealed/mecha/M)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/proc/exit_mecha(obj/vehicle/sealed/mecha/M)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/proc/is_valid_mecha(obj/vehicle/sealed/mecha/M)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/proc/mecha_face_target(atom/A)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/proc/mecha_reload()
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/proc/get_mecha_equip_by_flag(flag = MECHA_RANGED)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/OpenFire(atom/A)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/AttackingTarget()
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/handle_automated_action()
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/death(gibbed)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/gib()
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/EscapeConfinement()
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/Move(NewLoc,Dir=0,step_x=0,step_y=0)
/mob/living/simple_animal/hostile/syndicate/mecha_pilot/Goto(target, delay, minimum_distance)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mimic.dm. ----------------------
/mob/living/simple_animal/hostile/mimic
/mob/living/simple_animal/hostile/mimic/crate
/mob/living/simple_animal/hostile/mimic/crate/Initialize(mapload)
/mob/living/simple_animal/hostile/mimic/crate/DestroyPathToTarget()
/mob/living/simple_animal/hostile/mimic/crate/ListTargets()
/mob/living/simple_animal/hostile/mimic/crate/FindTarget()
/mob/living/simple_animal/hostile/mimic/crate/AttackingTarget()
/mob/living/simple_animal/hostile/mimic/crate/proc/trigger()
/mob/living/simple_animal/hostile/mimic/crate/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/mimic/crate/LoseTarget()
/mob/living/simple_animal/hostile/mimic/crate/death()
/mob/living/simple_animal/hostile/mimic/copy
/mob/living/simple_animal/hostile/mimic/copy/Initialize(mapload, obj/copy, mob/living/creator, destroy_original = 0, no_googlies = FALSE)
/mob/living/simple_animal/hostile/mimic/copy/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/mimic/copy/death()
/mob/living/simple_animal/hostile/mimic/copy/ListTargets()
/mob/living/simple_animal/hostile/mimic/copy/proc/ChangeOwner(mob/owner)
/mob/living/simple_animal/hostile/mimic/copy/proc/CheckObject(obj/O)
/mob/living/simple_animal/hostile/mimic/copy/proc/CopyObject(obj/O, mob/living/user, destroy_original = 0)
/mob/living/simple_animal/hostile/mimic/copy/DestroySurroundings()
/mob/living/simple_animal/hostile/mimic/copy/AttackingTarget()
/mob/living/simple_animal/hostile/mimic/copy/machine
/mob/living/simple_animal/hostile/mimic/copy/machine/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/mimic/copy/ranged
/mob/living/simple_animal/hostile/mimic/copy/ranged/CopyObject(obj/O, mob/living/creator, destroy_original = 0)
/mob/living/simple_animal/hostile/mimic/copy/ranged/OpenFire(the_target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mushroom.dm. ----------------------
/mob/living/simple_animal/hostile/mushroom
/mob/living/simple_animal/hostile/mushroom/Initialize(mapload)
/mob/living/simple_animal/hostile/mushroom/examine(mob/user)
/mob/living/simple_animal/hostile/mushroom/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/mushroom/Initialize(mapload)//Makes every shroom a little unique
/mob/living/simple_animal/hostile/mushroom/CanAttack(atom/the_target) // Mushroom-specific version of CanAttack to handle stupid attack_same = 2 crap so we don't have to do it for literally every single simple_animal/hostile because this shit never gets spawned
/mob/living/simple_animal/hostile/mushroom/adjustHealth(amount, updating_health = TRUE, forced = FALSE) //Possibility to flee from a fight just to make it more visually interesting
/mob/living/simple_animal/hostile/mushroom/proc/stop_retreat()
/mob/living/simple_animal/hostile/mushroom/attack_animal(mob/living/L)
/mob/living/simple_animal/hostile/mushroom/revive(full_heal = 0, admin_revive = 0)
/mob/living/simple_animal/hostile/mushroom/death(gibbed)
/mob/living/simple_animal/hostile/mushroom/proc/UpdateMushroomCap()
/mob/living/simple_animal/hostile/mushroom/proc/Recover()
/mob/living/simple_animal/hostile/mushroom/proc/recovery_recharge()
/mob/living/simple_animal/hostile/mushroom/proc/LevelUp(level_gain)
/mob/living/simple_animal/hostile/mushroom/proc/Bruise()
/mob/living/simple_animal/hostile/mushroom/attackby(obj/item/I, mob/user, params)
/mob/living/simple_animal/hostile/mushroom/on_attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/mushroom/hitby(atom/movable/AM, skipcatch = FALSE, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/hostile/mushroom/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/mushroom/harvest()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\nanotrasen.dm. ----------------------
/mob/living/simple_animal/hostile/nanotrasen
/mob/living/simple_animal/hostile/nanotrasen/Aggro()
/mob/living/simple_animal/hostile/nanotrasen/ranged
/mob/living/simple_animal/hostile/nanotrasen/ranged/smg
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\netherworld.dm. ----------------------
/mob/living/simple_animal/hostile/netherworld
/mob/living/simple_animal/hostile/netherworld/migo
/mob/living/simple_animal/hostile/netherworld/migo/Initialize(mapload)
/mob/living/simple_animal/hostile/netherworld/migo/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/hostile/netherworld/migo/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/netherworld/blankbody
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\pirate.dm. ----------------------
/mob/living/simple_animal/hostile/pirate
/mob/living/simple_animal/hostile/pirate/melee
/mob/living/simple_animal/hostile/pirate/melee/space
/mob/living/simple_animal/hostile/pirate/melee/Initialize(mapload)
/mob/living/simple_animal/hostile/pirate/melee/Destroy()
/mob/living/simple_animal/hostile/pirate/melee/Initialize(mapload)
/mob/living/simple_animal/hostile/pirate/ranged
/mob/living/simple_animal/hostile/pirate/ranged/space
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\plaguerat.dm. ----------------------
/mob/living/simple_animal/hostile/plaguerat
/mob/living/simple_animal/hostile/plaguerat/Initialize(mapload)
/mob/living/simple_animal/hostile/plaguerat/Destroy()
/mob/living/simple_animal/hostile/plaguerat/Life(seconds, times_fired)
/mob/living/simple_animal/hostile/plaguerat/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/plaguerat/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/plaguerat/proc/be_fruitful()
/mob/living/simple_animal/hostile/plaguerat/proc/exit_vents()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\regalrat.dm. ----------------------
/mob/living/simple_animal/hostile/regalrat
/mob/living/simple_animal/hostile/regalrat/Initialize(mapload)
/mob/living/simple_animal/hostile/regalrat/proc/poll_for_player()
/mob/living/simple_animal/hostile/regalrat/handle_automated_action()
/mob/living/simple_animal/hostile/regalrat/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/regalrat/examine(mob/user)
/mob/living/simple_animal/hostile/rat
/mob/living/simple_animal/hostile/rat/Initialize(mapload)
/mob/living/simple_animal/hostile/rat/Destroy()
/mob/living/simple_animal/hostile/rat/examine(mob/user)
/mob/living/simple_animal/hostile/rat/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/rat/handle_automated_action()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\russian.dm. ----------------------
/mob/living/simple_animal/hostile/russian
/mob/living/simple_animal/hostile/russian/ranged
/mob/living/simple_animal/hostile/russian/ranged/mosin
/mob/living/simple_animal/hostile/russian/ranged/trooper
/mob/living/simple_animal/hostile/russian/ranged/officer
/mob/living/simple_animal/hostile/russian/ranged/officer/Aggro()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\sharks.dm. ----------------------
/mob/living/simple_animal/hostile/shark
/mob/living/simple_animal/hostile/shark/Process_Spacemove(var/movement_dir = 0)
/mob/living/simple_animal/hostile/shark/FindTarget()
/mob/living/simple_animal/hostile/shark/AttackingTarget()
/mob/living/simple_animal/hostile/shark/laser
/mob/living/simple_animal/hostile/shark/kawaii
/mob/living/simple_animal/hostile/shark/kawaii/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\skeleton.dm. ----------------------
/mob/living/simple_animal/hostile/skeleton
/mob/living/simple_animal/hostile/skeleton/eskimo
/mob/living/simple_animal/hostile/skeleton/templar
/mob/living/simple_animal/hostile/skeleton/ice
/mob/living/simple_animal/hostile/skeleton/plasmaminer
/mob/living/simple_animal/hostile/skeleton/plasmaminer/jackhammer
/mob/living/simple_animal/hostile/skeleton/plasmaminer/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\space_dragon.dm. ----------------------
/mob/living/simple_animal/hostile/space_dragon
/mob/living/simple_animal/hostile/space_dragon/Initialize(mapload)
/mob/living/simple_animal/hostile/space_dragon/Login()
/mob/living/simple_animal/hostile/space_dragon/Life()
/mob/living/simple_animal/hostile/space_dragon/AttackingTarget()
/mob/living/simple_animal/hostile/space_dragon/AltClickOn(atom/A)
/mob/living/simple_animal/hostile/space_dragon/Move()
/mob/living/simple_animal/hostile/space_dragon/OpenFire()
/mob/living/simple_animal/hostile/space_dragon/death(gibbed)
/mob/living/simple_animal/hostile/space_dragon/revive(full_heal, admin_revive)
/mob/living/simple_animal/hostile/space_dragon/wabbajack_act(mob/living/new_mob)
/mob/living/simple_animal/hostile/space_dragon/proc/dragon_name()
/mob/living/simple_animal/hostile/space_dragon/proc/color_selection()
/mob/living/simple_animal/hostile/space_dragon/proc/add_dragon_overlay()
/mob/living/simple_animal/hostile/space_dragon/proc/line_target(offset, range, atom/at = target)
/mob/living/simple_animal/hostile/space_dragon/proc/fire_stream(atom/at = target)
/mob/living/simple_animal/hostile/space_dragon/proc/dragon_fire_line(turf/T)
/mob/living/simple_animal/hostile/space_dragon/proc/eat(atom/movable/A)
/mob/living/simple_animal/hostile/space_dragon/proc/empty_contents()
/mob/living/simple_animal/hostile/space_dragon/proc/reset_status()
/mob/living/simple_animal/hostile/space_dragon/proc/rift_empower(is_permanent)
/mob/living/simple_animal/hostile/space_dragon/proc/permanant_empower()
/mob/living/simple_animal/hostile/space_dragon/proc/rift_depower()
/mob/living/simple_animal/hostile/space_dragon/proc/destroy_rifts()
/mob/living/simple_animal/hostile/space_dragon/proc/useGust(timer)
/mob/living/simple_animal/hostile/space_dragon/proc/victory()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\statue.dm. ----------------------
/mob/living/simple_animal/hostile/statue
/mob/living/simple_animal/hostile/statue/Initialize(mapload, var/mob/living/creator)
/mob/living/simple_animal/hostile/statue/med_hud_set_health()
/mob/living/simple_animal/hostile/statue/med_hud_set_status()
/mob/living/simple_animal/hostile/statue/Move(turf/NewLoc)
/mob/living/simple_animal/hostile/statue/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/statue/AttackingTarget()
/mob/living/simple_animal/hostile/statue/DestroyPathToTarget()
/mob/living/simple_animal/hostile/statue/face_atom()
/mob/living/simple_animal/hostile/statue/proc/can_be_seen(turf/destination)
/mob/living/simple_animal/hostile/statue/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/hostile/statue/gib()
/mob/living/simple_animal/hostile/statue/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/statue/ListTargets()
/mob/living/simple_animal/hostile/statue/sentience_act()
/mob/living/simple_animal/hostile/statue/restrained(ignore_grab)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\stickman.dm. ----------------------
/mob/living/simple_animal/hostile/stickman
/mob/living/simple_animal/hostile/stickman/ranged
/mob/living/simple_animal/hostile/stickman/dog
/mob/living/simple_animal/hostile/stickman/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\syndicate.dm. ----------------------
/mob/living/simple_animal/hostile/syndicate
/mob/living/simple_animal/hostile/syndicate/space
/mob/living/simple_animal/hostile/syndicate/space/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/space/stormtrooper
/mob/living/simple_animal/hostile/syndicate/melee
/mob/living/simple_animal/hostile/syndicate/melee/space
/mob/living/simple_animal/hostile/syndicate/melee/space/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/melee/space/stormtrooper
/mob/living/simple_animal/hostile/syndicate/melee/sword
/mob/living/simple_animal/hostile/syndicate/melee/sword/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/melee/sword/Destroy()
/mob/living/simple_animal/hostile/syndicate/melee/sword/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/hostile/syndicate/melee/sword/space
/mob/living/simple_animal/hostile/syndicate/melee/sword/space/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/melee/sword/space/Destroy()
/mob/living/simple_animal/hostile/syndicate/melee/sword/space/stormtrooper
/mob/living/simple_animal/hostile/syndicate/ranged
/mob/living/simple_animal/hostile/syndicate/ranged/infiltrator //shuttle loan event
/mob/living/simple_animal/hostile/syndicate/ranged/space
/mob/living/simple_animal/hostile/syndicate/ranged/space/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/ranged/space/stormtrooper
/mob/living/simple_animal/hostile/syndicate/ranged/smg
/mob/living/simple_animal/hostile/syndicate/ranged/smg/pilot //caravan ambush ruin
/mob/living/simple_animal/hostile/syndicate/ranged/smg/space
/mob/living/simple_animal/hostile/syndicate/ranged/smg/space/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/ranged/smg/space/stormtrooper
/mob/living/simple_animal/hostile/syndicate/ranged/shotgun
/mob/living/simple_animal/hostile/syndicate/ranged/shotgun/space
/mob/living/simple_animal/hostile/syndicate/ranged/shotgun/space/Initialize(mapload)
/mob/living/simple_animal/hostile/syndicate/ranged/shotgun/space/stormtrooper
/mob/living/simple_animal/hostile/syndicate/civilian
/mob/living/simple_animal/hostile/syndicate/civilian/Aggro()
/mob/living/simple_animal/hostile/viscerator
/mob/living/simple_animal/hostile/viscerator/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\tree.dm. ----------------------
/mob/living/simple_animal/hostile/tree
/mob/living/simple_animal/hostile/tree/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/tree/AttackingTarget()
/mob/living/simple_animal/hostile/tree/festivus
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\venus_human_trap.dm. ----------------------
/mob/living/simple_animal/hostile/venus_human_trap
/mob/living/simple_animal/hostile/venus_human_trap/ghost_playable
/mob/living/simple_animal/hostile/venus_human_trap/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/venus_human_trap/AttackingTarget()
/mob/living/simple_animal/hostile/venus_human_trap/OpenFire(atom/the_target)
/mob/living/simple_animal/hostile/venus_human_trap/Login()
/mob/living/simple_animal/hostile/venus_human_trap/attack_ghost(mob/user)
/mob/living/simple_animal/hostile/venus_human_trap/proc/humanize_plant(mob/user)
/mob/living/simple_animal/hostile/venus_human_trap/proc/pull_vines()
/mob/living/simple_animal/hostile/venus_human_trap/proc/remove_vine(datum/beam/vine, force)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\wizard.dm. ----------------------
/mob/living/simple_animal/hostile/wizard
/mob/living/simple_animal/hostile/wizard/Initialize(mapload)
/mob/living/simple_animal/hostile/wizard/Destroy()
/mob/living/simple_animal/hostile/wizard/handle_automated_action()
/mob/living/simple_animal/hostile/wizard/proc/AutomatedCast()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\wumborian_fugu.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/fugu
/mob/living/simple_animal/hostile/asteroid/fugu/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/fugu/Destroy()
/mob/living/simple_animal/hostile/asteroid/fugu/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/fugu/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/asteroid/fugu/Aggro()
/mob/living/simple_animal/hostile/asteroid/fugu/proc/Deflate()
/mob/living/simple_animal/hostile/asteroid/fugu/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\zombie.dm. ----------------------
/mob/living/simple_animal/hostile/zombie
/mob/living/simple_animal/hostile/zombie/Initialize(mapload)
/mob/living/simple_animal/hostile/zombie/proc/setup_visuals()
/mob/living/simple_animal/hostile/zombie/AttackingTarget()
/mob/living/simple_animal/hostile/zombie/drop_loot()
/mob/living/simple_animal/hostile/unemployedclone
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\bosses\boss.dm. ----------------------
/mob/living/simple_animal/hostile/boss
/mob/living/simple_animal/hostile/boss/Initialize(mapload)
/mob/living/simple_animal/hostile/boss/Destroy()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\bosses\paperwizard.dm. ----------------------
/mob/living/simple_animal/hostile/boss/paper_wizard
/mob/living/simple_animal/hostile/boss/paper_wizard/copy
/mob/living/simple_animal/hostile/boss/paper_wizard/copy/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/boss/paper_wizard/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/boss/paper_wizard/copy/examine(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\gorilla\gorilla.dm. ----------------------
/mob/living/simple_animal/hostile/gorilla
/mob/living/simple_animal/hostile/gorilla/proc/target_bodyparts(atom/the_target)
/mob/living/simple_animal/hostile/gorilla/AttackingTarget()
/mob/living/simple_animal/hostile/gorilla/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/gorilla/CanSmashTurfs(turf/T)
/mob/living/simple_animal/hostile/gorilla/gib(no_brain)
/mob/living/simple_animal/hostile/gorilla/handle_automated_speech(override)
/mob/living/simple_animal/hostile/gorilla/can_use_guns(obj/item/G)
/mob/living/simple_animal/hostile/gorilla/proc/oogaooga()
/mob/living/simple_animal/hostile/gorilla/familiar
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\gorilla\visuals_icons.dm. ----------------------
/mob/living/simple_animal/hostile/gorilla/proc/apply_overlay(cache_index)
/mob/living/simple_animal/hostile/gorilla/proc/remove_overlay(cache_index)
/mob/living/simple_animal/hostile/gorilla/update_inv_hands()
/mob/living/simple_animal/hostile/gorilla/regenerate_icons()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\jungle\leaper.dm. ----------------------
/mob/living/simple_animal/hostile/jungle/leaper
/mob/living/simple_animal/hostile/jungle/leaper/Initialize(mapload)
/mob/living/simple_animal/hostile/jungle/leaper/CtrlClickOn(atom/A)
/mob/living/simple_animal/hostile/jungle/leaper/AttackingTarget()
/mob/living/simple_animal/hostile/jungle/leaper/handle_automated_action()
/mob/living/simple_animal/hostile/jungle/leaper/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/jungle/leaper/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/jungle/leaper/OpenFire()
/mob/living/simple_animal/hostile/jungle/leaper/proc/Hop(player_hop = FALSE)
/mob/living/simple_animal/hostile/jungle/leaper/proc/FinishHop()
/mob/living/simple_animal/hostile/jungle/leaper/proc/BellyFlop()
/mob/living/simple_animal/hostile/jungle/leaper/proc/BellyFlopHop(turf/T)
/mob/living/simple_animal/hostile/jungle/leaper/proc/Crush()
/mob/living/simple_animal/hostile/jungle/leaper/Goto()
/mob/living/simple_animal/hostile/jungle/leaper/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/hostile/jungle/leaper/update_icons()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\jungle\mega_arachnid.dm. ----------------------
/mob/living/simple_animal/hostile/jungle/mega_arachnid
/mob/living/simple_animal/hostile/jungle/mega_arachnid/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/jungle/mega_arachnid/Aggro()
/mob/living/simple_animal/hostile/jungle/mega_arachnid/LoseAggro()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\jungle\mook.dm. ----------------------
/mob/living/simple_animal/hostile/jungle/mook
/mob/living/simple_animal/hostile/jungle/mook/CanAllowThrough(atom/movable/O)
/mob/living/simple_animal/hostile/jungle/mook/death()
/mob/living/simple_animal/hostile/jungle/mook/AttackingTarget()
/mob/living/simple_animal/hostile/jungle/mook/Goto()
/mob/living/simple_animal/hostile/jungle/mook/Move()
/mob/living/simple_animal/hostile/jungle/mook/proc/WarmupAttack(forced_slash_combo = FALSE)
/mob/living/simple_animal/hostile/jungle/mook/proc/SlashCombo()
/mob/living/simple_animal/hostile/jungle/mook/proc/SlashAttack()
/mob/living/simple_animal/hostile/jungle/mook/proc/LeapAttack()
/mob/living/simple_animal/hostile/jungle/mook/proc/AttackRecovery()
/mob/living/simple_animal/hostile/jungle/mook/proc/ResetNeutral()
/mob/living/simple_animal/hostile/jungle/mook/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/hostile/jungle/mook/handle_automated_action()
/mob/living/simple_animal/hostile/jungle/mook/OpenFire()
/mob/living/simple_animal/hostile/jungle/mook/update_icons()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\jungle\seedling.dm. ----------------------
/mob/living/simple_animal/hostile/jungle/seedling
/mob/living/simple_animal/hostile/jungle/seedling/Goto()
/mob/living/simple_animal/hostile/jungle/seedling/AttackingTarget()
/mob/living/simple_animal/hostile/jungle/seedling/OpenFire()
/mob/living/simple_animal/hostile/jungle/seedling/proc/WarmupAttack()
/mob/living/simple_animal/hostile/jungle/seedling/proc/SolarBeamStartup(mob/living/living_target)//It's more like requiem than final spark
/mob/living/simple_animal/hostile/jungle/seedling/proc/Beamu(mob/living/living_target, beam_id = 0)
/mob/living/simple_animal/hostile/jungle/seedling/proc/Volley()
/mob/living/simple_animal/hostile/jungle/seedling/proc/InaccurateShot()
/mob/living/simple_animal/hostile/jungle/seedling/proc/AttackRecovery()
/mob/living/simple_animal/hostile/jungle/seedling/proc/ResetNeutral()
/mob/living/simple_animal/hostile/jungle/seedling/adjustHealth()
/mob/living/simple_animal/hostile/jungle/seedling/update_icons()
/mob/living/simple_animal/hostile/jungle/seedling/GiveTarget()
/mob/living/simple_animal/hostile/jungle/seedling/LoseTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\jungle\_jungle_mobs.dm. ----------------------
/mob/living/simple_animal/hostile/jungle
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\blood_drunk_miner.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/Destroy()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/OpenFire()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/death()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/Move(atom/newloc)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/MeleeAction(patience = TRUE)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/GiveTarget(new_target)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/proc/dash_attack()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/proc/shoot_ka()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/proc/dash(atom/dash_target)
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/proc/transform_weapon()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/guidance
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/hunter/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/doom
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\bubblegum.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/bubblegum
/mob/living/simple_animal/hostile/megafauna/bubblegum/BiologicalLife(seconds, times_fired)
/mob/living/simple_animal/hostile/megafauna/bubblegum/OpenFire()
/mob/living/simple_animal/hostile/megafauna/bubblegum/Initialize()
/mob/living/simple_animal/hostile/megafauna/bubblegum/grant_achievement(medaltype,scoretype)
/mob/living/simple_animal/hostile/megafauna/bubblegum/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
/mob/living/simple_animal/hostile/megafauna/bubblegum/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/bubblegum/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/megafauna/bubblegum/Move()
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/triple_charge()
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/charge()
/mob/living/simple_animal/hostile/megafauna/bubblegum/Bump(atom/A)
/mob/living/simple_animal/hostile/megafauna/bubblegum/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/blood_warp()
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/blood_spray()
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/slaughterlings()
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/slaughter
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/slaughter/CanPass(atom/movable/mover, turf/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\colossus.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/colossus
/mob/living/simple_animal/hostile/megafauna/colossus/devour(mob/living/L)
/mob/living/simple_animal/hostile/megafauna/colossus/OpenFire()
/mob/living/simple_animal/hostile/megafauna/colossus/Initialize()
/mob/living/simple_animal/hostile/megafauna/colossus/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/megafauna/colossus/proc/enrage(mob/living/L)
/mob/living/simple_animal/hostile/megafauna/colossus/proc/alternating_dir_shots()
/mob/living/simple_animal/hostile/megafauna/colossus/proc/double_spiral()
/mob/living/simple_animal/hostile/megafauna/colossus/proc/spiral_shoot(negative = FALSE, counter_start = 8)
/mob/living/simple_animal/hostile/megafauna/colossus/proc/shoot_projectile(turf/marker, set_angle)
/mob/living/simple_animal/hostile/megafauna/colossus/proc/random_shots()
/mob/living/simple_animal/hostile/megafauna/colossus/proc/blast(set_angle)
/mob/living/simple_animal/hostile/megafauna/colossus/proc/dir_shots(list/dirs)
/mob/living/simple_animal/hostile/megafauna/colossus/proc/telegraph()
/mob/living/simple_animal/hostile/lightgeist
/mob/living/simple_animal/hostile/lightgeist/Initialize()
/mob/living/simple_animal/hostile/lightgeist/AttackingTarget()
/mob/living/simple_animal/hostile/lightgeist/ghostize(can_reenter_corpse = TRUE, special = FALSE, penalize = FALSE, voluntary = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\demonic_frost_miner.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/OpenFire()
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/MoveToTarget(list/possible_targets)
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/Move()
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/proc/frost_orbs(added_delay = 10, shoot_times = 8)
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/proc/snowball_machine_gun(shots = 60, spread = 45)
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/proc/ice_shotgun(shots = 5, list/patterns = list(list(-40, -20, 0, 20, 40), list(-30, -10, 10, 30)))
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/proc/check_enraged()
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/death(gibbed, list/force_grant)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\dragon_vore.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/dragon
/mob/living/simple_animal/hostile/megafauna/dragon/Initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\drake.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/dragon
/mob/living/simple_animal/hostile/megafauna/dragon/Initialize()
/mob/living/simple_animal/hostile/megafauna/dragon/ex_act(severity, target)
/mob/living/simple_animal/hostile/megafauna/dragon/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/megafauna/dragon/visible_message(message, self_message, blind_message, vision_distance = DEFAULT_MESSAGE_RANGE, list/ignored_mobs, mob/target, target_message, omni = FALSE, runechat_popup, rune_msg)
/mob/living/simple_animal/hostile/megafauna/dragon/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/dragon/DestroySurroundings()
/mob/living/simple_animal/hostile/megafauna/dragon/Move()
/mob/living/simple_animal/hostile/megafauna/dragon/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/megafauna/dragon/OpenFire()
/mob/living/simple_animal/hostile/megafauna/dragon/proc/fire_rain()
/mob/living/simple_animal/hostile/megafauna/dragon/proc/fire_walls()
/mob/living/simple_animal/hostile/megafauna/dragon/proc/fire_wall(dir)
/mob/living/simple_animal/hostile/megafauna/dragon/proc/triple_swoop()
/mob/living/simple_animal/hostile/megafauna/dragon/proc/swoop_attack(fire_rain, atom/movable/manual_target, swoop_duration = 40)
/mob/living/simple_animal/hostile/megafauna/dragon/AltClickOn(atom/movable/A)
/mob/living/simple_animal/hostile/megafauna/dragon/lesser
/mob/living/simple_animal/hostile/megafauna/dragon/lesser/grant_achievement(medaltype,scoretype)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\hierophant.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/hierophant
/mob/living/simple_animal/hostile/megafauna/hierophant/Initialize()
/mob/living/simple_animal/hostile/megafauna/hierophant/spawn_crusher_loot()
/mob/living/simple_animal/hostile/megafauna/hierophant/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/megafauna/hierophant/death()
/mob/living/simple_animal/hostile/megafauna/hierophant/Destroy()
/mob/living/simple_animal/hostile/megafauna/hierophant/devour(mob/living/L)
/mob/living/simple_animal/hostile/megafauna/hierophant/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/megafauna/hierophant/GiveTarget(new_target)
/mob/living/simple_animal/hostile/megafauna/hierophant/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/megafauna/hierophant/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/hierophant/DestroySurroundings()
/mob/living/simple_animal/hostile/megafauna/hierophant/Move()
/mob/living/simple_animal/hostile/megafauna/hierophant/Moved(oldLoc, movement_dir)
/mob/living/simple_animal/hostile/megafauna/hierophant/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/calculate_rage() //how angry we are overall
/mob/living/simple_animal/hostile/megafauna/hierophant/OpenFire()
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/diagonal_blasts(mob/victim) //fire diagonal cross blasts with a delay
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/cardinal_blasts(mob/victim) //fire cardinal cross blasts with a delay
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/alldir_blasts(mob/victim) //fire alldir cross blasts with a delay
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/blast_wall(turf/T, set_dir) //make a wall of blasts beam_range tiles long
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/arena_trap(mob/victim) //trap a target in an arena
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/arena_squares(turf/T, set_dir) //make a fancy effect extending from the arena target
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/blink(mob/victim) //blink to a target
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/melee_blast(mob/victim) //make a 3x3 blast around a target
/mob/living/simple_animal/hostile/megafauna/hierophant/proc/burst(turf/original, spread_speed = 0.5) //release a wave of blasts
/mob/living/simple_animal/hostile/megafauna/hierophant/AltClickOn(atom/A) //player control handler(don't give this to a player holy fuck)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\legion.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/legion
/mob/living/simple_animal/hostile/megafauna/legion/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/legion/GiveTarget(new_target)
/mob/living/simple_animal/hostile/megafauna/legion/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/megafauna/legion/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/legion/OpenFire(the_target)
/mob/living/simple_animal/hostile/megafauna/legion/proc/create_legion_skull()
/mob/living/simple_animal/hostile/megafauna/legion/proc/charge_target()
/mob/living/simple_animal/hostile/megafauna/legion/proc/throw_thyself()
/mob/living/simple_animal/hostile/megafauna/legion/throw_impact(mob/living/hit_atom, datum/thrownthing/throwingdatum)
/mob/living/simple_animal/hostile/megafauna/legion/proc/create_legion_turrets(minimum = 2, maximum = size * 2)
/mob/living/simple_animal/hostile/megafauna/legion/GiveTarget(new_target)
/mob/living/simple_animal/hostile/megafauna/legion/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/megafauna/legion/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/legion/proc/reset_charge()
/mob/living/simple_animal/hostile/megafauna/legion/death()
/mob/living/simple_animal/hostile/megafauna/legion/proc/Split()
/mob/living/simple_animal/hostile/megafauna/legion/proc/setVarsAfterSplit(var/mob/living/simple_animal/hostile/megafauna/legion/L)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\megafauna.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna
/mob/living/simple_animal/hostile/megafauna/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/Destroy()
/mob/living/simple_animal/hostile/megafauna/Moved()
/mob/living/simple_animal/hostile/megafauna/death(gibbed, list/force_grant)
/mob/living/simple_animal/hostile/megafauna/proc/spawn_crusher_loot()
/mob/living/simple_animal/hostile/megafauna/gib()
/mob/living/simple_animal/hostile/megafauna/dust(just_ash, drop_items, force)
/mob/living/simple_animal/hostile/megafauna/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/proc/devour(mob/living/L)
/mob/living/simple_animal/hostile/megafauna/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/megafauna/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/simple_animal/hostile/megafauna/proc/SetRecoveryTime(buffer_time, ranged_buffer_time)
/mob/living/simple_animal/hostile/megafauna/proc/grant_achievement(medaltype, scoretype, crusher_kill, list/grant_achievement = list())
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\swarmer.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/swarmer_swarm_beacon
/mob/living/simple_animal/hostile/megafauna/swarmer_swarm_beacon/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/swarmer_swarm_beacon/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/megafauna/swarmer_swarm_beacon/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/swarmer/ai
/mob/living/simple_animal/hostile/swarmer/ai/Initialize(mapload)
/mob/living/simple_animal/hostile/swarmer/ai/Destroy()
/mob/living/simple_animal/hostile/swarmer/ai/SwarmerTypeToCreate()
/mob/living/simple_animal/hostile/swarmer/ai/resource/handle_automated_action()
/mob/living/simple_animal/hostile/swarmer/ai/Move(atom/newloc)
/mob/living/simple_animal/hostile/swarmer/ai/proc/StartAction(deci = 0)
/mob/living/simple_animal/hostile/swarmer/ai/proc/EndAction()
/mob/living/simple_animal/hostile/swarmer/ai/resource
/mob/living/simple_animal/hostile/swarmer/ai/resource/CanAttack(atom/the_target)
/mob/living/simple_animal/hostile/swarmer/ai/resource/OpenFire(atom/A)
/mob/living/simple_animal/hostile/swarmer/ai/resource/AttackingTarget()
/mob/living/simple_animal/hostile/swarmer/ai/resource/handle_automated_action()
/mob/living/simple_animal/hostile/swarmer/ai/resource/proc/add_type_to_wanted(typepath)
/mob/living/simple_animal/hostile/swarmer/ai/resource/proc/add_type_to_ignore(typepath)
/mob/living/simple_animal/hostile/swarmer/ai/ranged_combat
/mob/living/simple_animal/hostile/swarmer/ai/ranged_combat/Aggro()
/mob/living/simple_animal/hostile/swarmer/ai/melee_combat
/mob/living/simple_animal/hostile/swarmer/ai/melee_combat/Aggro()
/mob/living/simple_animal/hostile/swarmer/ai/melee_combat/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\megafauna\wendigo.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/wendigo
/mob/living/simple_animal/hostile/megafauna/wendigo/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/wendigo/OpenFire()
/mob/living/simple_animal/hostile/megafauna/wendigo/Move(atom/newloc, direct)
/mob/living/simple_animal/hostile/megafauna/wendigo/Moved(atom/oldloc, direct)
/mob/living/simple_animal/hostile/megafauna/wendigo/proc/ground_slam(range, delay)
/mob/living/simple_animal/hostile/megafauna/wendigo/proc/heavy_stomp()
/mob/living/simple_animal/hostile/megafauna/wendigo/proc/teleport()
/mob/living/simple_animal/hostile/megafauna/wendigo/proc/disorienting_scream()
/mob/living/simple_animal/hostile/megafauna/wendigo/death(gibbed, list/force_grant)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\basilisk.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/basilisk
/mob/living/simple_animal/hostile/asteroid/basilisk/GiveTarget(new_target)
/mob/living/simple_animal/hostile/asteroid/basilisk/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/asteroid/basilisk/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/proc/consume_bait()
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/random/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/magmawing
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/icewing
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/tendril
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\curse_blob.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/curseblob
/mob/living/simple_animal/hostile/asteroid/curseblob/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/curseblob/Destroy()
/mob/living/simple_animal/hostile/asteroid/curseblob/Goto(move_target, delay, minimum_distance)
/mob/living/simple_animal/hostile/asteroid/curseblob/proc/move_loop(move_target, delay)
/mob/living/simple_animal/hostile/asteroid/curseblob/proc/check_for_target()
/mob/living/simple_animal/hostile/asteroid/curseblob/GiveTarget(new_target)
/mob/living/simple_animal/hostile/asteroid/curseblob/LoseTarget() //we can't lose our target!
/mob/living/simple_animal/hostile/asteroid/curseblob/CanAllowThrough(atom/movable/mover, turf/target)
/mob/living/simple_animal/hostile/asteroid/curseblob/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/hostile/asteroid/curseblob/attacked_by(obj/item/I, mob/living/L, attackchain_flags = NONE, damage_multiplier = 1)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\goldgrub.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/goldgrub
/mob/living/simple_animal/hostile/asteroid/goldgrub/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/goldgrub/GiveTarget(new_target)
/mob/living/simple_animal/hostile/asteroid/goldgrub/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/goldgrub/proc/EatOre(atom/targeted_ore)
/mob/living/simple_animal/hostile/asteroid/goldgrub/proc/Burrow()//Begin the chase to kill the goldgrub in time
/mob/living/simple_animal/hostile/asteroid/goldgrub/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/asteroid/goldgrub/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\goliath.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/goliath
/mob/living/simple_animal/hostile/asteroid/goliath/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/goliath/proc/handle_preattack()
/mob/living/simple_animal/hostile/asteroid/goliath/revive(full_heal = 0, admin_revive = 0)
/mob/living/simple_animal/hostile/asteroid/goliath/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/goliath/OpenFire()
/mob/living/simple_animal/hostile/asteroid/goliath/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/asteroid/goliath/Aggro()
/mob/living/simple_animal/hostile/asteroid/goliath/beast
/mob/living/simple_animal/hostile/asteroid/goliath/beast/random/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/goliath/beast/ancient
/mob/living/simple_animal/hostile/asteroid/goliath/beast/ancient/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/goliath/beast/tendril
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\gutlunch.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/gutlunch
/mob/living/simple_animal/hostile/asteroid/gutlunch/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/gutlunch/CanAttack(atom/the_target) // Gutlunch-specific version of CanAttack to handle stupid stat_exclusive = true crap so we don't have to do it for literally every single simple_animal/hostile except the two that spawn in lavaland
/mob/living/simple_animal/hostile/asteroid/gutlunch/Destroy()
/mob/living/simple_animal/hostile/asteroid/gutlunch/regenerate_icons()
/mob/living/simple_animal/hostile/asteroid/gutlunch/attackby(obj/item/O, mob/user, params)
/mob/living/simple_animal/hostile/asteroid/gutlunch/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/gutlunch/gubbuck
/mob/living/simple_animal/hostile/asteroid/gutlunch/gubbuck/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/gutlunch/guthen
/mob/living/simple_animal/hostile/asteroid/gutlunch/guthen/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/gutlunch/guthen/make_babies()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\hivelord.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/hivelord
/mob/living/simple_animal/hostile/asteroid/hivelord/OpenFire(the_target)
/mob/living/simple_animal/hostile/asteroid/hivelord/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/hivelord/spawn_crusher_loot()
/mob/living/simple_animal/hostile/asteroid/hivelord/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/hivelordbrood
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/hivelord/legion
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/random/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/dwarf
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/beegion
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/tendril
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/legion
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/legion/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/legion/proc/infest(mob/living/carbon/human/H)
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/legion/proc/check_infest_type(mob/living/carbon/human/human)
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/advanced
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/legion/advanced
/mob/living/simple_animal/hostile/big_legion
/mob/living/simple_animal/hostile/big_legion/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/snow
/mob/living/simple_animal/hostile/asteroid/hivelord/legion/snow/tendril
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/legion/snow
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\ice_demon.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/ice_demon
/mob/living/simple_animal/hostile/asteroid/ice_demon/OpenFire()
/mob/living/simple_animal/hostile/asteroid/ice_demon/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/ice_demon/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\ice_whelp.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/ice_whelp
/mob/living/simple_animal/hostile/asteroid/ice_whelp/OpenFire()
/mob/living/simple_animal/hostile/asteroid/ice_whelp/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/ice_whelp/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\lobsterosity.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/lobstrosity
/mob/living/simple_animal/hostile/asteroid/lobstrosity/lava
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\mining_mobs.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid
/mob/living/simple_animal/hostile/asteroid/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/Aggro()
/mob/living/simple_animal/hostile/asteroid/LoseAggro()
/mob/living/simple_animal/hostile/asteroid/bullet_act(obj/item/projectile/P)//Reduces damage from most projectiles to curb off-screen kills
/mob/living/simple_animal/hostile/asteroid/hitby(atom/movable/AM, skipcatch = FALSE, hitpush = TRUE, blocked = FALSE, datum/thrownthing/throwingdatum)//No floor tiling them to death, wiseguy
/mob/living/simple_animal/hostile/asteroid/death(gibbed)
/mob/living/simple_animal/hostile/asteroid/proc/spawn_crusher_loot()
/mob/living/simple_animal/hostile/asteroid/handle_temperature_damage()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\polarbear.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/polarbear
/mob/living/simple_animal/hostile/asteroid/polarbear/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/asteroid/polarbear/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/polarbear/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\wolf.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/wolf
/mob/living/simple_animal/hostile/asteroid/wolf/Move(atom/newloc)
/mob/living/simple_animal/hostile/asteroid/wolf/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/asteroid/wolf/BiologicalLife(delta_time, times_fired)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\elite.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite
/mob/living/simple_animal/hostile/asteroid/elite/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/elite/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/elite/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/hostile/asteroid/elite/updatehealth()
/mob/living/simple_animal/hostile/asteroid/elite/update_health_hud()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\goliath_broodmother.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/broodmother
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/proc/tentacle_patch(var/target)
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/proc/spawn_children(var/target)
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/proc/rage()
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/proc/reset_rage()
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/proc/call_children()
/mob/living/simple_animal/hostile/asteroid/elite/broodmother_child
/mob/living/simple_animal/hostile/asteroid/elite/broodmother_child/OpenFire(target)
/mob/living/simple_animal/hostile/asteroid/elite/broodmother_child/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\herald.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/herald
/mob/living/simple_animal/hostile/asteroid/elite/herald/death()
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/become_ghost()
/mob/living/simple_animal/hostile/asteroid/elite/herald/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/hostile/asteroid/elite/herald/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/shoot_projectile(turf/marker, set_angle, var/is_teleshot)
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/herald_trishot(target)
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/herald_circleshot()
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/unenrage()
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/herald_directionalshot()
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/herald_teleshot(target)
/mob/living/simple_animal/hostile/asteroid/elite/herald/proc/herald_mirror()
/mob/living/simple_animal/hostile/asteroid/elite/herald/mirror
/mob/living/simple_animal/hostile/asteroid/elite/herald/mirror/Initialize(mapload)
/mob/living/simple_animal/hostile/asteroid/elite/herald/mirror/Destroy()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\legionnaire.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/legionnaire_charge(target)
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/legionnaire_charge_2(var/move_dir, var/times_ran)
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/head_detach(target)
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/onHeadDeath()
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/regain_head()
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/bonfire_teleport()
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/proc/spew_smoke()
/mob/living/simple_animal/hostile/asteroid/elite/legionnairehead
/mob/living/simple_animal/hostile/asteroid/elite/legionnairehead/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\pandora.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/pandora
/mob/living/simple_animal/hostile/asteroid/elite/pandora/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/pandora/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/singular_shot(target)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/singular_shot_line(var/procsleft, var/angleused, var/turf/T)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/magic_box(target)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/pandora_teleport(target)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/pandora_teleport_2(var/turf/T, var/turf/source)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/pandora_teleport_3(var/turf/T)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/aoe_squares(target)
/mob/living/simple_animal/hostile/asteroid/elite/pandora/proc/aoe_squares_2(var/turf/T, var/ring, var/max_size)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\retaliate\bat.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/bat
/mob/living/simple_animal/hostile/retaliate/bat/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/bat/secbat
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\retaliate\clown.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/clown
/mob/living/simple_animal/hostile/retaliate/clown/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/clown/handle_temperature_damage()
/mob/living/simple_animal/hostile/retaliate/clown/on_attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/retaliate/clown/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/hostile/retaliate/clown/AttackingTarget()
/mob/living/simple_animal/hostile/retaliate/clown/lube
/mob/living/simple_animal/hostile/retaliate/clown/lube/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/clown/banana
/mob/living/simple_animal/hostile/retaliate/clown/honkling
/mob/living/simple_animal/hostile/retaliate/clown/fleshclown
/mob/living/simple_animal/hostile/retaliate/clown/fleshclown/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/clown/longface
/mob/living/simple_animal/hostile/retaliate/clown/clownhulk
/mob/living/simple_animal/hostile/retaliate/clown/clownhulk/chlown
/mob/living/simple_animal/hostile/retaliate/clown/clownhulk/honcmunculus
/mob/living/simple_animal/hostile/retaliate/clown/clownhulk/destroyer
/mob/living/simple_animal/hostile/retaliate/clown/mutant
/mob/living/simple_animal/hostile/retaliate/clown/mutant/blob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\retaliate\frog.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/frog
/mob/living/simple_animal/hostile/retaliate/frog/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/frog/Crossed(AM as mob|obj)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\retaliate\ghost.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/ghost
/mob/living/simple_animal/hostile/retaliate/ghost/Initialize(mapload)
/mob/living/simple_animal/hostile/retaliate/ghost/proc/give_hair()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\retaliate\retaliate.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate
/mob/living/simple_animal/hostile/retaliate/Found(atom/A)
/mob/living/simple_animal/hostile/retaliate/ListTargets()
/mob/living/simple_animal/hostile/retaliate/proc/Retaliate()
/mob/living/simple_animal/hostile/retaliate/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\hostile\retaliate\spaceman.dm. ----------------------
/mob/living/simple_animal/hostile/retaliate/spaceman
/mob/living/simple_animal/hostile/retaliate/nanotrasenpeace //this should be in a different file
/mob/living/simple_animal/hostile/retaliate/nanotrasenpeace/Aggro()
/mob/living/simple_animal/hostile/retaliate/nanotrasenpeace/ranged
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\death.dm. ----------------------
/mob/living/simple_animal/slime/death(gibbed)
/mob/living/simple_animal/slime/gib()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\life.dm. ----------------------
/mob/living/simple_animal/slime
/mob/living/simple_animal/slime/BiologicalLife(delta_time, times_fired)
/mob/living/simple_animal/slime/update_stat()
/mob/living/simple_animal/slime/proc/AIprocess()  // the master AI process
/mob/living/simple_animal/slime/handle_environment(datum/gas_mixture/environment)
/mob/living/simple_animal/slime/proc/adjust_body_temperature(current, loc_temp, boost)
/mob/living/simple_animal/slime/handle_status_effects()
/mob/living/simple_animal/slime/proc/handle_feeding()
/mob/living/simple_animal/slime/proc/handle_nutrition()
/mob/living/simple_animal/slime/adjust_nutrition(change, max = INFINITY, slime_check = FALSE)
/mob/living/simple_animal/slime/proc/handle_targets()
/mob/living/simple_animal/slime/handle_automated_movement()
/mob/living/simple_animal/slime/handle_automated_speech()
/mob/living/simple_animal/slime/proc/handle_mood()
/mob/living/simple_animal/slime/proc/handle_speech()
/mob/living/simple_animal/slime/proc/get_max_nutrition() // Can't go above it
/mob/living/simple_animal/slime/proc/get_grow_nutrition() // Above it we grow, below it we can eat
/mob/living/simple_animal/slime/proc/get_hunger_nutrition() // Below it we will always eat
/mob/living/simple_animal/slime/proc/get_starve_nutrition() // Below it we will eat before everything else
/mob/living/simple_animal/slime/proc/will_hunt(hunger = -1) // Check for being stopped from feeding and chasing
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\powers.dm. ----------------------
/mob/living/simple_animal/slime/verb/Feed()
/mob/living/simple_animal/slime/proc/CanFeedon(mob/living/M, silent = FALSE)
/mob/living/simple_animal/slime/proc/Feedon(mob/living/M)
/mob/living/simple_animal/slime/proc/Feedstop(silent = FALSE, living=1)
/mob/living/simple_animal/slime/verb/Evolve()
/mob/living/simple_animal/slime/verb/Reproduce()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\say.dm. ----------------------
/mob/living/simple_animal/slime/Hear(message, atom/movable/speaker, message_langs, raw_message, radio_freq, spans, message_mode, atom/movable/source)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\slime.dm. ----------------------
/mob/living/simple_animal/slime
/mob/living/simple_animal/slime/Initialize(mapload, new_colour="grey", new_is_adult=FALSE)
/mob/living/simple_animal/slime/Destroy()
/mob/living/simple_animal/slime/proc/initialize_mutations()
/mob/living/simple_animal/slime/proc/set_colour(new_colour)
/mob/living/simple_animal/slime/update_name()
/mob/living/simple_animal/slime/proc/random_colour()
/mob/living/simple_animal/slime/regenerate_icons()
/mob/living/simple_animal/slime/on_reagent_change()
/mob/living/simple_animal/slime/updatehealth()
/mob/living/simple_animal/slime/adjust_bodytemperature()
/mob/living/simple_animal/slime/ObjBump(obj/O)
/mob/living/simple_animal/slime/Process_Spacemove(movement_dir = 0)
/mob/living/simple_animal/slime/get_status_tab_items()
/mob/living/simple_animal/slime/adjustFireLoss(amount, updating_health = TRUE, forced = FALSE, only_robotic = FALSE, only_organic = TRUE)
/mob/living/simple_animal/slime/bullet_act(obj/item/projectile/Proj, def_zone, piercing_hit = FALSE)
/mob/living/simple_animal/slime/emp_act(severity)
/mob/living/simple_animal/slime/MouseDrop(atom/movable/A as mob|obj)
/mob/living/simple_animal/slime/doUnEquip(obj/item/W, silent = FALSE)
/mob/living/simple_animal/slime/start_pulling(atom/movable/AM, state, force = move_force, supress_message = FALSE)
/mob/living/simple_animal/slime/attack_ui(slot)
/mob/living/simple_animal/slime/attack_slime(mob/living/simple_animal/slime/M)
/mob/living/simple_animal/slime/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/slime/attack_paw(mob/living/carbon/monkey/M)
/mob/living/simple_animal/slime/attack_larva(mob/living/carbon/alien/larva/L)
/mob/living/simple_animal/slime/attack_hulk(mob/living/carbon/human/user, does_attack_animation = 0)
/mob/living/simple_animal/slime/on_attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/slime/attack_alien(mob/living/carbon/alien/humanoid/M)
/mob/living/simple_animal/slime/attackby(obj/item/W, mob/living/user, params)
/mob/living/simple_animal/slime/proc/spawn_corecross()
/mob/living/simple_animal/slime/proc/apply_water()
/mob/living/simple_animal/slime/examine(mob/user)
/mob/living/simple_animal/slime/proc/discipline_slime(mob/user)
/mob/living/simple_animal/slime/pet
/mob/living/simple_animal/slime/can_unbuckle()
/mob/living/simple_animal/slime/can_buckle()
/mob/living/simple_animal/slime/get_mob_buckling_height(mob/seat)
/mob/living/simple_animal/slime/can_be_implanted()
/mob/living/simple_animal/slime/random/Initialize(mapload, new_colour, new_is_adult)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\slime_mobility.dm. ----------------------
/mob/living/simple_animal/slime/update_mobility()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\mob\living\simple_animal\slime\subtypes.dm. ----------------------
/mob/living/simple_animal/slime/proc/mutation_table(colour)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\movespeed\_movespeed_modifier.dm. ----------------------
/mob/proc/add_movespeed_modifier(datum/movespeed_modifier/type_or_datum, update = TRUE)
/mob/proc/remove_movespeed_modifier(datum/movespeed_modifier/type_id_datum, update = TRUE)
/mob/proc/add_or_update_variable_movespeed_modifier(datum/movespeed_modifier/type_id_datum, update = TRUE, multiplicative_slowdown)
/mob/vv_edit_var(var_name, var_value)
/mob/proc/has_movespeed_modifier(datum/movespeed_modifier/datum_type_id)
/mob/proc/update_config_movespeed()
/mob/proc/get_config_multiplicative_speed(floating = FALSE)
/mob/proc/update_movespeed()
/mob/proc/get_movespeed_modifiers()
/mob/proc/total_multiplicative_slowdown()
/mob/proc/get_movespeed_modifier_datum(id)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\newscaster\ghostread.dm. ----------------------
/mob/dead/observer/verb/read_news()
/mob/dead/observer/Topic(href, href_list)
/mob/dead/observer/proc/render_news_channel_list()
/mob/dead/observer/proc/render_news_channel(datum/news/feed_channel/FC)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\ninja\suit\ninjaDrainAct.dm. ----------------------
/mob/living/silicon/robot/ninjadrain_act(obj/item/clothing/suit/space/space_ninja/ninja_suit, mob/living/carbon/human/ninja, obj/item/clothing/gloves/space_ninja/ninja_gloves)
/mob/living/carbon/ninjadrain_act(obj/item/clothing/suit/space/space_ninja/ninja_suit, mob/living/carbon/human/ninja, obj/item/clothing/gloves/space_ninja/ninja_gloves)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\projectiles\projectile.dm. ----------------------
/mob/living/proc/check_limb_hit(hit_zone)
/mob/living/carbon/check_limb_hit(hit_zone)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\reagents\chemistry\reagents\other_reagents.dm. ----------------------
/mob/living/proc/bluespace_shuffle()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\research\xenobiology\xenobio_camera.dm. ----------------------
/mob/camera/aiEye/remote/xenobio
/mob/camera/aiEye/remote/xenobio/Initialize(mapload)
/mob/camera/aiEye/remote/xenobio/setLoc(var/t)
/mob/living/simple_animal/slime/CtrlClick(mob/user)
/mob/living/simple_animal/slime/AltClick(mob/user)
/mob/living/simple_animal/slime/ShiftClick(mob/user)
/mob/living/carbon/monkey/CtrlClick(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\research\xenobiology\crossbreeding\burning.dm. ----------------------
/mob/living/carbon/proc/apply_saved_bodyparts(list/datum/saved_bodypart/parts)
/mob/living/carbon/proc/save_bodyparts()
/mob/living/simple_animal/slime/transformedslime
/mob/living/simple_animal/slime/transformedslime/Reproduce() //Just in case.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\research\xenobiology\crossbreeding\_mobs.dm. ----------------------
/mob/living/simple_animal/pet/dog/corgi/puppy/slime
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\ruins\spaceruin_code\clericsden.dm. ----------------------
/mob/living/simple_animal/hostile/construct/proteon
/mob/living/simple_animal/hostile/construct/proteon/hostile //Style of mob spawned by trapped cult runes in the cleric ruin.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\shuttle\navigation_computer.dm. ----------------------
/mob/camera/aiEye/remote/shuttle_docker
/mob/camera/aiEye/remote/shuttle_docker/Initialize(mapload, obj/machinery/computer/camera_advanced/origin)
/mob/camera/aiEye/remote/shuttle_docker/setLoc(T)
/mob/camera/aiEye/remote/shuttle_docker/update_remote_sight(mob/living/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\shuttle\on_move.dm. ----------------------
/mob/onShuttleMove(turf/newT, turf/oldT, list/movement_force, move_dir, obj/docking_port/stationary/old_dock, obj/docking_port/mobile/moving_dock)
/mob/afterShuttleMove(turf/oldT, list/movement_force, shuttle_dir, shuttle_preferred_direction, move_dir, rotation)
/mob/living/lateShuttleMove(turf/oldT, list/movement_force, move_dir)
/mob/living/simple_animal/hostile/megafauna/onShuttleMove(turf/newT, turf/oldT, list/movement_force, move_dir, obj/docking_port/stationary/old_dock, obj/docking_port/mobile/moving_dock)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\shuttle\shuttle_rotate.dm. ----------------------
/mob/shuttleRotate(rotation, params)
/mob/dead/observer/shuttleRotate(rotation, params)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\shuttle\special.dm. ----------------------
/mob/living/simple_animal/drone/snowflake/bardrone
/mob/living/simple_animal/drone/snowflake/bardrone/Initialize(mapload)
/mob/living/simple_animal/hostile/alien/maid/barmaid
/mob/living/simple_animal/hostile/alien/maid/barmaid/Initialize(mapload)
/mob/living/simple_animal/hostile/alien/maid/barmaid/Destroy()
/mob/living/simple_animal/hostile/bear/fightpit
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\shuttle\shuttle_creation\shuttle_creator_eye.dm. ----------------------
/mob/camera/aiEye/remote/shuttle_creation
/mob/camera/aiEye/remote/shuttle_creation/Initialize(mapload)
/mob/camera/aiEye/remote/shuttle_creation/update_remote_sight(mob/living/user)
/mob/camera/aiEye/remote/shuttle_creation/relaymove(mob/user, direct)
/mob/camera/aiEye/remote/shuttle_creation/proc/can_move_to(var/turf/T)
/mob/camera/aiEye/remote/shuttle_creation/setLoc(T)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\spells\spell_types\devil.dm. ----------------------
/mob/living/proc/infernalphaseout()
/mob/living/proc/infernalphasein()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\surgery\bodyparts\dismemberment.dm. ----------------------
/mob/living/proc/regenerate_limbs(noheal = FALSE, list/excluded_limbs = list())
/mob/living/carbon/regenerate_limbs(noheal = FALSE, list/excluded_limbs = list())
/mob/living/proc/regenerate_limb(limb_zone, noheal)
/mob/living/carbon/regenerate_limb(limb_zone, noheal)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\surgery\bodyparts\helpers.dm. ----------------------
/mob/living/proc/get_bodypart(zone)
/mob/living/carbon/get_bodypart(zone)
/mob/proc/get_active_hand()
/mob/living/carbon/get_active_hand()
/mob/living/carbon/has_hand_for_held_index(i)
/mob/proc/has_left_hand(check_disabled = TRUE)
/mob/living/carbon/has_left_hand(check_disabled = TRUE)
/mob/living/carbon/alien/larva/has_left_hand()
/mob/proc/has_right_hand(check_disabled = TRUE)
/mob/living/carbon/has_right_hand(check_disabled = TRUE)
/mob/living/carbon/alien/larva/has_right_hand()
/mob/proc/has_left_leg()
/mob/living/carbon/has_left_leg()
/mob/proc/has_right_leg()
/mob/living/carbon/has_right_leg()
/mob/proc/get_num_arms(check_disabled = TRUE)
/mob/living/carbon/get_num_arms(check_disabled = TRUE)
/mob/proc/get_arm_ignore()
/mob/living/carbon/alien/larva/get_arm_ignore()
/mob/proc/get_num_legs(check_disabled = TRUE)
/mob/living/carbon/get_num_legs(check_disabled = TRUE)
/mob/proc/get_leg_ignore()
/mob/living/carbon/get_leg_ignore()
/mob/living/carbon/alien/larva/get_leg_ignore()
/mob/living/proc/get_missing_limbs(exclude_head = FALSE)
/mob/living/carbon/get_missing_limbs(exclude_head = FALSE)
/mob/living/carbon/alien/larva/get_missing_limbs(exclude_head = FALSE)
/mob/living/proc/get_disabled_limbs()
/mob/living/carbon/get_disabled_limbs()
/mob/living/carbon/alien/larva/get_disabled_limbs()
/mob/living/carbon/proc/remove_embedded_object(obj/item/I)
/mob/living/carbon/proc/remove_all_embedded_objects()
/mob/living/carbon/proc/has_embedded_objects(include_harmless=FALSE)
/mob/living/carbon/proc/newBodyPart(zone, robotic, fixed_icon)
/mob/living/carbon/monkey/newBodyPart(zone, robotic, fixed_icon)
/mob/living/carbon/alien/larva/newBodyPart(zone, robotic, fixed_icon)
/mob/living/carbon/alien/humanoid/newBodyPart(zone, robotic, fixed_icon)
/mob/living/carbon/proc/Digitigrade_Leg_Swap(swap_back)
/mob/living/carbon/proc/get_body_parts_flags()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\surgery\organs\ears.dm. ----------------------
/mob/proc/restoreEars()
/mob/living/carbon/restoreEars()
/mob/proc/adjustEarDamage()
/mob/living/carbon/adjustEarDamage(ddmg, ddeaf)
/mob/proc/minimumDeafTicks()
/mob/living/carbon/minimumDeafTicks(value)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\surgery\organs\helpers.dm. ----------------------
/mob/proc/getorgan(typepath)
/mob/proc/getorganszone(zone)
/mob/proc/getorganslot(slot)
/mob/living/carbon/getorgan(typepath)
/mob/living/carbon/getorganszone(zone, subzones = 0)
/mob/living/carbon/getorganslot(slot)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\surgery\organs\organ_internal.dm. ----------------------
/mob/living/proc/regenerate_organs()
/mob/living/carbon/regenerate_organs(only_one = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tcg\cards.dm. ----------------------
/mob/living/carbon/human/proc/SaveTCGCards()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\external.dm. ----------------------
/mob/var/list/tgui_open_uis = list()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\states.dm. ----------------------
/mob/proc/shared_ui_interaction(src_object)
/mob/living/shared_ui_interaction(src_object)
/mob/living/silicon/ai/shared_ui_interaction(src_object)
/mob/living/silicon/robot/shared_ui_interaction(src_object)
/mob/living/proc/shared_living_ui_distance(atom/movable/src_object, viewcheck = TRUE)
/mob/living/carbon/human/shared_living_ui_distance(atom/movable/src_object, viewcheck = TRUE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\status_composers.dm. ----------------------
/mob/living/silicon/proc/get_ui_access(atom/source)
/mob/living/silicon/robot/get_ui_access(atom/source)
/mob/living/silicon/ai/get_ui_access(atom/source)
/mob/living/silicon/pai/get_ui_access(atom/source)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\states\default.dm. ----------------------
/mob/proc/default_can_use_topic(src_object)
/mob/living/default_can_use_topic(src_object)
/mob/living/silicon/robot/default_can_use_topic(src_object)
/mob/living/silicon/ai/default_can_use_topic(src_object)
/mob/living/silicon/pai/default_can_use_topic(src_object)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\states\hands.dm. ----------------------
/mob/proc/hands_can_use_topic(src_object)
/mob/living/hands_can_use_topic(src_object)
/mob/living/silicon/robot/hands_can_use_topic(src_object)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\states\notcontained.dm. ----------------------
/mob/proc/notcontained_can_use_topic(src_object)
/mob/living/notcontained_can_use_topic(atom/src_object)
/mob/living/silicon/notcontained_can_use_topic(src_object)
/mob/living/simple_animal/drone/notcontained_can_use_topic(src_object)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\tgui\states\physical.dm. ----------------------
/mob/proc/physical_can_use_topic(src_object)
/mob/living/physical_can_use_topic(src_object)
/mob/living/silicon/physical_can_use_topic(src_object)
/mob/living/silicon/ai/physical_can_use_topic(src_object)
/mob/proc/physical_obscured_can_use_topic(src_object)
/mob/living/physical_obscured_can_use_topic(src_object)
/mob/living/silicon/physical_obscured_can_use_topic(src_object)
/mob/living/silicon/ai/physical_obscured_can_use_topic(src_object)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\vehicles\mecha\mech_melee_attack.dm. ----------------------
/mob/living/mech_melee_attack(obj/vehicle/sealed/mecha/mecha_attacker, mob/user)
/mob/living/carbon/human/mech_melee_attack(obj/vehicle/sealed/mecha/mecha_attacker, mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\vore\eating\living.dm. ----------------------
/mob/living
/mob/living/proc/init_vore()
/mob/living/proc/lazy_init_belly()
/mob/living/proc/vore_attack(var/mob/living/user, var/mob/living/prey, var/mob/living/pred)
/mob/living/proc/feed_grabbed_to_self(var/mob/living/user, var/mob/living/prey)
/mob/living/proc/feed_self_to_grabbed(var/mob/living/user, var/mob/living/pred)
/mob/living/proc/feed_grabbed_to_other(var/mob/living/user, var/mob/living/prey, var/mob/living/pred)
/mob/living/proc/perform_the_nom(var/mob/living/user, var/mob/living/prey, var/mob/living/pred, var/obj/belly/belly, var/delay)
/mob/living/proc/vore_process_resist()
/mob/living/proc/preyloop_refresh()
/mob/living/proc/escapeOOC()
/mob/living/proc/copy_to_prefs_vr()
/mob/living/proc/copy_from_prefs_vr()
/mob/living/proc/release_vore_contents(var/include_absorbed = TRUE, var/silent = FALSE)
/mob/living/proc/examine_bellies()
/mob/living/proc/show_pudge()
/mob/living/carbon/human/show_pudge()
/mob/living/proc/lick()
/mob/living/proc/get_taste_message(allow_generic = TRUE, datum/species/mrace)
/mob/living/proc/smell_someone()
/mob/living/proc/get_smell_message(allow_generic = TRUE, datum/species/mrace)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\vore\eating\vorepanel.dm. ----------------------
/mob/living
/mob/living/proc/insidePanel()
/mob/living/proc/updateVRPanel() //Panel popup update call from belly events.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\VR\vr_mob.dm. ----------------------
/mob/proc/build_virtual_character(mob/M)
/mob/living/carbon/build_virtual_character(mob/M)
/mob/living/carbon/human/build_virtual_character(mob/M, datum/outfit/outfit)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\modules\wiremod\shell\drone.dm. ----------------------
/mob/living/circuit_drone
/mob/living/circuit_drone/Initialize(mapload)
/mob/living/circuit_drone/updatehealth()
/mob/living/circuit_drone/spawn_gibs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\ai.dm. ----------------------
/mob/living/silicon/ai/DblClickOn(var/atom/A, params)
/mob/living/silicon/ai/ClickOn(var/atom/A, params)
/mob/living/silicon/ai/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/silicon/ai/RangedAttack(atom/A)
/mob/living/silicon/ai/CtrlShiftClickOn(var/atom/A)
/mob/living/silicon/ai/ShiftClickOn(var/atom/A)
/mob/living/silicon/ai/CtrlClickOn(var/atom/A)
/mob/living/silicon/ai/AltClickOn(var/atom/A)
/mob/living/silicon/ai/TurfAdjacent(var/turf/T)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\click.dm. ----------------------
/mob/proc/CommonClickOn(atom/A, params)
/mob/proc/ClickOn(atom/A, params)
/mob/DirectAccess(atom/target)
/mob/living/DirectAccess(atom/target)
/mob/proc/DblClickOn(atom/A, params)
/mob/proc/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/proc/RangedAttack(atom/A, params)
/mob/proc/RestrainedClickOn(atom/A)
/mob/proc/MiddleClickOn(atom/A)
/mob/living/carbon/MiddleClickOn(atom/A)
/mob/living/simple_animal/drone/MiddleClickOn(atom/A)
/mob/proc/ShiftClickOn(atom/A)
/mob/proc/CtrlClickOn(atom/A)
/mob/living/carbon/human/CtrlClick(mob/user)
/mob/proc/AltClickOn(atom/A)
/mob/living/carbon/AltClickOn(atom/A)
/mob/proc/TurfAdjacent(turf/T)
/mob/proc/CtrlShiftClickOn(atom/A)
/mob/proc/ShiftMiddleClickOn(atom/A, params)
/mob/proc/LaserEyes(atom/A, params)
/mob/living/LaserEyes(atom/A, params)
/mob/proc/face_atom(atom/A, ismousemovement = FALSE)
/mob/proc/MouseWheelOn(atom/A, delta_x, delta_y, params)
/mob/dead/observer/MouseWheelOn(atom/A, delta_x, delta_y, params)
/mob/proc/check_click_intercept(params,A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\cyborg.dm. ----------------------
/mob/living/silicon/robot/ClickOn(var/atom/A, var/params)
/mob/living/silicon/robot/MiddleClickOn(atom/A)
/mob/living/silicon/robot/CtrlShiftClickOn(atom/A)
/mob/living/silicon/robot/ShiftClickOn(atom/A)
/mob/living/silicon/robot/CtrlClickOn(atom/A)
/mob/living/silicon/robot/AltClickOn(atom/A)
/mob/living/silicon/robot/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/silicon/robot/RangedAttack(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\drag_drop.dm. ----------------------
/mob/proc/CanMobAutoclick(object, location, params)
/mob/living/carbon/CanMobAutoclick(atom/object, location, params)
/mob/proc/canMobMousedown(atom/object, location, params)
/mob/living/carbon/canMobMousedown(atom/object, location, params)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\item_attack.dm. ----------------------
/mob/living/attackby(obj/item/I, mob/living/user, params, attackchain_flags, damage_multiplier)
/mob/living/attacked_by(obj/item/I, mob/living/user, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/simple_animal/attacked_by(obj/item/I, mob/living/user, attackchain_flags = NONE, damage_multiplier = 1)
/mob/living/proc/pre_attacked_by(obj/item/I, mob/living/user)
/mob/living/proc/send_item_attack_message(obj/item/I, mob/living/user, hit_area, obj/item/bodypart/hit_bodypart)
/mob/proc/do_staggered_animation()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\observer.dm. ----------------------
/mob/dead/observer/DblClickOn(var/atom/A, var/params)
/mob/dead/observer/ClickOn(var/atom/A, var/params)
/mob/living/attack_ghost(mob/dead/observer/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\other_mobs.dm. ----------------------
/mob/living/carbon/human/UnarmedAttack(atom/A, proximity, intent = a_intent, attackchain_flags = NONE)
/mob/living/carbon/RestrainedClickOn(atom/A)
/mob/living/carbon/human/RangedAttack(atom/A, mouseparams)
/mob/living/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/RestrainedClickOn(atom/A)
/mob/living/carbon/monkey/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/carbon/monkey/RestrainedClickOn(atom/A)
/mob/living/carbon/alien/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/carbon/alien/RestrainedClickOn(atom/A)
/mob/living/carbon/alien/larva/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/slime/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/slime/RestrainedClickOn(atom/A)
/mob/living/simple_animal/drone/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/slime/RestrainedClickOn(atom/A)
/mob/living/carbon/true_devil/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/brain/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/silicon/pai/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/living/simple_animal/hostile/UnarmedAttack(atom/A, proximity, intent = a_intent, flags = NONE)
/mob/dead/new_player/ClickOn()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\overmind.dm. ----------------------
/mob/camera/blob/ClickOn(var/atom/A, var/params) //Expand blob
/mob/camera/blob/MiddleClickOn(atom/A) //Rally spores
/mob/camera/blob/CtrlClickOn(atom/A) //Create a shield
/mob/camera/blob/AltClickOn(atom/A) //Remove a blob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\right_click.dm. ----------------------
/mob/proc/RightClickOn(atom/A, params) //mostly a copy-paste from ClickOn()
/mob/proc/AltUnarmedAttack(atom/A, proximity_flag)
/mob/proc/AltRangedAttack(atom/A, params)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\right_other_mobs.dm. ----------------------
/mob/living/carbon/human/AltUnarmedAttack(atom/A, proximity)
/mob/living/carbon/human/AltRangedAttack(atom/A, params)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\telekinesis.dm. ----------------------
/mob/attack_tk(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\hud\action_button.dm. ----------------------
/mob/proc/update_action_buttons_icon(status_only = FALSE)
/mob/proc/update_action_buttons(reload_screen)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\hud\alert.dm. ----------------------
/mob/proc/throw_alert(category, type, severity, obj/new_master, override = FALSE)
/mob/proc/alert_timeout(atom/movable/screen/alert/alert, category)
/mob/proc/clear_alert(category, clear_override = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\hud\clockwork_marauder.dm. ----------------------
/mob/living/simple_animal/hostile/clockwork/guardian/create_mob_hud()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\hud\generic_dextrous.dm. ----------------------
/mob/living/simple_animal/create_mob_hud()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\hud\hud.dm. ----------------------
/mob/proc/create_mob_hud()
/mob/verb/button_pressed_F12()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_onclick\hud\human.dm. ----------------------
/mob/living/carbon/human/verb/toggle_hotkey_verbs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_rendering\mob.dm. ----------------------
/mob/proc/init_rendering()
/mob/proc/reload_rendering()
/mob/proc/dispose_rendering()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_rendering\atom_huds\atom_hud.dm. ----------------------
/mob/proc/reload_huds()
/mob/dead/new_player/reload_huds()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_rendering\atom_huds\data_huds.dm. ----------------------
/mob/living/carbon/proc/check_virus()
/mob/living/carbon/proc/update_suit_sensors()
/mob/living/proc/med_hud_set_health()
/mob/living/carbon/med_hud_set_health()
/mob/living/proc/med_hud_set_status()
/mob/living/carbon/med_hud_set_status()
/mob/living/proc/med_hud_set_radstatus()
/mob/living/carbon/human/proc/sec_hud_set_ID()
/mob/living/proc/sec_hud_set_implants()
/mob/living/carbon/human/proc/sec_hud_set_security_status()
/mob/living/proc/hud_set_nanite_indicator()
/mob/living/silicon/proc/diag_hud_set_health()
/mob/living/silicon/proc/diag_hud_set_status()
/mob/living/silicon/robot/proc/diag_hud_set_borgcell()
/mob/living/silicon/robot/proc/diag_hud_set_aishell() //Shows tracking beacons on the mech
/mob/living/silicon/ai/proc/diag_hud_set_deployed() //Shows tracking beacons on the mech
/mob/living/simple_animal/bot/proc/diag_hud_set_bothealth()
/mob/living/simple_animal/bot/proc/diag_hud_set_botstat() //On (With wireless on or off), Off, EMP'ed
/mob/living/simple_animal/bot/proc/diag_hud_set_botmode() //Shows a bot's current operation
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\_rendering\fullscreen\fullscreen.dm. ----------------------
/mob/proc/overlay_fullscreen(category, type, severity)
/mob/proc/clear_fullscreen(category, animated = 10)
/mob/proc/_remove_fullscreen_direct(atom/movable/screen/fullscreen/screen)
/mob/proc/wipe_fullscreens()
/mob/proc/hide_fullscreens()
/mob/proc/reload_fullscreen()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\__HELPERS\do_after.dm. ----------------------
/mob/proc/break_do_after_checks(list/checked_health, check_clicks)
/mob/living/break_do_after_checks(list/checked_health, check_clicks)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\__HELPERS\icons.dm. ----------------------
/mob/proc/AddCamoOverlay(atom/A)//A is the atom which we are using as the overlay.
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\__HELPERS\pronouns.dm. ----------------------
/mob/p_they(capitalized, temp_gender)
/mob/p_their(capitalized, temp_gender)
/mob/p_them(capitalized, temp_gender)
/mob/p_have(temp_gender)
/mob/p_are(temp_gender)
/mob/p_were(temp_gender)
/mob/p_do(temp_gender)
/mob/p_s(temp_gender)
/mob/p_es(temp_gender)
/mob/living/carbon/human/p_they(capitalized, temp_gender)
/mob/living/carbon/human/p_their(capitalized, temp_gender)
/mob/living/carbon/human/p_them(capitalized, temp_gender)
/mob/living/carbon/human/p_have(temp_gender)
/mob/living/carbon/human/p_are(temp_gender)
/mob/living/carbon/human/p_were(temp_gender)
/mob/living/carbon/human/p_do(temp_gender)
/mob/living/carbon/human/p_s(temp_gender)
/mob/living/carbon/human/p_es(temp_gender)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\__HELPERS\unsorted.dm. ----------------------
/mob/proc/apply_pref_name(role, client/C)
/mob/dview
/mob/dview/Initialize(mapload) //Properly prevents this mob from gaining huds or joining any global lists
/mob/dview/Destroy(force = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\__HELPERS\_cit_helpers.dm. ----------------------
/mob/living/carbon/proc/is_groin_exposed(list/L)
/mob/living/carbon/proc/is_chest_exposed(list/L)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\code\__SPLURTCODE\DEFINES\click.dm. ----------------------
/mob/var/next_click	= 0
/mob/var/next_move_adjust = 0 //Amount to adjust action/click delays by, + or -
/mob/var/next_move_modifier = 1 //Value to multiply action/click delays by
/mob/proc/timeToNextMove()
/mob/proc/changeNext_move(num)
/mob/living/changeNext_move(num)
/mob/proc/altclick_listed_turf(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\datums\status_effects\chems.dm. ----------------------
/mob/living/verb/toggle_hypno()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\cit_emotes.dm. ----------------------
/mob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\living\living.dm. ----------------------
/mob/living/Move(atom/newloc, direct)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\living\carbon\carbon.dm. ----------------------
/mob/living/carbon
/mob/living/carbon/proc/toggle_vore_mode()
/mob/living/carbon/proc/disable_vore_mode()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\living\carbon\damage_procs.dm. ----------------------
/mob/living/carbon/adjustStaminaLoss(amount, updating_health = TRUE, forced = FALSE, affected_zone = BODY_ZONE_CHEST)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\living\carbon\reindex_screams.dm. ----------------------
/mob/living
/mob/living/carbon/proc/reindex_screams()
/mob/living/carbon/human/reindex_screams()
/mob/living/proc/add_screams(var/list/screams)
/mob/living/proc/clear_screams()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\living\carbon\human\human.dm. ----------------------
/mob/living/proc/resist_embedded()
/mob/living/carbon/human/resist_embedded()
/mob/living/carbon/human/proc/remove_embedded_unsafe(obj/item/bodypart/L, obj/item/I, mob/user, painmul = 1)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_citadel\code\modules\mob\living\carbon\human\human_defense.dm. ----------------------
/mob/living/carbon/human/alt_attack_hand(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\datums\components\interaction_menu_granter.dm. ----------------------
/mob/verb/interact_with()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\datums\elements\holder_micro.dm. ----------------------
/mob/living/Adjacent(atom/neighbor)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\datums\interactions\interaction_mob.dm. ----------------------
/mob/living/proc/has_hands()
/mob/living/proc/has_mouth()
/mob/living/proc/mouth_is_free()
/mob/living/proc/foot_is_free()
/mob/living/carbon/human/has_mouth()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\datums\interactions\lewd_definitions.dm. ----------------------
/mob/living
/mob/living/proc/clear_lewd_datum()
/mob/living/Initialize(mapload)
/mob/living/proc/get_lust_tolerance()
/mob/living/proc/get_sexual_potency()
/mob/living/proc/add_lust(add)
/mob/living/proc/get_lust()
/mob/living/proc/set_lust(num)
/mob/living/proc/toggle_anus_always_accessible()
/mob/living/proc/has_genital(slot, visibility = REQUIRE_ANY)
/mob/living/proc/has_penis(visibility = REQUIRE_ANY)
/mob/living/proc/has_strapon(visibility = REQUIRE_ANY)
/mob/living/proc/get_strapon()
/mob/living/proc/can_penetrating_genital_cum()
/mob/living/proc/get_penetrating_genital_name(long = FALSE)
/mob/living/proc/has_balls(visibility = REQUIRE_ANY)
/mob/living/proc/has_vagina(visibility = REQUIRE_ANY)
/mob/living/proc/has_breasts(visibility = REQUIRE_ANY)
/mob/living/proc/has_anus(visibility = REQUIRE_ANY)
/mob/living/proc/has_hand(visibility = REQUIRE_ANY)
/mob/living/proc/has_feet(visibility = REQUIRE_ANY)
/mob/living/proc/get_num_feet()
/mob/living/proc/has_ears(visibility = REQUIRE_ANY)
/mob/living/proc/has_earsockets(visibility = REQUIRE_ANY)
/mob/living/proc/has_eyes(visibility = REQUIRE_ANY)
/mob/living/proc/has_eyesockets(visibility = REQUIRE_ANY)
/mob/living/proc/has_butt(visibility = REQUIRE_ANY)
/mob/living/proc/is_topless()
/mob/living/proc/is_bottomless()
/mob/living/proc/is_barefoot()
/mob/living/proc/moan()
/mob/living/proc/cum(mob/living/partner, target_orifice)
/mob/living/proc/is_fucking(mob/living/partner, orifice, obj/item/organ/genital/genepool, datum/interaction/lewd/lewd_datum)
/mob/living/proc/set_is_fucking(mob/living/partner, orifice, obj/item/organ/genital/genepool)
/mob/living/proc/get_shoes(singular = FALSE)
/mob/living/proc/handle_post_sex(amount, orifice, mob/living/partner)
/mob/living/proc/get_unconsenting(extreme = FALSE, list/ignored_mobs)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\datums\interactions\lewd_interactions.dm. ----------------------
/mob/living/list_interaction_attributes(mob/living/LM)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\datums\interactions\_interaction.dm. ----------------------
/mob/proc/list_interaction_attributes()
/mob/living/list_interaction_attributes()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\arousal\arousal.dm. ----------------------
/mob/living/carbon/human/do_climax(datum/reagents/R, atom/target, obj/item/organ/genital/G, spill) //Now I know how to modularize it :D
/mob/living/proc/pick_receiving_organ(mob/living/carbon/L, flag = CAN_CUM_INTO, title = "Climax", desc = "in what hole?")
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\clothing\underwear\_underwear.dm. ----------------------
/mob/living/carbon/human/proc/undershirt_hidden()
/mob/living/carbon/human/proc/underwear_hidden()
/mob/living/carbon/human/proc/socks_hidden()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\mob.dm. ----------------------
/mob/Login()
/mob/Logout()
/mob/Initialize(mapload)
/mob/add_context(atom/source, list/context, obj/item/held_item, mob/living/user)
/mob/proc/adjust_thirst(change, max = THIRST_LEVEL_THRESHOLD)
/mob/proc/set_thirst(change)
/mob/proc/can_use_production(obj/machinery/machine_target)
/mob/proc/can_use_production_topic(obj/machinery/rnd/production/machine_target, raw, ls)
/mob/proc/can_use_mechfab_topic(obj/machinery/mecha_part_fabricator/machine_target, action, var/list/params)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\mob_defines.dm. ----------------------
/mob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\dead\observer\observer.dm. ----------------------
/mob/dead/observer/proc/on_click_ctrl_shift(mob/user)
/mob/dead/observer/proc/on_click_ctrl(mob/user)
/mob/dead/observer/proc/quickicspawn(mob/user)
/mob/dead/observer/proc/HearNoPopup(message, atom/movable/speaker, message_language, raw_message, radio_freq, list/spans, message_mode, atom/movable/source)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\combat_indicator.dm. ----------------------
/mob/living/proc/set_combat_indicator(state)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\living.dm. ----------------------
/mob/living
/mob/living/proc/update_size(new_size, cur_size)
/mob/living/proc/adjust_mobsize(size)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\living_movement.dm. ----------------------
/mob/living/verb/layershift_up()
/mob/living/verb/layershift_down()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\ssd_indicator.dm. ----------------------
/mob/living/proc/set_ssd_indicator(state)
/mob/living/transfer_ckey(mob/new_mob, send_signal)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\typing_indicator_overrides.dm. ----------------------
/mob/living/silicon
/mob/living/simple_animal/slime
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\carbon\carbon.dm. ----------------------
/mob/living/carbon/proc/update_hunger_and_thirst_hud()
/mob/living/proc/pregoodbye(C)
/mob/living/proc/goodbye() //this must be separate because it's a loop!
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\carbon\life.dm. ----------------------
/mob/living/carbon/proc/handle_creampie()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\carbon\show.dm. ----------------------
/mob/living/carbon/verb/show_item()
/mob/living/carbon/proc/showoff()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\carbon\human\human.dm. ----------------------
/mob/living/carbon/human/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\silicon\silicon.dm. ----------------------
/mob/living/silicon
/mob/living/silicon/verb/robot_nom(mob/living/T in oview(1))
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\silicon\ai\ai.dm. ----------------------
/mob/living/silicon/ai
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\silicon\robot\robot.dm. ----------------------
/mob/living/silicon/robot
/mob/living/silicon/robot/modules/roleplay
/mob/living/silicon/robot/modules/roleplay/Initialize(mapload)
/mob/living/silicon/robot/modules/roleplay/binarycheck()
/mob/living/silicon/robot/verb/toggle_gender()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\bot\hugbot.dm. ----------------------
/mob/living/simple_animal/bot/hugbot
/mob/living/simple_animal/bot/hugbot/update_icon()
/mob/living/simple_animal/bot/medbot/Initialize(mapload)
/mob/living/simple_animal/bot/hugbot/bot_reset()
/mob/living/simple_animal/bot/hugbot/proc/soft_reset() //Allows the medibot to still actively perform its medical duties without being completely halted as a hard reset does.
/mob/living/simple_animal/bot/hugbot/set_custom_texts()
/mob/living/simple_animal/bot/hugbot/ui_data(mob/user)
/mob/living/simple_animal/bot/hugbot/ui_act(action, params)
/mob/living/simple_animal/bot/hugbot/attackby(obj/item/W as obj, mob/user as mob, params)
/mob/living/simple_animal/bot/medbot/attack_paw(mob/user)
/mob/living/simple_animal/bot/hugbot/attack_hand(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/hugbot/emag_act(mob/user)
/mob/living/simple_animal/bot/hugbot/proc/assess_patient(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/hugbot/process_scan(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/hugbot/handle_automated_action()
/mob/living/simple_animal/bot/hugbot/UnarmedAttack(atom/A)
/mob/living/simple_animal/bot/hugbot/proc/medicate_patient(mob/living/carbon/human/H)
/mob/living/simple_animal/bot/hugbot/explode()
/mob/living/simple_animal/bot/hugbot/proc/tip_over(mob/user)
/mob/living/simple_animal/bot/hugbot/proc/set_right(mob/user)
/mob/living/simple_animal/bot/hugbot/proc/handle_panic()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\friendly\doges.dm. ----------------------
/mob/living/simple_animal/pet/dog/cheems
/mob/living/simple_animal/pet/dog/cheems/Move(atom/newloc, direct)
/mob/living/simple_animal/pet/dog/cheems/attacked_by(obj/item/I, mob/living/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\alien.dm. ----------------------
/mob/living/simple_animal/hostile/alien
/mob/living/simple_animal/hostile/alien/drone
/mob/living/simple_animal/hostile/alien/sentinel
/mob/living/simple_animal/hostile/alien/queen
/mob/living/simple_animal/hostile/alien/maid
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\blood_drunk_miner.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\bubblegum.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/bubblegum
/mob/living/simple_animal/hostile/megafauna/bubblegum/ComponentInitialize()
/mob/living/simple_animal/hostile/megafauna/bubblegum/Move()
/mob/living/simple_animal/hostile/megafauna/bubblegum/OpenFire()
/mob/living/simple_animal/hostile/megafauna/bubblegum/charge()
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/bloodsmacks()
/mob/living/simple_animal/hostile/megafauna/bubblegum/proc/bloodsmack(turf/T, handedness)
/mob/living/simple_animal/hostile/megafauna/bubblegum/blood_warp()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\colossus.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/colossus/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\demonic_frost_miner.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner
/mob/living/simple_animal/hostile/megafauna/demonic_frost_miner/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\drake.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/dragon/ComponentInitialize()
/mob/living/simple_animal/hostile/megafauna/dragon/lesser/akatosh
/mob/living/simple_animal/hostile/megafauna/dragon/sand
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\gladiator.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/gladiator
/mob/living/simple_animal/hostile/megafauna/gladiator/ComponentInitialize()
/mob/living/simple_animal/hostile/megafauna/gladiator/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/gladiator/Life()
/mob/living/simple_animal/hostile/megafauna/gladiator/apply_damage(damage = 0,damagetype = BRUTE, def_zone = null, blocked = FALSE, forced = FALSE, spread_damage = FALSE, wound_bonus = 0, bare_wound_bonus = 0, sharpness = SHARP_NONE) //skyrat edit
/mob/living/simple_animal/hostile/megafauna/gladiator/Retaliate()
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/introduction(mob/living/target)
/mob/living/simple_animal/hostile/megafauna/gladiator/Move(atom/newloc, dir, step_x, step_y)
/mob/living/simple_animal/hostile/megafauna/gladiator/Bump(atom/A)
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/update_phase()
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/zweispin()
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/chargeattack(atom/target, var/range)
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/discharge(var/modifier = 1)
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/teleport(atom/target)
/mob/living/simple_animal/hostile/megafauna/gladiator/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/gladiator/proc/boneappletea(atom/target)
/mob/living/simple_animal/hostile/megafauna/gladiator/OpenFire()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\glaurung.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/Initialize()
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/proc/line_target(offset, range, atom/at = target)
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/proc/fire_line(var/list/turfs)
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/proc/fire_stream(var/atom/at = target)
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/OpenFire()
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/triple_swoop()
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/swoop_attack(fire_rain, atom/movable/manual_target, swoop_duration = 40)
/mob/living/simple_animal/hostile/megafauna/dragon/glaurung/AltClickOn(atom/movable/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\hierophant.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/hierophant
/mob/living/simple_animal/hostile/megafauna/hierophant/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\king_of_goats.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/king
/mob/living/simple_animal/hostile/megafauna/king/ComponentInitialize()
/mob/living/simple_animal/hostile/megafauna/king/ex_act(severity, target, origin)
/mob/living/simple_animal/hostile/megafauna/king/phase2
/mob/living/simple_animal/hostile/megafauna/king/phase2/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/king/Found(atom/A)
/mob/living/simple_animal/hostile/retaliate/goat/guard/Found(atom/A)
/mob/living/simple_animal/hostile/retaliate/goat/guard
/mob/living/simple_animal/hostile/retaliate/goat/guard/master
/mob/living/simple_animal/hostile/retaliate/goat/guard/pope
/mob/living/simple_animal/hostile/megafauna/king/Retaliate()
/mob/living/simple_animal/hostile/megafauna/king/phase2/Retaliate()
/mob/living/simple_animal/hostile/megafauna/king/phase2/proc/phase3_transition()
/mob/living/simple_animal/hostile/megafauna/king/phase2/update_icon()
/mob/living/simple_animal/hostile/megafauna/king/phase2/Life()
/mob/living/simple_animal/hostile/megafauna/king/proc/OnDeath()
/mob/living/simple_animal/hostile/megafauna/king/phase2/OnDeath()
/mob/living/simple_animal/hostile/megafauna/king/death()
/mob/living/simple_animal/hostile/megafauna/king/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/king/phase2/AttackingTarget()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\legion.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/legion
/mob/living/simple_animal/hostile/megafauna/legion/ComponentInitialize()
/mob/living/simple_animal/hostile/megafauna/legion/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\megafauna.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna
/mob/living/simple_animal/hostile/megafauna
/mob/living/simple_animal/hostile/megafauna/Found(atom/A)
/mob/living/simple_animal/hostile/megafauna/ListTargets()
/mob/living/simple_animal/hostile/megafauna/proc/Retaliate()
/mob/living/simple_animal/hostile/megafauna/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/hostile/megafauna/Life()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\rogueprocess.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/rogueprocess
/mob/living/simple_animal/hostile/megafauna/rogueprocess/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/adjustHealth(amount, updating_health, forced)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/OpenFire(target)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/Move()
/mob/living/simple_animal/hostile/megafauna/rogueprocess/Bump(atom/A)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/proc/plasmashot(atom/target)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/proc/plasmaburst(atom/target)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/proc/knockdown(range = 2)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/proc/shockwave(direction, range, wave_duration = 1.5)
/mob/living/simple_animal/hostile/megafauna/rogueprocess/proc/ultishockwave(range, iteration_duration = 5)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\sand.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/sand
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\megafauna\sif.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/sif
/mob/living/simple_animal/hostile/megafauna/sif/ComponentInitialize()
/mob/living/simple_animal/hostile/megafauna/sif/Initialize(mapload)
/mob/living/simple_animal/hostile/megafauna/sif/proc/rush()
/mob/living/simple_animal/hostile/megafauna/sif/Move()
/mob/living/simple_animal/hostile/megafauna/sif/proc/spinAttack()
/mob/living/simple_animal/hostile/megafauna/sif/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/megafauna/sif/proc/angered()
/mob/living/simple_animal/hostile/megafauna/sif/proc/enraged()
/mob/living/simple_animal/hostile/megafauna/sif/proc/special()
/mob/living/simple_animal/hostile/megafauna/sif/proc/default_attackspeed()
/mob/living/simple_animal/hostile/megafauna/sif/do_attack_animation(atom/A, visual_effect_icon,used_item, no_effect)
/mob/living/simple_animal/hostile/megafauna/sif/AttackingTarget()
/mob/living/simple_animal/hostile/megafauna/sif/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/megafauna/sif/MoveToTarget(list/possible_targets)
/mob/living/simple_animal/hostile/megafauna/sif/ex_act(severity, target)
/mob/living/simple_animal/hostile/megafauna/sif/LoseTarget()
/mob/living/simple_animal/hostile/megafauna/sif/Moved()
/mob/living/simple_animal/hostile/megafauna/sif/Bump(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\basilisk.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/basilisk/watcher/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\goldgrub.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/goldgrub/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\goliath.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/goliath/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\hivelord.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/hivelord/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\imp.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/imp
/mob/living/simple_animal/hostile/asteroid/imp/ComponentInitialize()
/mob/living/simple_animal/hostile/asteroid/imp/attacked_by(obj/item/I, mob/living/user)
/mob/living/simple_animal/hostile/asteroid/imp/bullet_act(obj/item/projectile/P)
/mob/living/simple_animal/hostile/asteroid/imp/Aggro()
/mob/living/simple_animal/hostile/asteroid/imp/LoseAggro()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\shamblingminer.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/miner
/mob/living/simple_animal/hostile/asteroid/miner/ComponentInitialize()
/mob/living/simple_animal/hostile/asteroid/miner/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\candy.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/candy
/mob/living/simple_animal/hostile/asteroid/elite/candy/ComponentInitialize()
/mob/living/simple_animal/hostile/asteroid/elite/candy/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/candy/proc/bloodcharge(target)
/mob/living/simple_animal/hostile/asteroid/elite/candy/proc/bloodytrap(mob/target)
/mob/living/simple_animal/hostile/asteroid/elite/candy/proc/meatshield()
/mob/living/simple_animal/hostile/asteroid/elite/candy/proc/knockdown()
/mob/living/simple_animal/hostile/asteroid/elite/candy/proc/blood_charge_2(var/move_dir, var/times_ran)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\drakeling.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/drakeling
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/ComponentInitialize()
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/proc/lava_moat()
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/proc/lava_around()
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/proc/fire_spew()
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/proc/fire_moat()
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/proc/fire_wall(dir, range)
/mob/living/simple_animal/hostile/asteroid/elite/drakeling/proc/lava_wall(dir, range)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\elite.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite
/mob/living/simple_animal/hostile/asteroid/elite/death(gibbed)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\fanaticminer.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/ComponentInitialize()
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/OpenFire()
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/proc/axe_slam(target)
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/proc/summon_shambler(target)
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/proc/dash(atom/dash_target)
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/proc/axe_throw(target)
/mob/living/simple_animal/hostile/asteroid/elite/minerpriest/drop_loot()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\goliath_broodmother.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/broodmother/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\herald.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/herald/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\legionnaire.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/legionnaire/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\mob\living\simple_animal\hostile\mining_mobs\elites\pandora.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/elite/pandora/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\pixel_shift\pixel_shift.dm. ----------------------
/mob
/mob/proc/unpixel_shift()
/mob/living/unpixel_shift()
/mob/proc/pixel_shift(direction)
/mob/living/set_pull_offsets(mob/living/pull_target, grab_state)
/mob/living/reset_pull_offsets(mob/living/pull_target, override)
/mob/living/pixel_shift(direction)
/mob/living/Login()
/mob/living/CanAllowThrough(atom/movable/mover, turf/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\projectiles\guns\energy\kinetic_accelerator.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/explosivelegion
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/explosivelegion/death()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_sand\code\modules\resize\resizing.dm. ----------------------
/mob/living/proc/handle_micro_bump_helping(mob/living/target)
/mob/living/proc/handle_micro_bump_other(mob/living/target)
/mob/living/proc/macro_step_around(mob/living/target)
/mob/living/proc/micro_step_under(mob/living/target)
/mob/living/carbon/proc/sizediffStamLoss(mob/living/carbon/target)
/mob/living/carbon/proc/sizediffStun(mob/living/carbon/target)
/mob/living/carbon/proc/sizediffBruteloss(mob/living/carbon/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\mind.dm. ----------------------
/mob/living/mind_initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\genitals\genitals_interface.dm. ----------------------
/mob/living/verb/genital_menu()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\interactions\lewd\lewd_definitions.dm. ----------------------
/mob/living/proc/lustcap(amt)
/mob/living/carbon/proc/check_stimulation(amount, genital)
/mob/living/proc/get_fluid_mod(obj/item/organ/genital/G)
/mob/living/proc/check_orgasm(datum/source, R, target, obj/item/organ/genital/sender, receiver, spill)
/mob/living/carbon/handle_post_sex(amount, orifice, mob/living/partner, organ = null)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\interactions\lewd\lewd_interactions.dm. ----------------------
/mob/living/list_interaction_attributes(mob/living/LM)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\interactions\lewd\_lewd.dm. ----------------------
/mob/living
/mob/living/has_anus(visibility = REQUIRE_ANY)
/mob/living/add_lust(add)
/mob/living/set_lust(num)
/mob/living/moan()
/mob/living/proc/get_refraction_dif() //Got snapped in upstream, may delete later when I figure something out
/mob/living/proc/has_belly(var/nintendo = REQUIRE_ANY)
/mob/living/cum(mob/living/partner, target_orifice)
/mob/living/get_unconsenting(extreme, list/ignored_mobs, var/unholy)
/mob/living/proc/has_legs(nintendo = REQUIRE_ANY)
/mob/living/proc/do_oral_self(mob/living/user, var/fucktarget = "penis")
/mob/living/proc/do_breastfuck_self(mob/living/user)
/mob/living/proc/nuzzle_belly(mob/living/target)
/mob/living/proc/do_bellyfuck(mob/living/partner)
/mob/living/proc/do_breastsmother(mob/living/target)
/mob/living/proc/lick_sweat(mob/living/target)
/mob/living/proc/smother_armpit(mob/living/target)
/mob/living/proc/lick_armpit(mob/living/target)
/mob/living/proc/fuck_armpit(mob/living/target)
/mob/living/proc/do_pitjob(mob/living/target)
/mob/living/proc/do_boobjob(mob/living/target)
/mob/living/proc/lick_nuts(mob/living/target)
/mob/living/proc/do_cockfuck(mob/living/target)
/mob/living/proc/do_nipfuck(mob/living/target)
/mob/living/proc/do_thighfuck(mob/living/target)
/mob/living/proc/do_thighjob(mob/living/target)
/mob/living/proc/do_facefart(mob/living/carbon/target)
/mob/living/proc/do_crotchfart(mob/living/carbon/target)
/mob/living/proc/do_fartfuck(mob/living/target)
/mob/living/proc/suck_fart(mob/living/target)
/mob/living/proc/do_faceshit(mob/living/carbon/target)
/mob/living/proc/do_crotchshit(mob/living/carbon/target)
/mob/living/proc/do_shitfuck(mob/living/carbon/target)
/mob/living/proc/suck_shit(mob/living/target)
/mob/living/proc/piss_over(mob/living/target)
/mob/living/carbon/proc/piss_mouth(mob/living/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\mutations\telekenisis.dm. ----------------------
/mob/living/carbon/attack_tk(mob/living/carbon/owner)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\datums\traits\trait_actions.dm. ----------------------
/mob/living/proc/alterlimbs()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\game\data_huds.dm. ----------------------
/mob/living/carbon/human/proc/set_antag_target_indicator()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\game\objects\items\lewd_items\chastity_hypno\chastity_hypnosis.dm. ----------------------
/mob/living/carbon/proc/remove_chastity_hypno_effects()
/mob/living/carbon/verb/remove_chastity_hypnosis()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\qareen\qareen.dm. ----------------------
/mob/living/simple_animal/qareen
/mob/living/simple_animal/qareen/Initialize(mapload)
/mob/living/simple_animal/qareen/proc/random_qareen_name()
/mob/living/simple_animal/qareen/Login()
/mob/living/simple_animal/qareen/Life(seconds, times_fired)
/mob/living/simple_animal/qareen/get_status_tab_items()
/mob/living/simple_animal/qareen/update_health_hud()
/mob/living/simple_animal/qareen/med_hud_set_health()
/mob/living/simple_animal/qareen/med_hud_set_status()
/mob/living/simple_animal/qareen/say(message, bubble_type, var/list/spans = list(), sanitize = TRUE, datum/language/language = null, ignore_spam = FALSE, forced = null)
/mob/living/simple_animal/qareen/ex_act(severity, target, origin)
/mob/living/simple_animal/qareen/wave_ex_act(power, datum/wave_explosion/explosion, dir)
/mob/living/simple_animal/qareen/blob_act(obj/structure/blob/B)
/mob/living/simple_animal/qareen/singularity_act()
/mob/living/simple_animal/qareen/narsie_act()
/mob/living/simple_animal/qareen/ratvar_act()
/mob/living/simple_animal/qareen/attackby(obj/item/W, mob/living/user, params)
/mob/living/simple_animal/qareen/proc/reset_inhibit()
/mob/living/simple_animal/qareen/adjustHealth(amount, updating_health = TRUE, forced = FALSE)
/mob/living/simple_animal/qareen/dust(just_ash, drop_items, force)
/mob/living/simple_animal/qareen/gib()
/mob/living/simple_animal/qareen/death()
/mob/living/simple_animal/qareen/proc/reveal(time)
/mob/living/simple_animal/qareen/proc/stun(time)
/mob/living/simple_animal/qareen/proc/update_spooky_icon()
/mob/living/simple_animal/qareen/proc/castcheck(essence_cost)
/mob/living/simple_animal/qareen/proc/unlock(essence_cost)
/mob/living/simple_animal/qareen/proc/change_essence_amount(essence_amt, silent = FALSE, source = null)
/mob/living/simple_animal/qareen/proc/telekinesis_cooldown_end()
/mob/living/simple_animal/qareen/proc/death_reset()
/mob/living/simple_animal/qareen/proc/qareenThrow(over, mob/user, obj/item/throwable)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\qareen\qareen_abilities.dm. ----------------------
/mob/living/simple_animal/qareen/ClickOn(atom/A, params) //qareens can't interact with the world directly.
/mob/living/simple_animal/qareen/proc/Harvest(mob/living/carbon/human/target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\defines_init.dm. ----------------------
/mob/living/carbon/wendigo
/mob/living/carbon/wendigo/Initialize()
/mob/living/carbon/wendigo/Destroy()
/mob/living/carbon/wendigo/update_body_parts()
/mob/living/carbon/wendigo/can_hold_items()
/mob/living/carbon/wendigo/IsAdvancedToolUser()
/mob/living/carbon/wendigo/is_literate()
/mob/living/carbon/wendigo/canBeHandcuffed()
/mob/living/carbon/wendigo/update_inv_handcuffed()
/mob/living/carbon/wendigo/update_inv_legcuffed()
/mob/living/carbon/wendigo/create_internal_organs()
/mob/living/carbon/wendigo/movement_delay()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\examine.dm. ----------------------
/mob/living/carbon/wendigo/examine(mob/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\genitals.dm. ----------------------
/mob/living/carbon/wendigo/has_penis(nintendo)
/mob/living/carbon/wendigo/has_strapon(nintendo)
/mob/living/carbon/wendigo/has_anus(nintendo)
/mob/living/carbon/wendigo/has_balls(nintendo)
/mob/living/carbon/wendigo/has_belly(nintendo)
/mob/living/carbon/wendigo/has_breasts(nintendo)
/mob/living/carbon/wendigo/has_butt(nintendo)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\metabolization.dm. ----------------------
/mob/living/carbon/wendigo/proc/metabolize_hunger()
/mob/living/carbon/wendigo/reagent_check(datum/reagent/R)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\mob_defense.dm. ----------------------
/mob/living/carbon/wendigo/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/wendigo/handle_breath_temperature(datum/gas_mixture/breath)
/mob/living/carbon/wendigo/handle_fire()
/mob/living/carbon/wendigo/adjustBruteLoss(amount, updating_health, forced, only_robotic, only_organic)
/mob/living/carbon/wendigo/adjustFireLoss(amount, updating_health, forced, only_robotic, only_organic)
/mob/living/carbon/wendigo/adjustToxLoss(amount, updating_health, forced, toxins_type)
/mob/living/carbon/wendigo/adjustOxyLoss(amount, updating_health, forced)
/mob/living/carbon/wendigo/adjustCloneLoss(amount, updating_health, forced)
/mob/living/carbon/wendigo/adjustStaminaLoss(amount, updating_health, forced, affected_zone)
/mob/living/carbon/wendigo/electrocute_act(shock_damage, obj/source, siemens_coeff = 1, flags = NONE, safety = 0, override = 0, tesla_shock = 0, illusion = 0, stun = TRUE)
/mob/living/carbon/wendigo/Stun(amount, updating, ignore_canstun)
/mob/living/carbon/wendigo/Knockdown(amount, updating, ignore_canknockdown, override_hardstun, override_stamdmg)
/mob/living/carbon/wendigo/Unconscious(amount, updating, ignore_canunconscious)
/mob/living/carbon/wendigo/bleed(amt)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\mob_equip.dm. ----------------------
/mob/living/carbon/wendigo/can_equip(obj/item/I, slot, disable_warning, bypass_equip_delay_self, clothing_check, list/return_warning)
/mob/living/carbon/wendigo/equip_to_slot(obj/item/I, slot)
/mob/living/carbon/wendigo/doUnEquip(obj/item/I, force, newloc, no_move, invdrop = TRUE, silent)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\update_icons.dm. ----------------------
/mob/living/carbon/wendigo/setDir(newdir, ismousemovement)
/mob/living/carbon/wendigo/regenerate_icons()
/mob/living/carbon/wendigo/update_inv_gloves()
/mob/living/carbon/wendigo/update_inv_glasses()
/mob/living/carbon/wendigo/update_inv_ears()
/mob/living/carbon/wendigo/update_inv_ears_extra()
/mob/living/carbon/wendigo/update_inv_belt()
/mob/living/carbon/wendigo/update_inv_back()
/mob/living/carbon/wendigo/update_inv_neck()
/mob/living/carbon/wendigo/update_inv_hands()
/mob/living/carbon/wendigo/update_inv_head()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\wendigo_defense.dm. ----------------------
/mob/living/carbon/wendigo/attack_hulk(mob/living/carbon/human/user, does_attack_animation = FALSE)
/mob/living/carbon/wendigo/on_attack_hand(mob/living/carbon/human/M)
/mob/living/carbon/wendigo/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\antagonists\wendigo\mob\_on_click.dm. ----------------------
/mob/living/carbon/wendigo/UnarmedAttack(atom/A, proximity)
/mob/living/carbon/wendigo/canUseTopic(atom/movable/M, be_close=FALSE, no_dextery=FALSE, no_tk=FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\arousal\arousal.dm. ----------------------
/mob/living/carbon/human/mob_climax_partner(obj/item/organ/genital/G, mob/living/L, spillage, mb_time, obj/item/organ/genital/Lgen, forced = FALSE)
/mob/living/proc/receive_climax(mob/living/partner, obj/item/organ/genital/receiver, obj/item/organ/genital/source, spill, forced)
/mob/living/proc/impregnate(mob/living/partner, obj/item/organ/W, baby_type = /mob/living/carbon/human)
/mob/living/carbon/human/do_climax(datum/reagents/R, atom/target, obj/item/organ/genital/sender, spill, cover = FALSE, obj/item/organ/genital/receiver)
/mob/living/carbon/human/mob_fill_container(obj/item/organ/genital/G, obj/item/reagent_containers/container, mb_time, obj/item/milking_machine/M)
/mob/living/carbon/human/proc/mob_climax_over(obj/item/organ/genital/G, mob/living/L, spillage = TRUE, mb_time = 30)
/mob/living/carbon/human/proc/getPercentAroused()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\arousal\genitals.dm. ----------------------
/mob/living/carbon/human/update_genitals()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\events\crystalline_reentry.dm. ----------------------
/mob/living/simple_animal/hostile/asteroid/basilisk/tendril
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\emote.dm. ----------------------
/mob/emote(act, m_type, message, intentional)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\femclaw.dm. ----------------------
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle/newclaw
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle/newclaw/alphaclaw
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle/newclaw/death()
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle/newclaw/proc/show_cock()
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle/newclaw/proc/hide_cock()
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle/newclaw/handle_post_sex(amount, orifice, mob/living/partner)
/mob/living/simple_animal/hostile/deathclaw/funclaw/femclaw
/mob/living/simple_animal/hostile/deathclaw/funclaw/femclaw/mommyclaw
/mob/living/simple_animal/hostile/deathclaw/funclaw/femclaw/death()
/mob/living/simple_animal/hostile/deathclaw/funclaw/femclaw/AttackingTarget()
/mob/living/simple_animal/hostile/deathclaw/funclaw/femclaw/proc/pickNewFemHole(mob/living/M)
/mob/living/simple_animal/hostile/deathclaw/funclaw/femclaw/proc/do_femlewd_action(mob/living/M)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\inventory.dm. ----------------------
/mob/doUnEquip(obj/item/I, force, newloc, no_move, invdrop, silent)
/mob/equip_to_slot_if_possible(obj/item/W, slot, qdel_on_fail = FALSE, disable_warning = FALSE, redraw_mob = TRUE, bypass_equip_delay_self = FALSE, clothing_check = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\mob.dm. ----------------------
/mob/Initialize()
/mob/Destroy()
/mob/northshift()
/mob/southshift()
/mob/eastshift()
/mob/westshift()
/mob/verb/tilt_left()
/mob/verb/tilt_right()
/mob/proc/has_spell(spelltype)
/mob/proc/create_player_panel()
/mob/verb/check_out(atom/A as mob in view())
/mob/proc/allow_vampiric_ability(check_anti_magic = TRUE, check_holy = TRUE, check_garlic_neck = TRUE, check_garlic_blood = TRUE, check_stake = TRUE, silent = TRUE)
/mob/can_use_production(obj/machinery/machine_target)
/mob/on_item_dropped(obj/item/I)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\mob_defines.dm. ----------------------
/mob
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\mob_helpers.dm. ----------------------
/mob/common_trait_examine()
/mob/can_read(obj/O)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\mob_movement.dm. ----------------------
/mob/Process_Spacemove(movement_dir = 0)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\say_vr.dm. ----------------------
/mob/living/verb/player_narrate(message as message)
/mob/living/verb/subtle_indicator()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\dead\dead.dm. ----------------------
/mob/dead/check_out(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\dead\new_player\login.dm. ----------------------
/mob/dead/new_player/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\dead\new_player\new_player.dm. ----------------------
/mob/dead/new_player/proc/new_player_panel()
/mob/dead/new_player/proc/playerpolls()
/mob/dead/new_player/Topic(href, list/href_list)
/mob/dead/new_player/ViewManifest()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\dead\observer\observer.dm. ----------------------
/mob/dead/observer/view_manifest()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\living.dm. ----------------------
/mob/living
/mob/living/proc/change_gender()
/mob/living/proc/toggle_admin_freeze(client/admin)
/mob/living/proc/toggle_admin_sleep(client/admin)
/mob/living/adjust_mobsize()
/mob/living/do_resist_grab(moving_resist, forced, silent = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\living_defines.dm. ----------------------
/mob/living
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\living_mobility.dm. ----------------------
/mob/living/set_resting(new_resting, silent, updating)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\living_movement.dm. ----------------------
/mob
/mob/living/layershift_up()
/mob/living/layershift_down()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\living_signals.dm. ----------------------
/mob/living/ComponentInitialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\login.dm. ----------------------
/mob/living/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\logout.dm. ----------------------
/mob/living/Logout()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\navigation.dm. ----------------------
/mob/living
/mob/living/verb/navigate()
/mob/living/proc/create_navigation()
/mob/living/proc/shine_navigation()
/mob/living/proc/cut_navigation()
/mob/living/proc/find_nearest_stair_or_ladder(direction)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\say.dm. ----------------------
/mob/living/treat_message(message)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\carbon.dm. ----------------------
/mob/living/carbon/is_muzzled()
/mob/living/carbon/cuff_resist(obj/item/I, breakouttime = 600, cuff_break = 0)
/mob/living/carbon/clear_cuffs(obj/item/I, cuff_break)
/mob/living/carbon/proc/clothing_burst(throw_clothes = FALSE)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\carbon_defense.dm. ----------------------
/mob/living/carbon/attacked_by(obj/item/I, mob/living/user, attackchain_flags = NONE, damage_multiplier = 1)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\human\human.dm. ----------------------
/mob/living/carbon/human/Login()
/mob/living/carbon/human/Logout()
/mob/living/carbon/human/wash_cream()
/mob/living/carbon/human/ComponentInitialize()
/mob/living/carbon/human/species/mammal/shadekin
/mob/living/carbon/human/is_literate()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\human\human_defense.dm. ----------------------
/mob/living/carbon/human/on_attack_hand(mob/user, act_intent = user.a_intent, unarmed_attack_flags)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\human\human_defines.dm. ----------------------
/mob/living/carbon/human
/mob/living/carbon/human/Initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\human\inventory.dm. ----------------------
/mob/living/carbon/human/proc/smart_equip_suitstorage() // put held thing in suit storage or take the item from it
/mob/living/carbon/human/proc/smart_equip_rpocket() // put held thing in right pocket or take the item from it
/mob/living/carbon/human/proc/smart_equip_lpocket() // put held thing in left pocket or take the item from it
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\human\update_icons.dm. ----------------------
/mob/living/carbon/human/update_inv_back()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\carbon\human\species_types\zombies2.dm. ----------------------
/mob/living/carbon/human/proc/undeath(mob/living/M)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\silicon\silicon.dm. ----------------------
/mob/living/silicon/ai_roster()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\silicon\pai\pai.dm. ----------------------
/mob/living/silicon/pai/verb/toggle_gender()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\silicon\robot\dogborg_equipment.dm. ----------------------
/mob/living/silicon/robot
/mob/living/silicon/robot/proc/leap_at(atom/A)
/mob/living/silicon/robot/throw_impact(atom/hit_atom, datum/thrownthing/throwingdatum)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\silicon\robot\inventory.dm. ----------------------
/mob/living/silicon/robot/activate_module(obj/item/item_module)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\silicon\robot\robot.dm. ----------------------
/mob/living/silicon/robot/toggle_gender()
/mob/living/silicon/robot/modules/syndicate/slaver/medical
/mob/living/silicon/robot/modules/syndicate/slaver/medical/Initialize()
/mob/living/silicon/robot/modules/slaver
/mob/living/silicon/robot/modules/slaver/Initialize()
/mob/living/silicon/robot/Initialize(mapload)
/mob/living/silicon/robot/pick_module()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\simple_animal.dm. ----------------------
/mob/living/simple_animal/verb/toggle_gender()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\bot\medbot.dm. ----------------------
/mob/living/simple_animal/bot/medbot/catmedbot
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\friendly\mouse.dm. ----------------------
/mob/living/simple_animal/mouse/boommouse
/mob/living/simple_animal/mouse/boommouse/Initialize()
/mob/living/simple_animal/mouse/boommouse/death(gibbed, toast)
/mob/living/simple_animal/mouse/boommouse/attackby(obj/item/I, mob/living/user, params)
/mob/living/simple_animal/hostile/bigmouse
/mob/living/simple_animal/hostile/bigmouse/ComponentInitialize()
/mob/living/simple_animal/hostile/bigmouse/Initialize()
/mob/living/simple_animal/hostile/bigmouse/attack_hand(mob/living/carbon/M)
/mob/living/simple_animal/hostile/bigmouse/attack_paw(mob/living/carbon/monkey/M)
/mob/living/simple_animal/hostile/bigmouse/attack_alien(mob/living/carbon/alien/M)
/mob/living/simple_animal/hostile/bigmouse/attack_animal(mob/living/simple_animal/M)
/mob/living/simple_animal/mouse/mentor
/mob/living/simple_animal/mouse/mentor/Initialize()
/mob/living/simple_animal/mouse/admin
/mob/living/simple_animal/mouse/admin/Initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\gremlin\gremlin.dm. ----------------------
/mob/living/simple_animal/hostile/gremlin
/mob/living/simple_animal/hostile/gremlin/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\carrion.dm. ----------------------
/mob/living/simple_animal/hostile/carrion
/mob/living/simple_animal/hostile/carrion/ComponentInitialize()
/mob/living/simple_animal/hostile/carrion/OpenFire(atom/the_target)
/mob/living/simple_animal/hostile/carrion/Initialize()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\clockwork.dm. ----------------------
/mob/living/simple_animal/hostile/clockcultistmelee
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\clockworkmechanic.dm. ----------------------
/mob/living/simple_animal/hostile/boss/clockcultistboss
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\clockworkranged.dm. ----------------------
/mob/living/simple_animal/hostile/clockcultistranged
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\clockworktank.dm. ----------------------
/mob/living/simple_animal/hostile/clocktank
/mob/living/simple_animal/hostile/clocktank/weak
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\crazysci.dm. ----------------------
/mob/living/simple_animal/hostile/crazysci
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\cultleader.dm. ----------------------
/mob/living/simple_animal/hostile/cultleader
/mob/living/simple_animal/hostile/cultleader/ComponentInitialize()
/mob/living/simple_animal/hostile/cultleader/OpenFire(atom/the_target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\cultmelee.dm. ----------------------
/mob/living/simple_animal/hostile/cultistmelee
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\cultranged.dm. ----------------------
/mob/living/simple_animal/hostile/cultistranged
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\dancer.dm. ----------------------
/mob/living/dancercaptain
/mob/living/dancercaptain/Move(atom/newloc, direct)
/mob/living/dancercaptain/proc/move_part_2(atom/newloc, direct)
/mob/living/dancercaptain/proc/move_part_3(atom/newloc, direct)
/mob/living/dancercaptain/Initialize()
/mob/living/dancercaptain/proc/mtimer()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\deth.dm. ----------------------
/mob/living/simple_animal/hostile/deth
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\heavymaniac.dm. ----------------------
/mob/living/simple_animal/hostile/heavymaniac
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\spiderassault.dm. ----------------------
/mob/living/simple_animal/hostile/sptrooper
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\deathclaw\deathclaw.dm. ----------------------
/mob/living/simple_animal/hostile/deathclaw
/mob/living/simple_animal/hostile/deathclaw/pacifist
/mob/living/simple_animal/hostile/deathclaw/bullet_act(obj/item/projectile/Proj)
/mob/living/simple_animal/hostile/deathclaw/do_attack_animation(atom/A, visual_effect_icon, obj/item/used_item, no_effect)
/mob/living/simple_animal/hostile/deathclaw/AttackingTarget()
/mob/living/simple_animal/hostile/deathclaw/Goto(target, delay, minimum_distance)
/mob/living/simple_animal/hostile/deathclaw/Move()
/mob/living/simple_animal/hostile/deathclaw/proc/Charge()
/mob/living/simple_animal/hostile/deathclaw/charge_end(list/effects_to_destroy)
/mob/living/simple_animal/hostile/deathclaw/Bump(atom/A)
/mob/living/simple_animal/hostile/deathclaw/throw_impact(atom/A)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\deathclaw\funclaw.dm. ----------------------
/mob/living/simple_animal/hostile/deathclaw/funclaw
/mob/living/simple_animal/hostile/deathclaw/funclaw/gentle
/mob/living/simple_animal/hostile/deathclaw/funclaw/abomination
/mob/living/simple_animal/hostile/deathclaw/funclaw/AttackingTarget()
/mob/living/simple_animal/hostile/deathclaw/funclaw/proc/pickNewHole(mob/living/M)
/mob/living/simple_animal/hostile/deathclaw/funclaw/proc/do_lewd_action(mob/living/M)
/mob/living/simple_animal/hostile/deathclaw/funclaw/cum(mob/living/M)
/mob/living/simple_animal/hostile/deathclaw/funclaw/proc/slap(mob/living/M)
/mob/living/simple_animal/hostile/deathclaw/funclaw/proc/tearSlot(mob/living/M, slot)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\megafauna\blood_drunk_miner.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/blood_drunk_miner/GiveTarget(new_target)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\megafauna\king_of_goats.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/king/Initialize(mapload)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\megafauna\penguinhiero.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/hierophant
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\modules\mob\living\simple_animal\hostile\megafauna\sand.dm. ----------------------
/mob/living/simple_animal/hostile/megafauna/sand
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\modular_splurt\code\_onclick\observer.dm. ----------------------
/mob/living/proc/do_ass_slap(mob/dead/observer/user)
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\tools\HubMigrator\HubMigrator.dm. ----------------------
/mob/verb/generate_migration_script()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\tools\Redirector\Redirector.dm. ----------------------
/mob/Login()
-- FILE: C:\Users\Nicholas\Desktop\Nick\Development\BYOND\Fungus\tools\SS13SmoothingCutter\Cutter.dm. ----------------------
/mob/verb/ChooseDMI(dmi as file)
